{"version":3,"sources":["styles.module.scss","hooks/useMousetrap.ts","utils/createPageMapCoordsToContainer.ts","utils/cellToDate.ts","utils/createMapCellInfoToRecurringTimeRange.ts","utils/getSpan.ts","utils/createMapDateRangeToCells.ts","utils/createGridFromContainer.ts","utils/mergeEvents.ts","utils/createMapCellInfoToContiguousDateRange.ts","hooks/useScrollPosition.ts","hooks/useEventListener.ts","hooks/useStickyStyle.ts","index.tsx","hooks/useClickAndDrag.ts"],"names":["module","exports","no-scroll","root","timeline","debug","debug-active","calendar","react-draggable","handle-wrapper","handle","top","bottom","layer-container","event","drag-box","draggable","button-reset","is-draggable","react-draggable-dragging","is-pending-creation","hours-container","day-column","day-hours","cell","time","title","header","first","popup","range-boxes","event-content","start","end","weakMap","WeakMap","useMousetrap","handlerKey","handlerCallback","element","actionRef","useRef","current","useEffect","instance","get","Mousetrap","set","bind","mousetrap","unbind","createPageMapCoordsToContainer","container","clientX","clientY","pageX","pageY","_event$changedTouches","changedTouches","_container$getBoundin","getBoundingClientRect","left","x","y","cellToDate","_ref","startX","startY","toMin","originDate","addMinutes","addDays","createMapCellInfoToRecurringTimeRange","fromY","toDay","fromX","_ref2","endX","spanY","range","map","i","startDate","endDate","isEqual","startOfDay","endOfDay","subDays","isBefore","sort","rangeA","rangeB","getSpan","x1","x2","Math","abs","createMapDateRangeToCells","_ref$toX","toX","toY","numVerticalCells","_ref3","Object","slicedToArray","originOfThisDay","_startX","differenceInDays","_startY","differenceInMinutes","_endX","_endY","cells","endY","spanX","pop","createGridForContainer","totalHeight","totalWidth","numHorizontalCells","cellWidth","cellHeight","getRectFromCell","data","this","right","height","width","getCellFromRect","clamp","floor","round","mergeRanges","_mergeRanges","toConsumableArray","d","c","Date","mergeEvents","event1","event2","concat","range1","range2","compareAsc","createMapCellInfoToContiguousDateRange","useScrollPosition","arguments","length","undefined","_ref$passive","passive","_ref$enabled","enabled","_useState","useState","scrollTop","scrollLeft","_useState2","position","setPosition","ref","listener","options","addEventListener","removeEventListener","useEventListener","target","_event$target","useStickyStyle","scrollParent","_ref$top","_ref$left","_useScrollPosition","useMemo","transform","zIndex","defaultSchedule","RangeBox","grid","isBeingEdited","rangeIndex","cellIndex","cellArray","className","onChange","cellInfoToDateRange","isResizable","isDeletable","isMovable","modifiedCell","setModifiedCell","originalRect","rect","modifiedDateRange","useCallback","style","isStart","isEnd","handleStop","newCell","objectSpread","handleDrag","preventDefault","stopPropagation","_start","_end","newTop","min","newBottom","newRect","_grid$getCellFromRect","invariant","handleResize","direction","delta","newSize","includes","_grid$getCellFromRect2","react_default","a","createElement","react_draggable_default","axis","bounds","onDrag","onStop","cancel","classes","cc","defineProperty","tabIndex","lib","size","onResize","onResizeStop","handleWrapperClass","enable","handleClasses","bottomLeft","bottomRight","topLeft","topRight","format","Schedule","_ref4","ranges","dateRangeToCells","dateRange","key","array","MINS_IN_DAY","horizontalPrecision","days","rootElement","document","getElementById","ReactDOM","render","_ref5","_ref5$verticalPrecisi","verticalPrecision","_ref5$visualGridPreci","visualGridPrecision","startOfWeek","weekStartsOn","mins","cellInfoToDateRanges","cellInfoToSingleDateRange","_cellInfoToDateRanges","_cellInfoToDateRanges2","toArray","rest","slice","parent","timelineStickyStyle","headerStickyStyle","useComponentSize","_useClickAndDrag","setStyle","_useState3","_useState4","box","setBox","_useState5","_useState6","isDragging","setIsDragging","_useState7","_useState8","hasFinishedDragging","setHasFinishedDragging","mapCoordsToContainer","touchMove$","fromEvent","window","touchEnd$","touchStartWithDelay$","pipe","mergeMap","of","delay","takeUntil","mouseDown$","filter","which","mouseMove$","mouseUp$","dragStart$","merge","tap","e","dragEnd$","move$","box$","down","startWith","move","max","scrollWidth","scrollHeight","distinctUntilChanged","style$","boxSubscriber","subscribe","styleSubscriber","unsubscribe","useClickAndDrag","pendingCreation","setPendingCreation","_useUndo","useUndo","dateString","_useUndo2","scheduleState","_useUndo2$","setSchedule","undoSchedule","undo","redoSchedule","redo","canUndoSchedule","canUndo","canRedoSchedule","canRedo","_useMemo","_parent$current","constrainedBox","dateRanges","present","handleEventChange","newDateRange","newSchedule","splice","getDateRangeForVisualGrid","contains","activeElement","scrollIntoView","scrollMode","block","inline","times","timeIndex","startText","_getDateRangeForVisua","_getDateRangeForVisua2","dayIndex"],"mappings":"iHACAA,EAAAC,QAAA,CAAkBC,YAAA,0BAAAC,KAAA,qBAAAC,SAAA,yBAAAC,MAAA,sBAAAC,eAAA,6BAAAC,SAAA,yBAAAC,kBAAA,gCAAAC,iBAAA,+BAAAC,OAAA,uBAAAC,IAAA,oBAAAC,OAAA,uBAAAC,kBAAA,gCAAAC,MAAA,sBAAAC,WAAA,yBAAAC,UAAA,0BAAAC,eAAA,6BAAAC,eAAA,6BAAAC,2BAAA,yCAAAC,sBAAA,oCAAAC,kBAAA,gCAAAC,aAAA,2BAAAC,YAAA,0BAAAC,KAAA,qBAAAC,KAAA,qBAAAC,MAAA,sBAAAC,OAAA,uBAAAC,MAAA,sBAAAC,MAAA,sBAAAC,cAAA,4BAAAC,gBAAA,8BAAAC,MAAA,sBAAAC,IAAA,yOCEZC,EAAU,IAAIC,QAQL,SAASC,EACtBC,EACAC,EACAC,GAEA,IAAMC,EAAYC,iBAAsC,MACxDD,EAAUE,QAAUJ,EAEpBK,oBAAU,WACR,GAAKJ,EAAL,CAIA,IAAIK,EAAWV,EAAQW,IAAIN,GAW3B,OATKK,IACHA,EAAW,IAAIE,UAAUP,GACzBL,EAAQa,IAAIR,EAASK,IAGvBA,EAASI,KAAKX,EAAY,WACK,oBAAtBG,EAAUE,SAA0BF,EAAUE,YAGhD,WACLO,IAAUC,OAAOb,MAElB,CAACA,EAAYE,4ICtCLY,EAAiC,SAACC,GAC7C,OAAO,SAACtC,GACN,IAAIuC,EACAC,EACAC,EACAC,EAEJ,GAAI,mBAAoB1C,EAAO,KAAA2C,EACS3C,EAAM4C,eAAe,GAAxDL,EAD0BI,EAC1BJ,QAASC,EADiBG,EACjBH,QAASC,EADQE,EACRF,MAAOC,EADCC,EACDD,WAEzBH,EAAmCvC,EAAnCuC,QAASC,EAA0BxC,EAA1BwC,QAASC,EAAiBzC,EAAjByC,MAAOC,EAAU1C,EAAV0C,MAT8B,IAAAG,EAWtCP,EAAUQ,wBAAxBjD,EAXoDgD,EAWpDhD,IAAKkD,EAX+CF,EAW/CE,KAEb,MAAO,CACLR,UACAC,UACAC,QACAC,QACA7C,MACAkD,OACAC,EAAGT,EAAUQ,EACbE,EAAGT,EAAU3C,KCpBZ,IAAMqD,EAAa,SAAAC,GAAA,IACxBC,EADwBD,EACxBC,OACAC,EAFwBF,EAExBE,OACAC,EAHwBH,EAGxBG,MACAC,EAJwBJ,EAIxBI,WAJwB,OAWpBC,qBAAWC,kBAAQF,EAAYH,GAASE,EAAMD,KCCvCK,EAAgE,SAAAP,GAAA,IACpEG,EADoEH,EAC3EQ,MACOC,EAFoET,EAE3EU,MACAN,EAH2EJ,EAG3EI,WAH2E,OAIvE,SAAAO,GAAqC,IAAlCV,EAAkCU,EAAlCV,OAAQC,EAA0BS,EAA1BT,OAAQU,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,MAwB7B,OAvBeC,gBAAMb,EAAQW,EAAO,GACjCG,IAAI,SAAAC,GACH,IAAMC,EAAYlB,EAAW,CAC3BE,OAAQe,EACRd,SACAC,QACAM,QACAL,eAEEc,EAAUb,qBAAWY,EAAWd,EAAMU,IAU1C,OARIM,kBAAQD,EAASE,qBAAWF,MAC9BA,EAAUG,mBAASC,kBAAQJ,EAAS,KAGbK,mBAASN,EAAWC,GACzC,CAACD,EAAWC,GACZ,CAACA,EAASD,KAIfO,KAAK,SAACC,EAAQC,GAAT,OAAqBH,mBAASE,EAAO,GAAIC,EAAO,IAAM,EAAI,MCxCvDC,EAAU,SAACC,EAAYC,GAAb,OAA4B,EAAIC,KAAKC,IAAIF,EAAKD,ICUxDI,EAA4B,SAAAhC,GAAA,IAAAiC,EAAAjC,EACvCkC,WADuC,IAAAD,EACjC,SAACpC,GAAD,OAAeA,GADkBoC,EAEvCE,EAFuCnC,EAEvCmC,IACAC,EAHuCpC,EAGvCoC,iBACAhC,EAJuCJ,EAIvCI,WAJuC,OAWnC,SAAAO,GAAyC,IAAA0B,EAAAC,OAAAC,EAAA,EAAAD,CAAA3B,EAAA,GAAvC5C,EAAuCsE,EAAA,GAAhCrE,EAAgCqE,EAAA,GACvCG,EAAkBpB,qBAAWrD,GAC7B0E,EAAUP,EAAIQ,2BAAiB3E,EAAOqC,IACtCuC,EAAUR,EAAIS,8BAAoB7E,EAAOyE,IACzCK,EAAQX,EAAIQ,2BAAiB1E,EAAKoC,IAClC0C,EAAQX,EAAIS,8BAAoB5E,EAAKoD,qBAAWpD,KAAS,EAEzD+E,EAAQjC,gBAAM2B,EAASI,EAAQ,GAAG9B,IAAI,SAAAC,GAC1C,IAIMd,EAFUc,IAAMyB,EAEQE,EAAJ,EACpBK,EAFQhC,IAAM6B,EAEyBC,EAAvBV,EAAmB,EAIzC,MAAO,CACLnC,OAVae,EAWbd,SACAU,KAXWI,EAYXgC,OACAC,MARYtB,EANCX,EACFA,GAcXH,MARYc,EAAQzB,EAAQ8C,MAgBhC,OAJI7B,kBAAQnD,EAAKoD,qBAAWpD,KAC1B+E,EAAMG,MAGDH,IChDII,EAAyB,SAAAnD,GAU1B,IATVoD,EASUpD,EATVoD,YACAC,EAQUrD,EARVqD,WACAjB,EAOUpC,EAPVoC,iBACAkB,EAMUtD,EANVsD,mBAUA,MAAO,CACLF,cACAC,aACAjB,mBACAkB,qBACAC,UAPgBF,EAAaC,EAQ7BE,WATiBJ,EAAchB,EAW/BqB,gBARK,SAQWC,GAAgB,IACtB9C,EAA6C8C,EAA7C9C,KAAMX,EAAuCyD,EAAvCzD,OAAQ+C,EAA+BU,EAA/BV,KAAM9C,EAAyBwD,EAAzBxD,OAAQ+C,EAAiBS,EAAjBT,MAAOpC,EAAU6C,EAAV7C,MAQ3C,MAAO,CACLlE,OARaqG,EAAOW,KAAKH,WASzB9G,IARUwD,EAASyD,KAAKH,WASxB5D,KARWK,EAAS0D,KAAKJ,UASzBK,MARYhD,EAAO+C,KAAKJ,UASxBM,OARahD,EAAQ8C,KAAKH,WAS1BM,MARYb,EAAQU,KAAKJ,UAWzBtD,OAAQA,EAAS0D,KAAKJ,UACtB3C,KAAMA,EAAO+C,KAAKJ,UAClBrD,OAAQA,EAASyD,KAAKH,WACtBR,KAAMA,EAAOW,KAAKH,aAItBO,gBAjCK,SAiCWL,GACd,IAAMzD,EAAS+D,gBACbC,gBAAMP,EAAK9D,KAAO+D,KAAKJ,WACvB,EACAD,EAAqB,GAEjBpD,EAAS8D,gBACbE,gBAAMR,EAAKhH,IAAMiH,KAAKH,YACtB,EACApB,EAAmB,GAEfxB,EAAOoD,gBACXC,gBAAMP,EAAKE,MAAQD,KAAKJ,WACxB,EACAD,EAAqB,GAEjBN,EAAOgB,gBACXE,gBAAMR,EAAK/G,OAASgH,KAAKH,YACzB,EACApB,EAAmB,GAKrB,MAAO,CACLa,MAJYe,gBAAMrC,EAAQ1B,EAAQW,GAAO,EAAG0C,GAK5CzC,MAJYmD,gBAAMrC,EAAQzB,EAAQ8C,GAAO,EAAGZ,GAK5CnC,SACAC,SACAU,OACAoC,6BC5ED,SAASmB,EAAYtH,GAC1B,OAAOuH,IAAa9B,OAAA+B,EAAA,EAAA/B,CAAIzF,GAAOkE,IAAI,SAAAuD,GAAC,OAAIA,EAAEvD,IAAI,SAAAwD,GAAC,OAAI,IAAIC,KAAKD,QAGvD,SAASE,EAAYC,EAAeC,GACzC,OAAe,OAAXA,EACKD,EAGFP,EAAW,GAAAS,OAAAtC,OAAA+B,EAAA,EAAA/B,CAAKoC,GAALpC,OAAA+B,EAAA,EAAA/B,CAAgBqC,KAASnD,KAAK,SAACqD,EAAQC,GAAT,OAC9CC,qBAAWF,EAAO,GAAIC,EAAO,0BCXpBE,EAAiE,SAAAhF,GAAA,IACrEG,EADqEH,EAC5EQ,MACOC,EAFqET,EAE5EU,MACAN,EAH4EJ,EAG5EI,WAH4E,OAIxE,SAAAO,GAAoC,IAAjCV,EAAiCU,EAAjCV,OAAQC,EAAyBS,EAAzBT,OAAQU,EAAiBD,EAAjBC,KAAMoC,EAAWrC,EAAXqC,KACvB/B,EAAYlB,EAAW,CAAEE,SAAQC,SAAQC,QAAOM,QAAOL,eACvDc,EAAUnB,EAAW,CACzBE,OAAQW,EACRV,OAAQ8C,EACR7C,QACAM,QACAL,eAGF,MAAO,CACLmB,mBAASN,EAAWC,GAAW,CAACD,EAAWC,GAAW,CAACA,EAASD,MChB7D,SAASgE,EACd/I,GAEA,IAAA8D,EAAAkF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqC,GACrCG,EAAArF,EADEsF,eACF,IAAAD,KAAAE,EAAAvF,EADkBwF,eAClB,IAAAD,KAAAE,EACgCC,mBAAS,CAAEC,UAAW,EAAGC,WAAY,IADrEC,EAAAvD,OAAAC,EAAA,EAAAD,CAAAmD,EAAA,GACOK,EADPD,EAAA,GACiBE,EADjBF,EAAA,GAiBA,OCrBK,SAILG,EACAnJ,EACAoJ,EACAC,GAEA,IAAAX,GAAAL,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADqB,IAAnBM,eACF,IAAAD,KACA7G,oBAAU,WACR,GAAoB,OAAhBsH,EAAIvH,QAUR,OANI+G,EACFQ,EAAIvH,QAAQ0H,iBAAiBtJ,EAAOoJ,EAAUC,GACrCD,GACTD,EAAIvH,QAAQ2H,oBAAoBvJ,EAAOoJ,GAGlC,WACAD,EAAIvH,SAITuH,EAAIvH,QAAQ2H,oBAAoBvJ,EAAOoJ,KAExC,CAACD,EAAIvH,QAASwH,EAAUC,EAASV,IDrBpCa,CACEnK,EACA,SACA,SAAAW,GACE,GAAIA,GAASA,EAAMyJ,OAAQ,KAAAC,EAES1J,EAAMyJ,OAAhCX,EAFiBY,EAEjBZ,UAAWC,EAFMW,EAENX,WACnBG,EAAY,CAAEJ,YAAWC,iBAG7B,CAAEN,WACF,CAAEE,YAGGM,EEpBF,SAASU,EACdC,EADKzG,GAGL,IAAA0G,EAAA1G,EADEtD,WACF,IAAAgK,KAAAC,EAAA3G,EADeJ,YACf,IAAA+G,KAAAC,EACkC3B,EAAkBwB,EAAc,CAChEjB,QAAS9I,GAAOkD,IADVgG,EADRgB,EACQhB,WAAYD,EADpBiB,EACoBjB,UAcpB,OAVoBkB,kBAClB,iBAAO,CACLC,UAAS,aAAAlC,OAAehF,EAAOgG,EAAa,EAAnC,QAAAhB,OACPlI,EAAMiJ,EAAY,EADX,OAGToB,OAAQ,IAEV,CAACnH,EAAOgG,EAAa,EAAGlJ,EAAMiJ,EAAY,ICkB9C,IAAMqB,GAAsC,CAC1C,CAAC,2BAA4B,4BAC7B,CAAC,2BAA4B,4BAC7B,CAAC,2BAA4B,4BAC7B,CAAC,2BAA4B,4BAC7B,CAAC,2BAA4B,4BAC7B,CAAC,2BAA4B,4BAC7B,CAAC,2BAA4B,6BAQ/B,SAASC,GAATjH,GA0BG,IAAAqC,EAzBD6E,EAyBClH,EAzBDkH,KACAC,EAwBCnH,EAxBDmH,cACAC,EAuBCpH,EAvBDoH,WACAC,EAsBCrH,EAtBDqH,UACAC,EAqBCtH,EArBDsH,UACA/J,EAoBCyC,EApBDzC,KACAgK,EAmBCvH,EAnBDuH,UACAC,EAkBCxH,EAlBDwH,SACAC,EAiBCzH,EAjBDyH,oBACAC,EAgBC1H,EAhBD0H,YACAC,EAeC3H,EAfD2H,YACAC,EAcC5H,EAdD4H,UAeM5B,EAAMxH,iBAAO,MADlBiH,EAEuCC,mBAASnI,GAFhDsI,EAAAvD,OAAAC,EAAA,EAAAD,CAAAmD,EAAA,GAEMoC,EAFNhC,EAAA,GAEoBiC,EAFpBjC,EAAA,GAGKkC,EAAelB,kBAAQ,kBAAMK,EAAKzD,gBAAgBlG,IAAO,CAACA,EAAM2J,IAChEc,EAAOnB,kBAAQ,kBAAMK,EAAKzD,gBAAgBoE,IAAe,CAC7DA,EACAX,IAGFxI,oBAAU,WACRoJ,EAAgBvK,IACf,CAACA,IAEJ,IAAM0K,EAAoBpB,kBAAQ,kBAAMY,EAAoBI,IAAe,CACzEA,IAWF1J,EAAa,MARQ+J,sBAAY,WAC1BP,GAILH,GAAYA,OAASpC,EAAWgC,IAC/B,CAACpB,EAAIvH,QAAS+I,EAAUG,EAAaP,IAENpB,EAAIvH,SAzBrC,IA2BO/B,EAA6BsL,EAA7BtL,IAAKkD,EAAwBoI,EAAxBpI,KAAMkE,EAAkBkE,EAAlBlE,MAAOD,EAAWmE,EAAXnE,OAEpBsE,EAAQ,CAAErE,QAAOD,UAEjBuE,EAAwB,IAAdf,EACVgB,EAAQhB,IAAcC,EAAUnC,OAAS,EAEzCmD,EAAaJ,sBAAY,WAC7BV,GAAYA,EAASC,EAAoBI,GAAeT,IACvD,CAACS,EAAcT,EAAYK,EAAqBD,IAEnDrJ,EACE,KACA,WACE,GAAKyJ,GAIuB,IAAxBC,EAAa3H,OAAjB,CAIA,IAAMqI,EAAOjG,OAAAkG,EAAA,EAAAlG,CAAA,GACRuF,EADQ,CAEX3H,OAAQ2H,EAAa3H,OAAS,EAC9B8C,KAAM6E,EAAa7E,KAAO,IAG5BwE,GAAYA,EAASC,EAAoBc,GAAUnB,KAErDpB,EAAIvH,SAGNN,EACE,OACA,WACE,GAAKyJ,GAIDC,EAAa7E,OAASkE,EAAK9E,iBAAmB,EAAlD,CAIA,IAAMmG,EAAOjG,OAAAkG,EAAA,EAAAlG,CAAA,GACRuF,EADQ,CAEX3H,OAAQ2H,EAAa3H,OAAS,EAC9B8C,KAAM6E,EAAa7E,KAAO,IAG5BwE,GAAYA,EAASC,EAAoBc,GAAUnB,KAErDpB,EAAIvH,SAGN,IAAMgK,EAAoCP,sBACxC,SAACrL,EAAD8D,GAAkB,IAARb,EAAQa,EAARb,EACR,GAAK8H,EAAL,CAIA/K,EAAM6L,iBACN7L,EAAM8L,kBAEN,IAAMC,EAAS9I,EACT+I,EAAOD,EAASZ,EAAKnE,OACrBiF,EAAShH,KAAKiH,IAAIH,EAAQC,GAC1BG,EAAYF,EAASd,EAAKnE,OAEhC,GAAIiF,IAAWpM,EAAf,CAIA,IAAMuM,EAAO3G,OAAAkG,EAAA,EAAAlG,CAAA,GACR0F,EADQ,CAEXtL,IAAKoM,EACLnM,OAAQqM,IApBME,EAuBShC,EAAKnD,gBAAgBkF,GAAtC/I,EAvBQgJ,EAuBRhJ,OAAQ8C,EAvBAkG,EAuBAlG,KAEVuF,EAAOjG,OAAAkG,EAAA,EAAAlG,CAAA,GACR/E,EADQ,CAEX2C,SACA8C,SAGFmG,IACEZ,EAAQ1H,QAAUtD,EAAKsD,MADhB,2DAAA+D,OAGL2D,EAAQ1H,MAHH,MAAA+D,OAIFrH,EAAKsD,MAJH,MAMTiH,EAAgBS,MAElB,CAACrB,EAAMc,EAAMJ,EAAWE,IAGpBsB,EAA+BlB,sBACnC,SAACrL,EAAOwM,EAAWrJ,EAAMsJ,GACvB,GAAK5B,IAIL7K,EAAM6L,iBACN7L,EAAM8L,kBAEe,IAAjBW,EAAMzF,QAAV,CAIA,IAAM0F,EAAU,CACd1F,OAAQyF,EAAMzF,OAASmE,EAAKnE,OAC5BC,MAAOwF,EAAMxF,MAAQkE,EAAKlE,OAGtBmF,EAAO3G,OAAAkG,EAAA,EAAAlG,CAAA,GACRyF,EACAwB,GAGDF,EAAUG,SAAS,OACrBP,EAAQvM,KAAO4M,EAAMzF,OACZwF,EAAUG,SAAS,YAC5BP,EAAQtM,QAAU2M,EAAMzF,QAzBO,IAAA4F,EA4BDvC,EAAKnD,gBAAgBkF,GAA7CpI,EA5ByB4I,EA4BzB5I,MAAOX,EA5BkBuJ,EA4BlBvJ,OAAQ8C,EA5BUyG,EA4BVzG,KACjBuF,EAAOjG,OAAAkG,EAAA,EAAAlG,CAAA,GACR/E,EADQ,CAEXsD,QACAX,SACA8C,SAGF8E,EAAgBS,KAElB,CAACrB,EAAMc,EAAMN,EAAaI,EAAiBC,IAG7C,OACE2B,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACEG,KAAMlC,EAAY,IAAM,OACxBmC,OAAQ,CACNrN,IAAK,EACLC,OAAQuK,EAAK9D,YAAcS,EAC3BjE,KAAM,EACNgE,MAAOsD,EAAK7D,YAEdyC,SAAU,CAAEjG,EAAGD,EAAME,EAAGpD,GACxBsN,OAAQvB,EACRwB,OAAQ3B,EACR4B,OAAM,IAAAtF,OAAMuF,IAAQ1N,SAEpBiN,EAAAC,EAAAC,cAAA,UACErC,UAAW6C,YAAG,CACZD,IAAO,MACPA,IAAQ,gBACRA,IAAQ,aACR5C,GAJYlF,EAAA,GAAAC,OAAA+H,EAAA,EAAA/H,CAAAD,EAMT8H,IAAQ,gBAAkBvC,GANjBtF,OAAA+H,EAAA,EAAA/H,CAAAD,EAOT8H,IAAQ,mBAAqBhD,GAAiBA,EAAc5J,IAPnD8E,KAUd2D,IAAKA,EACLsE,SAAU,EACVnC,MAAOA,GAEPuB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEC,KAAMzC,EACN0C,SAAUrB,EACVsB,aAAcpC,EACdqC,mBAAoBR,IAAQ,kBAC5BS,OACElD,EACI,CACEhL,KAAK,EACLC,QAAQ,GAEV,GAENkO,cAAe,CACblO,OAAQyN,YAAG,CAACD,IAAO,OAAYA,IAAQxN,SACvCmO,WAAYV,YAAG,CAACD,IAAO,OAAYA,IAAQ,iBAC3CY,YAAaX,YAAG,CAACD,IAAO,OAAYA,IAAQ,kBAC5CvK,KAAMwK,YAAG,CAACD,IAAO,OAAYA,IAAQvK,OACrCgE,MAAOwG,YAAG,CAACD,IAAO,OAAYA,IAAQvG,QACtClH,IAAK0N,YAAG,CAACD,IAAO,OAAYA,IAAQzN,MACpCsO,QAASZ,YAAG,CAACD,IAAO,OAAYA,IAAQ,cACxCc,SAAUb,YAAG,CAACD,IAAO,OAAYA,IAAQ,iBAG3CT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAQ,iBAAkBhC,MAAOA,GAC/CuB,EAAAC,EAAAC,cAAA,QAAMrC,UAAW4C,IAAO,OACrB/B,GAAW8C,iBAAOjD,EAAkB,GAAI,UAE3CyB,EAAAC,EAAAC,cAAA,QAAMrC,UAAW4C,IAAO,KACrB9B,GAAS6C,iBAAOjD,EAAkB,GAAI,cASrD,SAASkD,GAATC,GAsBG,IArBDC,EAqBCD,EArBDC,OACAnE,EAoBCkE,EApBDlE,KACAK,EAmBC6D,EAnBD7D,UACAC,EAkBC4D,EAlBD5D,SACAE,EAiBC0D,EAjBD1D,YACAC,EAgBCyD,EAhBDzD,YACAC,EAeCwD,EAfDxD,UACAH,EAcC2D,EAdD3D,oBACA6D,EAaCF,EAbDE,iBACAnE,EAYCiE,EAZDjE,cAaA,OACEuC,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAQ,gBACrBkB,EAAOtK,IAAI,SAACwK,EAAWnE,GACtB,OACEsC,EAAAC,EAAAC,cAAA,QAAM4B,IAAKpE,GACRkE,EAAiBC,GAAWxK,IAAI,SAACxD,EAAM8J,EAAWoE,GACjD,OACE/B,EAAAC,EAAAC,cAAC3C,GAAD,CACEuE,IAAKnE,EACLK,YAAaA,EACbE,UAAWA,EACXD,YAAaA,EACbF,oBAAqBA,EACrBH,UAAWmE,EACXpE,UAAWA,EACXD,WAAYA,EACZG,UAAWA,EACXJ,cAAeA,EACfK,SAAUA,EACVN,KAAMA,EACN3J,KAAMA,UAWxB,IAAMmO,GAAc,KACdC,GAAsB,EACtBlL,GAAQ,SAACZ,GAAD,OAAeA,EAAI8L,IAC3BzJ,GAAM,SAAC0J,GAAD,OAAkBA,EAAOD,IA8TrC,IAAME,GAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOvC,EAAAC,EAAAC,cA7ThB,SAAAsC,GAA2E,IAAAC,EAAAD,EAA5DE,yBAA4D,IAAAD,EAAxC,EAAI,GAAoCA,EAAAE,EAAAH,EAAhCI,2BAAgC,IAAAD,EAAV,EAAI,GAAMA,EACnEjM,EAAamM,sBAAY,IAAI/H,KAAK,cAAe,CAAEgI,aAAc,IAEjEpK,EAAmBsJ,GAAcU,EACjC9I,EAAqB,EAAIqI,GACzBxL,EAAQ+H,sBAAY,SAACpI,GAAD,OAAeA,EAAIsM,GAAmB,CAC9DA,IAEIjK,EAAM,SAACsK,GAAD,OAAkBA,EAAOL,GAE/BM,EAAuB7F,kBAC3B,kBACEtG,EAAsC,CACpCH,aACAI,MAAOL,EACPO,MAAOD,MAEX,CAACN,EAAOM,GAAOL,IAGXuM,EAA4BzE,sBAChC,SAAC3K,GAA8B,IAAAqP,EACJF,EAAqBnP,GADjBsP,EAAAvK,OAAAwK,EAAA,EAAAxK,CAAAsK,GACtBjP,EADsBkP,EAAA,GACZE,EADYF,EAAAG,MAAA,GAU7B,OAPA7D,IACkB,IAAhB4D,EAAK5H,OADE,6EAAAP,OAGLmI,EAAK5H,OAHA,8EAOFxH,GAET,CAAC+O,IAGGpB,EAAmBzE,kBACvB,kBACE7E,EAA0B,CACxB5B,aACAgC,mBACAkB,qBACApB,OACAC,SAEJ,CAACA,EAAKD,GAAKE,EAAkBkB,EAAoBlD,IAG7ClE,EAAOsC,iBAA8B,MACrCyO,EAASzO,iBAA8B,MACvC0O,EAAsB1G,EAAetK,EAAM,CAAEQ,KAAK,EAAOkD,MAAM,IAC/DuN,EAAoB3G,EAAetK,EAAM,CAAEQ,KAAK,EAAOkD,MAAM,IAE7D4K,EAAO4C,IAAiBH,GArD2CI,EClWpE,SAAyBrH,GAAmC,IAAAP,EACvCC,mBAAS,CAAEhJ,IAAK,EAAGkD,KAAM,EAAGkE,MAAO,EAAGD,OAAQ,IADPgC,EAAAvD,OAAAC,EAAA,EAAAD,CAAAmD,EAAA,GAC1D0C,EAD0DtC,EAAA,GACnDyH,EADmDzH,EAAA,GAAA0H,EAE3C7H,mBAAsB,MAFqB8H,EAAAlL,OAAAC,EAAA,EAAAD,CAAAiL,EAAA,GAE1DE,EAF0DD,EAAA,GAErDE,EAFqDF,EAAA,GAAAG,EAG7BjI,oBAAS,GAHoBkI,EAAAtL,OAAAC,EAAA,EAAAD,CAAAqL,EAAA,GAG1DE,EAH0DD,EAAA,GAG9CE,EAH8CF,EAAA,GAAAG,EAIXrI,oBAAS,GAJEsI,EAAA1L,OAAAC,EAAA,EAAAD,CAAAyL,EAAA,GAI1DE,EAJ0DD,EAAA,GAIrCE,EAJqCF,EAAA,GAqIjE,OA/HAtP,oBAAU,WACR,IAAMS,EAAY6G,EAAIvH,QACtB,GAAKU,EAAL,CAIA,IAAMgP,EAAuBjP,EAA+BC,GAEtDiP,EAAaC,YAAsBC,OAAQ,YAAa,CAC5DhJ,SAAS,IAELiJ,EAAYF,YAAsBC,OAAQ,WAAY,CAC1DhJ,SAAS,IAOLkJ,EAJcH,YAAsBlP,EAAW,aAAc,CACjEmG,SAAS,IAG8BmJ,KACvCC,YAAS,SAAA3Q,GAAK,OACZ4Q,YAAG5Q,GAAO0Q,KACRG,YAAM,KACNC,YAAUT,OAKVU,EAAaT,YAAsBlP,EAAW,YAAa,CAC/DmG,SAAS,IACRmJ,KAAKM,YAAO,SAAAlS,GAAK,OAAoB,IAAhBA,EAAMmS,SAExBC,EAAaZ,YAAsBC,OAAQ,YAAa,CAC5DhJ,SAAS,IAGL4J,EAAWb,YAAsBC,OAAQ,UAAW,CACxDhJ,SAAS,IAGL6J,EAAaC,YAAMN,EAAYN,GAAsBC,KACzDY,YAAI,SAAAC,GACFA,EAAE5G,iBACF4G,EAAE3G,oBAEJ5H,YAAIoN,IAGAoB,EAAWH,YAAMF,EAAUX,GAAWE,KAC1C1N,YAAIoN,GACJkB,YAAI,WACFvB,GAAc,GACdI,GAAuB,MAIrBsB,EAAQJ,YAAMH,EAAYb,GAAYK,KAC1CY,YAAI,SAAAC,GACFA,EAAE5G,iBACF4G,EAAE3G,oBAEJ5H,YAAIoN,IAGAsB,EAAON,EAAWV,KACtBY,YAAI,WACFvB,GAAc,GACdI,GAAuB,KAEzBQ,YAAS,SAAAgB,GACP,OAAOF,EAAMf,KACXkB,YAAUD,GACV3O,YACE,SAAC6O,GACC,IAAM3P,EAAS6B,KAAK+N,IAAIH,EAAK7P,EAAG,GAC1BK,EAAS4B,KAAK+N,IAAIH,EAAK5P,EAAG,GAC1Bc,EAAOkB,KAAKiH,IAAI6G,EAAK/P,EAAGV,EAAU2Q,aAClC9M,EAAOlB,KAAKiH,IAAI6G,EAAK9P,EAAGX,EAAU4Q,cAClCrT,EAAMoF,KAAKiH,IAAI7I,EAAQ8C,GACvBrG,EAASmF,KAAK+N,IAAI3P,EAAQ8C,GAC1BpD,EAAOkC,KAAKiH,IAAI9I,EAAQW,GACxBgD,EAAQ9B,KAAK+N,IAAI5P,EAAQW,GAE/B,MAAO,CACLX,SACAC,SACAU,OACAoC,OACAtG,MACAC,SACAiD,OACAgE,QACAE,MAAOF,EAAQhE,EACfiE,OAAQlH,EAASD,KAIvBmS,YAAUU,MAGdS,YAAqB7O,YAGjB8O,EAASR,EAAKhB,KAClB1N,YAAI,SAAAf,GAAA,MAAmC,CACrCtD,IADEsD,EAAGtD,IAELkD,KAFEI,EAAQJ,KAGVkE,MAHE9D,EAAc8D,MAIhBD,OAJE7D,EAAqB6D,WAQrBqM,EAAgBT,EAAKU,UAAUzC,GAC/B0C,EAAkBH,EAAOE,UAAU7C,GAEzC,OAAO,WACL4C,EAAcG,cACdD,EAAgBC,iBAEjB,IAQI,CAAElI,QAAOsF,MAAKI,aAAY3D,OANlBhC,sBAAY,WACzB4F,GAAc,GACdI,GAAuB,GACvBR,EAAO,OACN,CAACA,IAEqCO,uBDyRrCqC,CAAgBrD,GALlB9E,EAvDuEkF,EAuDvElF,MACAsF,GAxDuEJ,EAwDvEI,IACAI,GAzDuER,EAyDvEQ,WACAI,GA1DuEZ,EA0DvEY,oBACA/D,GA3DuEmD,EA2DvEnD,OA3DuEqD,GAgErE7H,mBAAoC,MAhEiC8H,GAAAlL,OAAAC,EAAA,EAAAD,CAAAiL,GAAA,GA8DvEgD,GA9DuE/C,GAAA,GA+DvEgD,GA/DuEhD,GAAA,GAAAiD,GA0ErEC,YACF1J,GACGjG,IACC,SAAAD,GAAK,OAAIA,EAAMC,IAAI,SAAA4P,GAAU,OAAI,IAAInM,KAAKmM,OAE3CnP,KAAK,SAACqD,EAAQC,GAAT,OAAoBC,qBAAWF,EAAO,GAAIC,EAAO,OA/Ec8L,GAAAtO,OAAAC,EAAA,EAAAD,CAAAmO,GAAA,GAkEvEI,GAlEuED,GAAA,GAAAE,GAAAF,GAAA,GAoEhEG,GApEgED,GAoErEhS,IACMkS,GArE+DF,GAqErEG,KACMC,GAtE+DJ,GAsErEK,KACSC,GAvE4DN,GAuErEO,QACSC,GAxE4DR,GAwErES,QAxEqEC,GAkFrC3K,kBAAQ,WAC1C,IAAIzD,EAA6B,KAC7BC,EAA4B,KAChC,GAAuB,OAAnB4J,EAAOxO,QAAkB,KAAAgT,EAC+BxE,EAAOxO,QAAhD2E,EADUqO,EACxB1B,aAAwC1M,EADhBoO,EACG3B,YAGhC,MAAO,CAAE1M,cAAaC,eACrB,CAAC4J,EAAOxO,QAAS+L,IARZpH,GAlFiEoO,GAkFjEpO,YAAaC,GAlFoDmO,GAkFpDnO,WAUf6D,GAAOL,kBAAqB,WAChC,OAAoB,OAAhBzD,IAAuC,OAAfC,GACnB,KAGFF,EAAuB,CAC5BC,eACAC,cACAC,qBACAlB,sBAED,CAACgB,GAAaC,GAAYC,EAAoBlB,IAEjD1D,oBAAU,WACR,GAAa,OAATwI,IAAyB,OAARuG,GAArB,CAKA,IAAMiE,EAAiBjE,GACjBlQ,EAAO2J,GAAKnD,gBAAgB2N,GAC5BC,EAAajF,EAAqBnP,GAExCiT,GADcmB,QAPZnB,GAAmB,OASpB,CAAC/C,GAAKvG,GAAMsJ,KAEf9R,oBAAU,WACJuP,KACF8C,GAAYtM,EAAYoM,GAAce,QAASrB,KAC/CC,GAAmB,QAEpB,CACDvC,GACA8C,GACAP,GACAD,GACAM,GAAce,UAGhBzT,EACE,SACA,WACOiT,IAILJ,MAEFlF,UAGF3N,EACE,eACA,WACOmT,IAILJ,MAEFpF,UAGF3N,EACE,MACA,WACMoS,IACFrG,MAGJ4B,UAGFpN,oBAAU,WACRwL,MACC,CAACM,IAEJ,IAAMqH,GAAoB3J,sBACxB,SAAC4J,EAAc1K,GACb,IAAKyJ,GAAce,SAAWE,EAC5B,MAAO,CAACA,GAGV,IAAMC,EAAWzP,OAAA+B,EAAA,EAAA/B,CAAOuO,GAAce,SAEjCE,EAGHC,EAAY3K,GAAc0K,EAF1BC,EAAYC,OAAO5K,EAAY,GAKjC2J,GAAY5M,EAAY4N,KAE1B,CAAClB,GAAce,UAGXK,GAA4BpL,kBAChC,kBACE7B,EAAuC,CACrC5E,aACAM,MAAOD,GACPD,MAAO,SAAAV,GAAC,OAAIA,EAAIwM,MAEpB,CAACA,EAAqB7L,GAAOL,IAgB/B,OAbA1B,oBAAU,WACHxC,EAAKuC,SAAYvC,EAAKuC,QAAQyT,SAASpG,SAASqG,gBAIrDrG,SAASqG,eACPC,YAAetG,SAASqG,cAAe,CACrCE,WAAY,YACZC,MAAO,UACPC,OAAQ,aAEX,CAACrW,EAAKuC,QAASqN,SAASqG,cAAetB,GAAce,UAGtDlI,EAAAC,EAAAC,cAAA,OACE5D,IAAK9J,EACLqL,UAAW6C,YAAG,CAACD,IAAO,KAAR7H,OAAA+H,EAAA,EAAA/H,CAAA,GAAqB6H,IAAQ,aAAe0D,OAE1DnE,EAAAC,EAAAC,cAAA,OAAKzB,MAAO+E,EAAqB3F,UAAW4C,IAAO,UACjDT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAO,QACrBT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAQ,eACtBT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW6C,YAAG,CAACD,IAAO,KAAUA,IAAQ1M,SAA7C,OAGJiM,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAO,UACrBT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAQ,eACtBT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAQ,cACrBqI,gBAAM,IAAIzR,IAAI,SAAA0R,GACb,IAAIC,EAAY,GAChB,GAAID,EAAY,IAAM,EAAG,KAAAE,EACLV,GAA0B,CAC1ChS,OAAQ,EACRC,OAAQuS,EACR7R,KAAM,EACNoC,KAAMyP,EAAY,EAClBxP,MAAO,EACPpC,MAAO,IAPc+R,EAAAtQ,OAAAC,EAAA,EAAAD,CAAAqQ,EAAA,GACf5U,EADeuE,OAAAC,EAAA,EAAAD,CAAAsQ,EAAA,SASvBF,EAAYxH,iBAAOnN,EAAO,OAG5B,OACE2L,EAAAC,EAAAC,cAAA,OAAK4B,IAAKiH,EAAWlL,UAAW4C,IAAO,MACrCT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAO,MAAWuI,UAShDhJ,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OACEzB,MAAOgF,EACP5F,UAAW6C,YAAG,CAACD,IAAO,SAAcA,IAAQzM,UAE3C8U,gBAAM,GAAGzR,IAAI,SAAAC,GAAC,OACb0I,EAAAC,EAAAC,cAAA,OAAK4B,IAAKxK,EAAGuG,UAAW4C,IAAQ,eAC9BT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW6C,YAAG,CAACD,IAAO,KAAUA,IAAQ1M,SAC1CyN,iBAAO5K,kBAAQF,EAAYY,GAAI,YAKxC0I,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAQ,oBACrB0D,IACCnE,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAQ,YAAahC,MAAOA,GACzC8F,IAAuBvE,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAO,SAGlDjD,IAAQqJ,IAAmB1C,IAC1BnE,EAAAC,EAAAC,cAACuB,GAAD,CACEG,iBAAkBA,EAClB7D,oBAAqBkF,EACrBpF,UAAW4C,IAAQ,uBACnBkB,OAAQ5G,EAAYoM,GAAce,QAASrB,IAC3CrJ,KAAMA,KAGTA,KAASqJ,IACR7G,EAAAC,EAAAC,cAACuB,GAAD,CACEG,iBAAkBA,EAClB7D,oBAAqBkF,EACrBjF,aAAW,EACXE,WAAS,EACTD,aAAW,EACXH,SAAUqK,GACVxG,OAAQwF,GAAce,QACtB1K,KAAMA,KAIVwC,EAAAC,EAAAC,cAAA,OAAK5D,IAAKiH,EAAQ1F,UAAW4C,IAAO,UACjCqI,gBAAM,GAAGzR,IAAI,SAAA8R,GACZ,OACEnJ,EAAAC,EAAAC,cAAA,OAAK4B,IAAKqH,EAAUtL,UAAW4C,IAAQ,eACrCT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAQ,cACrBqI,gBAAM,IAAIzR,IAAI,SAAA0R,GACb,OACE/I,EAAAC,EAAAC,cAAA,OAAK4B,IAAKiH,EAAWlL,UAAW4C,IAAO,MACrCT,EAAAC,EAAAC,cAAA,OAAKrC,UAAW4C,IAAO,OAAvB,IACI0I,EADJ,KACgBJ,EADhB,iBAkBV,CAAKrG,kBAAmB,EAAI,KAAQP","file":"static/js/main.67f2cd03.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"no-scroll\":\"styles_no-scroll__1vsU8\",\"root\":\"styles_root__3QAxj\",\"timeline\":\"styles_timeline__106Mk\",\"debug\":\"styles_debug__2SKKM\",\"debug-active\":\"styles_debug-active___9OUc\",\"calendar\":\"styles_calendar__3Xx2Y\",\"react-draggable\":\"styles_react-draggable__2QRVw\",\"handle-wrapper\":\"styles_handle-wrapper__2T7f7\",\"handle\":\"styles_handle__1dKGL\",\"top\":\"styles_top__2FFal\",\"bottom\":\"styles_bottom__3nd0X\",\"layer-container\":\"styles_layer-container__1Quoi\",\"event\":\"styles_event__bjik1\",\"drag-box\":\"styles_drag-box__OvX9t\",\"draggable\":\"styles_draggable__a1ktL\",\"button-reset\":\"styles_button-reset__3_zQt\",\"is-draggable\":\"styles_is-draggable__2U2x2\",\"react-draggable-dragging\":\"styles_react-draggable-dragging__1T3s8\",\"is-pending-creation\":\"styles_is-pending-creation__2vDDI\",\"hours-container\":\"styles_hours-container__3XZzL\",\"day-column\":\"styles_day-column__2sQzS\",\"day-hours\":\"styles_day-hours__3_7p4\",\"cell\":\"styles_cell__1OJUD\",\"time\":\"styles_time__1X-Hn\",\"title\":\"styles_title__2dKTz\",\"header\":\"styles_header__1IF59\",\"first\":\"styles_first__1t63n\",\"popup\":\"styles_popup__2oSt1\",\"range-boxes\":\"styles_range-boxes__39XBE\",\"event-content\":\"styles_event-content__1EBie\",\"start\":\"styles_start__2DXVx\",\"end\":\"styles_end__2XnIt\"};","import mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\nconst weakMap = new WeakMap<typeof document | Element, MousetrapInstance>();\n\n/**\n * Use mousetrap hook\n *\n * @param handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  handlerCallback - A function that is triggered on key combo catch.\n */\nexport default function useMousetrap(\n  handlerKey: string | string[],\n  handlerCallback: () => void,\n  element: typeof document | Element | null\n) {\n  const actionRef = useRef<typeof handlerCallback | null>(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    let instance = weakMap.get(element);\n\n    if (!instance) {\n      instance = new Mousetrap(element as Element);\n      weakMap.set(element, instance);\n    }\n\n    instance.bind(handlerKey, () => {\n      typeof actionRef.current === 'function' && actionRef.current();\n    });\n\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey, element]);\n}\n","export const createPageMapCoordsToContainer = (container: HTMLElement) => {\n  return (event: React.MouseEvent | MouseEvent | TouchEvent) => {\n    let clientX: number;\n    let clientY: number;\n    let pageX: number;\n    let pageY: number;\n\n    if ('changedTouches' in event) {\n      ({ clientX, clientY, pageX, pageY } = event.changedTouches[0]);\n    } else {\n      ({ clientX, clientY, pageX, pageY } = event);\n    }\n    const { top, left } = container.getBoundingClientRect();\n\n    return {\n      clientX,\n      clientY,\n      pageX,\n      pageY,\n      top,\n      left,\n      x: clientX - left,\n      y: clientY - top\n    };\n  };\n};\n","import { addMinutes, addDays } from 'date-fns';\n\nexport const cellToDate = ({\n  startX,\n  startY,\n  toMin,\n  originDate\n}: {\n  startX: number;\n  startY: number;\n  toMin: (y: number) => number;\n  toDay: (x: number) => number;\n  originDate: Date;\n}) => addMinutes(addDays(originDate, startX), toMin(startY));\n","import { DateRange, MapCellInfoToDateRange } from '../types';\nimport { range } from 'lodash';\nimport {\n  addMinutes,\n  isBefore,\n  endOfDay,\n  isEqual,\n  subDays,\n  startOfDay\n} from 'date-fns';\nimport { cellToDate } from './cellToDate';\n\nexport type RecurringTimeRange = DateRange[];\n\nexport const createMapCellInfoToRecurringTimeRange: MapCellInfoToDateRange = ({\n  fromY: toMin,\n  fromX: toDay,\n  originDate\n}) => ({ startX, startY, endX, spanY }) => {\n  const result = range(startX, endX + 1)\n    .map(i => {\n      const startDate = cellToDate({\n        startX: i,\n        startY,\n        toMin,\n        toDay,\n        originDate\n      });\n      let endDate = addMinutes(startDate, toMin(spanY));\n\n      if (isEqual(endDate, startOfDay(endDate))) {\n        endDate = endOfDay(subDays(endDate, 1));\n      }\n\n      const range: DateRange = isBefore(startDate, endDate)\n        ? [startDate, endDate]\n        : [endDate, startDate];\n\n      return range;\n    })\n    .sort((rangeA, rangeB) => (isBefore(rangeA[0], rangeB[0]) ? 0 : 1));\n\n  return result;\n};\n","export const getSpan = (x1: number, x2: number) => 1 + Math.abs(x2 - x1);\n","import { DateRange, CellInfo } from '../types';\nimport {\n  startOfDay,\n  differenceInDays,\n  differenceInMinutes,\n  isEqual\n} from 'date-fns';\nimport { range } from 'lodash';\nimport { getSpan } from './getSpan';\n\nexport const createMapDateRangeToCells = ({\n  toX = (x: number) => x,\n  toY,\n  numVerticalCells,\n  originDate\n}: {\n  toX: (day: number) => number;\n  toY: (min: number) => number;\n  numHorizontalCells: number;\n  numVerticalCells: number;\n  originDate: Date;\n}) => ([start, end]: DateRange): CellInfo[] => {\n  const originOfThisDay = startOfDay(start);\n  const _startX = toX(differenceInDays(start, originDate));\n  const _startY = toY(differenceInMinutes(start, originOfThisDay));\n  const _endX = toX(differenceInDays(end, originDate));\n  const _endY = toY(differenceInMinutes(end, startOfDay(end))) - 1;\n\n  const cells = range(_startX, _endX + 1).map(i => {\n    const startX = i;\n    const endX = i;\n    const atStart = i === _startX;\n    const atEnd = i === _endX;\n    const startY = !atStart ? 0 : _startY;\n    const endY = !atEnd ? numVerticalCells - 1 : _endY;\n    const spanX = getSpan(startX, endX);\n    const spanY = getSpan(startY, endY);\n\n    return {\n      startX,\n      startY,\n      endX,\n      endY,\n      spanX,\n      spanY\n    };\n  });\n\n  if (isEqual(end, startOfDay(end))) {\n    cells.pop();\n  }\n\n  return cells;\n};\n","import { Grid, CellInfo, Rect } from '../types';\nimport { clamp, floor, round } from 'lodash';\nimport { getSpan } from './getSpan';\n\nexport const createGridForContainer = ({\n  totalHeight,\n  totalWidth,\n  numVerticalCells,\n  numHorizontalCells\n}: {\n  totalHeight: number;\n  totalWidth: number;\n  numVerticalCells: number;\n  numHorizontalCells: number;\n}): Grid => {\n  const cellHeight = totalHeight / numVerticalCells;\n  const cellWidth = totalWidth / numHorizontalCells;\n\n  return {\n    totalHeight,\n    totalWidth,\n    numVerticalCells,\n    numHorizontalCells,\n    cellWidth,\n    cellHeight,\n\n    getRectFromCell(data: CellInfo) {\n      const { endX, startX, endY, startY, spanX, spanY } = data;\n      const bottom = endY * this.cellHeight;\n      const top = startY * this.cellHeight;\n      const left = startX * this.cellWidth;\n      const right = endX * this.cellWidth;\n      const height = spanY * this.cellHeight;\n      const width = spanX * this.cellWidth;\n\n      return {\n        bottom,\n        top,\n        left,\n        right,\n        height,\n        width,\n\n        // @TODO: check the math\n        startX: startX * this.cellWidth,\n        endX: endX * this.cellWidth,\n        startY: startY * this.cellHeight,\n        endY: endY * this.cellHeight\n      };\n    },\n\n    getCellFromRect(data: Rect) {\n      const startX = clamp(\n        floor(data.left / this.cellWidth),\n        0,\n        numHorizontalCells - 1\n      );\n      const startY = clamp(\n        round(data.top / this.cellHeight),\n        0,\n        numVerticalCells - 1\n      );\n      const endX = clamp(\n        floor(data.right / this.cellWidth),\n        0,\n        numHorizontalCells - 1\n      );\n      const endY = clamp(\n        round(data.bottom / this.cellHeight),\n        0,\n        numVerticalCells - 1\n      );\n      const spanX = clamp(getSpan(startX, endX), 1, numHorizontalCells);\n      const spanY = clamp(getSpan(startY, endY), 1, numVerticalCells);\n\n      return {\n        spanX,\n        spanY,\n        startX,\n        startY,\n        endX,\n        endY\n      };\n    }\n  };\n};\n","import { Event } from '../types';\n// @ts-ignore\nimport _mergeRanges from 'merge-ranges';\nimport { compareAsc } from 'date-fns';\n\nexport function mergeRanges(event: Event): Event {\n  return _mergeRanges([...event].map(d => d.map(c => new Date(c))));\n}\n\nexport function mergeEvents(event1: Event, event2: Event | null): Event {\n  if (event2 === null) {\n    return event1;\n  }\n\n  return mergeRanges([...event1, ...event2]).sort((range1, range2) =>\n    compareAsc(range1[0], range2[0])\n  );\n}\n","import { MapCellInfoToDateRange } from '../types';\nimport { isBefore } from 'date-fns';\nimport { cellToDate } from './cellToDate';\n\nexport const createMapCellInfoToContiguousDateRange: MapCellInfoToDateRange = ({\n  fromY: toMin,\n  fromX: toDay,\n  originDate\n}) => ({ startX, startY, endX, endY }) => {\n  const startDate = cellToDate({ startX, startY, toMin, toDay, originDate });\n  const endDate = cellToDate({\n    startX: endX,\n    startY: endY,\n    toMin,\n    toDay,\n    originDate\n  });\n\n  return [\n    isBefore(startDate, endDate) ? [startDate, endDate] : [endDate, startDate]\n  ];\n};\n","import { useState } from 'react';\nimport { useEventListener } from './useEventListener';\n\nexport function useScrollPosition(\n  root: React.RefObject<HTMLElement>,\n  { passive = true, enabled = true } = {}\n) {\n  const [position, setPosition] = useState({ scrollTop: 0, scrollLeft: 0 });\n\n  useEventListener(\n    root,\n    'scroll',\n    event => {\n      if (event && event.target) {\n        // @ts-ignore\n        const { scrollTop, scrollLeft } = event.target;\n        setPosition({ scrollTop, scrollLeft });\n      }\n    },\n    { passive },\n    { enabled }\n  );\n\n  return position;\n}\n","import { useEffect } from 'react';\n\nexport function useEventListener<\n  K extends keyof HTMLElementEventMap,\n  Element extends HTMLElement\n>(\n  ref: React.RefObject<Element>,\n  event: K,\n  listener: (this: Element, event: HTMLElementEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n  { enabled = true } = {}\n) {\n  useEffect(() => {\n    if (ref.current === null) {\n      return;\n    }\n\n    if (enabled) {\n      ref.current.addEventListener(event, listener, options);\n    } else if (listener) {\n      ref.current.removeEventListener(event, listener);\n    }\n\n    return () => {\n      if (!ref.current) {\n        return;\n      }\n\n      ref.current.removeEventListener(event, listener);\n    };\n  }, [ref.current, listener, options, enabled]);\n}\n","import React, { useMemo } from 'react';\nimport { useScrollPosition } from './useScrollPosition';\n\nexport function useStickyStyle(\n  scrollParent: React.RefObject<HTMLElement>,\n  { top = false, left = false }: { top?: boolean; left?: boolean }\n) {\n  const { scrollLeft, scrollTop } = useScrollPosition(scrollParent, {\n    enabled: top || left\n  });\n\n  const stickyStyle = useMemo<React.CSSProperties>(\n    () => ({\n      transform: `translate(${left ? scrollLeft : 0}px, ${\n        top ? scrollTop : 0\n      }px)`,\n      zIndex: 3\n    }),\n    [left ? scrollLeft : 0, top ? scrollTop : 0]\n  );\n\n  return stickyStyle;\n}\n","import 'resize-observer-polyfill/dist/ResizeObserver.global';\n\nimport React, {\n  useRef,\n  useState,\n  useMemo,\n  useCallback,\n  useEffect\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport invariant from 'invariant';\nimport { times } from 'lodash';\nimport { format, startOfWeek, addDays, compareAsc } from 'date-fns';\nimport useComponentSize from '@rehooks/component-size';\nimport useUndo from 'use-undo';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport useMousetrap from './hooks/useMousetrap';\nimport cc from 'classcat';\nimport Resizable, { ResizeCallback } from 're-resizable';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\n\nimport { Grid, Event as CalendarEvent, CellInfo, DateRange } from './types';\n\nimport { useClickAndDrag } from './hooks/useClickAndDrag';\nimport {\n  createMapCellInfoToRecurringTimeRange,\n  RecurringTimeRange\n} from './utils/createMapCellInfoToRecurringTimeRange';\nimport { createMapDateRangeToCells } from './utils/createMapDateRangeToCells';\nimport { createGridForContainer } from './utils/createGridFromContainer';\nimport { mergeEvents, mergeRanges } from './utils/mergeEvents';\n\nimport classes from './styles.module.scss';\nimport { createMapCellInfoToContiguousDateRange } from './utils/createMapCellInfoToContiguousDateRange';\nimport { useStickyStyle } from './hooks/useStickyStyle';\n\nconst defaultSchedule: [string, string][] = [\n  ['2019-03-03T22:45:00.000Z', '2019-03-04T01:15:00.000Z'],\n  ['2019-03-05T22:00:00.000Z', '2019-03-06T01:00:00.000Z'],\n  ['2019-03-04T22:15:00.000Z', '2019-03-05T01:00:00.000Z'],\n  ['2019-03-07T05:30:00.000Z', '2019-03-07T10:00:00.000Z'],\n  ['2019-03-08T22:00:00.000Z', '2019-03-09T01:00:00.000Z'],\n  ['2019-03-09T22:00:00.000Z', '2019-03-10T01:00:00.000Z'],\n  ['2019-03-06T22:00:00.000Z', '2019-03-07T01:00:00.000Z']\n];\n\ntype OnChangeCallback = (\n  newDateRange: DateRange | undefined,\n  rangeIndex: number\n) => void;\n\nfunction RangeBox({\n  grid,\n  isBeingEdited,\n  rangeIndex,\n  cellIndex,\n  cellArray,\n  cell,\n  className,\n  onChange,\n  cellInfoToDateRange,\n  isResizable,\n  isDeletable,\n  isMovable\n}: {\n  grid: Grid;\n  cell: CellInfo;\n  cellIndex: number;\n  cellArray: CellInfo[];\n  className?: string;\n  onChange?: OnChangeCallback;\n  isResizable?: boolean;\n  isDeletable?: boolean;\n  isMovable?: boolean;\n  rangeIndex: number;\n  isBeingEdited?(cell: CellInfo): boolean;\n  cellInfoToDateRange(cell: CellInfo): DateRange;\n}) {\n  const ref = useRef(null);\n  const [modifiedCell, setModifiedCell] = useState(cell);\n  const originalRect = useMemo(() => grid.getRectFromCell(cell), [cell, grid]);\n  const rect = useMemo(() => grid.getRectFromCell(modifiedCell), [\n    modifiedCell,\n    grid\n  ]);\n\n  useEffect(() => {\n    setModifiedCell(cell);\n  }, [cell]);\n\n  const modifiedDateRange = useMemo(() => cellInfoToDateRange(modifiedCell), [\n    modifiedCell\n  ]);\n\n  const handleDelete = useCallback(() => {\n    if (!isDeletable) {\n      return;\n    }\n\n    onChange && onChange(undefined, rangeIndex);\n  }, [ref.current, onChange, isDeletable, rangeIndex]);\n\n  useMousetrap('del', handleDelete, ref.current);\n\n  const { top, left, width, height } = rect;\n\n  const style = { width, height };\n\n  const isStart = cellIndex === 0;\n  const isEnd = cellIndex === cellArray.length - 1;\n\n  const handleStop = useCallback(() => {\n    onChange && onChange(cellInfoToDateRange(modifiedCell), rangeIndex);\n  }, [modifiedCell, rangeIndex, cellInfoToDateRange, onChange]);\n\n  useMousetrap(\n    'up',\n    () => {\n      if (!isMovable) {\n        return;\n      }\n\n      if (modifiedCell.startY === 0) {\n        return;\n      }\n\n      const newCell = {\n        ...modifiedCell,\n        startY: modifiedCell.startY - 1,\n        endY: modifiedCell.endY - 1\n      };\n\n      onChange && onChange(cellInfoToDateRange(newCell), rangeIndex);\n    },\n    ref.current\n  );\n\n  useMousetrap(\n    'down',\n    () => {\n      if (!isMovable) {\n        return;\n      }\n\n      if (modifiedCell.endY === grid.numVerticalCells - 1) {\n        return;\n      }\n\n      const newCell = {\n        ...modifiedCell,\n        startY: modifiedCell.startY + 1,\n        endY: modifiedCell.endY + 1\n      };\n\n      onChange && onChange(cellInfoToDateRange(newCell), rangeIndex);\n    },\n    ref.current\n  );\n\n  const handleDrag: DraggableEventHandler = useCallback(\n    (event, { y }) => {\n      if (!isMovable) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const _start = y;\n      const _end = _start + rect.height;\n      const newTop = Math.min(_start, _end);\n      const newBottom = newTop + rect.height;\n\n      if (newTop === top) {\n        return;\n      }\n\n      const newRect = {\n        ...rect,\n        top: newTop,\n        bottom: newBottom\n      };\n\n      const { startY, endY } = grid.getCellFromRect(newRect);\n\n      const newCell = {\n        ...cell,\n        startY,\n        endY\n      };\n\n      invariant(\n        newCell.spanY === cell.spanY,\n        `Expected the dragged time cell to have the same height (${\n          newCell.spanY\n        }, ${cell.spanY})`\n      );\n      setModifiedCell(newCell);\n    },\n    [grid, rect, isMovable, setModifiedCell]\n  );\n\n  const handleResize: ResizeCallback = useCallback(\n    (event, direction, _ref, delta) => {\n      if (!isResizable) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (delta.height === 0) {\n        return;\n      }\n\n      const newSize = {\n        height: delta.height + rect.height,\n        width: delta.width + rect.width\n      };\n\n      const newRect = {\n        ...originalRect,\n        ...newSize\n      };\n\n      if (direction.includes('top')) {\n        newRect.top -= delta.height;\n      } else if (direction.includes('bottom')) {\n        newRect.bottom += delta.height;\n      }\n\n      const { spanY, startY, endY } = grid.getCellFromRect(newRect);\n      const newCell = {\n        ...cell,\n        spanY,\n        startY,\n        endY\n      };\n\n      setModifiedCell(newCell);\n    },\n    [grid, rect, isResizable, setModifiedCell, originalRect]\n  );\n\n  return (\n    <Draggable\n      axis={isMovable ? 'y' : 'none'}\n      bounds={{\n        top: 0,\n        bottom: grid.totalHeight - height,\n        left: 0,\n        right: grid.totalWidth\n      }}\n      position={{ x: left, y: top }}\n      onDrag={handleDrag}\n      onStop={handleStop}\n      cancel={`.${classes.handle}`}\n    >\n      <button\n        className={cc([\n          classes['event'],\n          classes['button-reset'],\n          classes['range-box'],\n          className,\n          {\n            [classes['is-draggable']]: isMovable,\n            [classes['is-being-edited']]: isBeingEdited && isBeingEdited(cell)\n          }\n        ])}\n        ref={ref}\n        tabIndex={0}\n        style={style}\n      >\n        <Resizable\n          size={originalRect}\n          onResize={handleResize}\n          onResizeStop={handleStop}\n          handleWrapperClass={classes['handle-wrapper']}\n          enable={\n            isResizable\n              ? {\n                  top: true,\n                  bottom: true\n                }\n              : {}\n          }\n          handleClasses={{\n            bottom: cc([classes['handle'], classes.bottom]),\n            bottomLeft: cc([classes['handle'], classes['bottom-left']]),\n            bottomRight: cc([classes['handle'], classes['bottom-right']]),\n            left: cc([classes['handle'], classes.left]),\n            right: cc([classes['handle'], classes.right]),\n            top: cc([classes['handle'], classes.top]),\n            topLeft: cc([classes['handle'], classes['top-left']]),\n            topRight: cc([classes['handle'], classes['top-right']])\n          }}\n        >\n          <div className={classes['event-content']} style={style}>\n            <span className={classes['start']}>\n              {isStart && format(modifiedDateRange[0], 'h:mma')}\n            </span>\n            <span className={classes['end']}>\n              {isEnd && format(modifiedDateRange[1], 'h:mma')}\n            </span>\n          </div>\n        </Resizable>\n      </button>\n    </Draggable>\n  );\n}\n\nfunction Schedule({\n  ranges,\n  grid,\n  className,\n  onChange,\n  isResizable,\n  isDeletable,\n  isMovable,\n  cellInfoToDateRange,\n  dateRangeToCells,\n  isBeingEdited\n}: {\n  ranges: CalendarEvent;\n  grid: Grid;\n  className?: string;\n  isResizable?: boolean;\n  isDeletable?: boolean;\n  isMovable?: boolean;\n  onChange?: OnChangeCallback;\n  dateRangeToCells(range: DateRange): CellInfo[];\n  isBeingEdited?(cell: CellInfo): boolean;\n  cellInfoToDateRange(cell: CellInfo): DateRange;\n}) {\n  return (\n    <div className={classes['range-boxes']}>\n      {ranges.map((dateRange, rangeIndex) => {\n        return (\n          <span key={rangeIndex}>\n            {dateRangeToCells(dateRange).map((cell, cellIndex, array) => {\n              return (\n                <RangeBox\n                  key={cellIndex}\n                  isResizable={isResizable}\n                  isMovable={isMovable}\n                  isDeletable={isDeletable}\n                  cellInfoToDateRange={cellInfoToDateRange}\n                  cellArray={array}\n                  cellIndex={cellIndex}\n                  rangeIndex={rangeIndex}\n                  className={className}\n                  isBeingEdited={isBeingEdited}\n                  onChange={onChange}\n                  grid={grid}\n                  cell={cell}\n                />\n              );\n            })}\n          </span>\n        );\n      })}\n    </div>\n  );\n}\n\nconst MINS_IN_DAY = 24 * 60;\nconst horizontalPrecision = 1;\nconst toDay = (x: number) => x / horizontalPrecision;\nconst toX = (days: number) => days * horizontalPrecision;\n\nfunction App({ verticalPrecision = 1 / 30, visualGridPrecision = 1 / 30 }) {\n  const originDate = startOfWeek(new Date('2019-03-04'), { weekStartsOn: 1 });\n\n  const numVerticalCells = MINS_IN_DAY * verticalPrecision;\n  const numHorizontalCells = 7 * horizontalPrecision;\n  const toMin = useCallback((y: number) => y / verticalPrecision, [\n    verticalPrecision\n  ]);\n  const toY = (mins: number) => mins * verticalPrecision;\n\n  const cellInfoToDateRanges = useMemo(\n    () =>\n      createMapCellInfoToRecurringTimeRange({\n        originDate,\n        fromY: toMin,\n        fromX: toDay\n      }),\n    [toMin, toDay, originDate]\n  );\n\n  const cellInfoToSingleDateRange = useCallback(\n    (cell: CellInfo): DateRange => {\n      const [first, ...rest] = cellInfoToDateRanges(cell);\n\n      invariant(\n        rest.length === 0,\n        `Expected \"cellInfoToSingleDateRange\" to return a single date range, found ${\n          rest.length\n        } additional ranges instead. This is a bug in @remotelock/weekly-scheduler`\n      );\n\n      return first;\n    },\n    [cellInfoToDateRanges]\n  );\n\n  const dateRangeToCells = useMemo(\n    () =>\n      createMapDateRangeToCells({\n        originDate,\n        numVerticalCells,\n        numHorizontalCells,\n        toX,\n        toY\n      }),\n    [toY, toX, numVerticalCells, numHorizontalCells, originDate]\n  );\n\n  const root = useRef<HTMLDivElement | null>(null);\n  const parent = useRef<HTMLDivElement | null>(null);\n  const timelineStickyStyle = useStickyStyle(root, { top: false, left: true });\n  const headerStickyStyle = useStickyStyle(root, { top: false, left: false });\n\n  const size = useComponentSize(parent);\n  const {\n    style,\n    box,\n    isDragging,\n    hasFinishedDragging,\n    cancel\n  } = useClickAndDrag(parent);\n  const [\n    pendingCreation,\n    setPendingCreation\n  ] = useState<RecurringTimeRange | null>(null);\n  const [\n    scheduleState,\n    {\n      set: setSchedule,\n      undo: undoSchedule,\n      redo: redoSchedule,\n      canUndo: canUndoSchedule,\n      canRedo: canRedoSchedule\n    }\n  ] = useUndo<CalendarEvent>(\n    defaultSchedule\n      .map(\n        range => range.map(dateString => new Date(dateString)) as [Date, Date]\n      )\n      .sort((range1, range2) => compareAsc(range1[0], range2[0]))\n  );\n\n  const { totalHeight, totalWidth } = useMemo(() => {\n    let totalHeight: number | null = null;\n    let totalWidth: number | null = null;\n    if (parent.current !== null) {\n      ({ scrollHeight: totalHeight, scrollWidth: totalWidth } = parent.current);\n    }\n\n    return { totalHeight, totalWidth };\n  }, [parent.current, size]);\n\n  const grid = useMemo<Grid | null>(() => {\n    if (totalHeight === null || totalWidth === null) {\n      return null;\n    }\n\n    return createGridForContainer({\n      totalHeight,\n      totalWidth,\n      numHorizontalCells,\n      numVerticalCells\n    });\n  }, [totalHeight, totalWidth, numHorizontalCells, numVerticalCells]);\n\n  useEffect(() => {\n    if (grid === null || box === null) {\n      setPendingCreation(null);\n      return;\n    }\n\n    const constrainedBox = box;\n    const cell = grid.getCellFromRect(constrainedBox);\n    const dateRanges = cellInfoToDateRanges(cell);\n    const event = dateRanges;\n    setPendingCreation(event);\n  }, [box, grid, setPendingCreation]);\n\n  useEffect(() => {\n    if (hasFinishedDragging) {\n      setSchedule(mergeEvents(scheduleState.present, pendingCreation));\n      setPendingCreation(null);\n    }\n  }, [\n    hasFinishedDragging,\n    setSchedule,\n    setPendingCreation,\n    pendingCreation,\n    scheduleState.present\n  ]);\n\n  useMousetrap(\n    'ctrl+z',\n    () => {\n      if (!canUndoSchedule) {\n        return;\n      }\n\n      undoSchedule();\n    },\n    document\n  );\n\n  useMousetrap(\n    'ctrl+shift+z',\n    () => {\n      if (!canRedoSchedule) {\n        return;\n      }\n\n      redoSchedule();\n    },\n    document\n  );\n\n  useMousetrap(\n    'esc',\n    () => {\n      if (pendingCreation) {\n        cancel();\n      }\n    },\n    document\n  );\n\n  useEffect(() => {\n    cancel();\n  }, [size]);\n\n  const handleEventChange = useCallback<OnChangeCallback>(\n    (newDateRange, rangeIndex) => {\n      if (!scheduleState.present && newDateRange) {\n        return [newDateRange];\n      }\n\n      const newSchedule = [...scheduleState.present];\n\n      if (!newDateRange) {\n        newSchedule.splice(rangeIndex, 1);\n      } else {\n        newSchedule[rangeIndex] = newDateRange;\n      }\n\n      setSchedule(mergeRanges(newSchedule));\n    },\n    [scheduleState.present]\n  );\n\n  const getDateRangeForVisualGrid = useMemo(\n    () =>\n      createMapCellInfoToContiguousDateRange({\n        originDate,\n        fromX: toDay,\n        fromY: y => y / visualGridPrecision\n      }),\n    [visualGridPrecision, toDay, originDate]\n  );\n\n  useEffect(() => {\n    if (!root.current || !root.current.contains(document.activeElement)) {\n      return;\n    }\n\n    document.activeElement &&\n      scrollIntoView(document.activeElement, {\n        scrollMode: 'if-needed',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n  }, [root.current, document.activeElement, scheduleState.present]);\n\n  return (\n    <div\n      ref={root}\n      className={cc([classes['root'], { [classes['no-scroll']]: isDragging }])}\n    >\n      <div style={timelineStickyStyle} className={classes['timeline']}>\n        <div className={classes['header']}>\n          <div className={classes['day-column']}>\n            <div className={cc([classes['cell'], classes.title])}>T</div>\n          </div>\n        </div>\n        <div className={classes['calendar']}>\n          <div className={classes['day-column']}>\n            <div className={classes['day-hours']}>\n              {times(48).map(timeIndex => {\n                let startText = '';\n                if (timeIndex % 2 === 0) {\n                  const [[start]] = getDateRangeForVisualGrid({\n                    startX: 0,\n                    startY: timeIndex,\n                    endX: 0,\n                    endY: timeIndex + 1,\n                    spanX: 1,\n                    spanY: 1\n                  });\n                  startText = format(start, 'h a');\n                }\n\n                return (\n                  <div key={timeIndex} className={classes['cell']}>\n                    <div className={classes['time']}>{startText}</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div\n          style={headerStickyStyle}\n          className={cc([classes['calendar'], classes.header])}\n        >\n          {times(7).map(i => (\n            <div key={i} className={classes['day-column']}>\n              <div className={cc([classes['cell'], classes.title])}>\n                {format(addDays(originDate, i), 'ddd')}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className={classes['layer-container']}>\n          {isDragging && (\n            <div className={classes['drag-box']} style={style}>\n              {hasFinishedDragging && <div className={classes['popup']} />}\n            </div>\n          )}\n          {grid && pendingCreation && isDragging && (\n            <Schedule\n              dateRangeToCells={dateRangeToCells}\n              cellInfoToDateRange={cellInfoToSingleDateRange}\n              className={classes['is-pending-creation']}\n              ranges={mergeEvents(scheduleState.present, pendingCreation)}\n              grid={grid}\n            />\n          )}\n          {grid && !pendingCreation && (\n            <Schedule\n              dateRangeToCells={dateRangeToCells}\n              cellInfoToDateRange={cellInfoToSingleDateRange}\n              isResizable\n              isMovable\n              isDeletable\n              onChange={handleEventChange}\n              ranges={scheduleState.present}\n              grid={grid}\n            />\n          )}\n\n          <div ref={parent} className={classes['calendar']}>\n            {times(7).map(dayIndex => {\n              return (\n                <div key={dayIndex} className={classes['day-column']}>\n                  <div className={classes['day-hours']}>\n                    {times(48).map(timeIndex => {\n                      return (\n                        <div key={timeIndex} className={classes['cell']}>\n                          <div className={classes['debug']}>\n                            ({dayIndex}, {timeIndex})\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App verticalPrecision={1 / 30} />, rootElement);\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { isEqual } from 'lodash';\nimport { fromEvent, merge, of } from 'rxjs';\nimport {\n  tap,\n  map,\n  takeUntil,\n  mergeMap,\n  startWith,\n  distinctUntilChanged,\n  filter,\n  delay\n} from 'rxjs/operators';\nimport { createPageMapCoordsToContainer } from '../utils/createPageMapCoordsToContainer';\nimport { Rect } from '../types';\n\nexport function useClickAndDrag(ref: React.RefObject<HTMLElement>) {\n  const [style, setStyle] = useState({ top: 0, left: 0, width: 0, height: 0 });\n  const [box, setBox] = useState<Rect | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hasFinishedDragging, setHasFinishedDragging] = useState(false);\n\n  useEffect(() => {\n    const container = ref.current;\n    if (!container) {\n      return;\n    }\n\n    const mapCoordsToContainer = createPageMapCoordsToContainer(container);\n\n    const touchMove$ = fromEvent<TouchEvent>(window, 'touchmove', {\n      passive: false\n    });\n    const touchEnd$ = fromEvent<TouchEvent>(window, 'touchend', {\n      passive: true\n    });\n\n    const touchStart$ = fromEvent<TouchEvent>(container, 'touchstart', {\n      passive: false\n    });\n\n    const touchStartWithDelay$ = touchStart$.pipe(\n      mergeMap(start =>\n        of(start).pipe(\n          delay(300),\n          takeUntil(touchMove$)\n        )\n      )\n    );\n\n    const mouseDown$ = fromEvent<MouseEvent>(container, 'mousedown', {\n      passive: true\n    }).pipe(filter(event => event.which === 1));\n\n    const mouseMove$ = fromEvent<MouseEvent>(window, 'mousemove', {\n      passive: true\n    });\n\n    const mouseUp$ = fromEvent<MouseEvent>(window, 'mouseup', {\n      passive: true\n    });\n\n    const dragStart$ = merge(mouseDown$, touchStartWithDelay$).pipe(\n      tap(e => {\n        e.preventDefault();\n        e.stopPropagation();\n      }),\n      map(mapCoordsToContainer)\n    );\n\n    const dragEnd$ = merge(mouseUp$, touchEnd$).pipe(\n      map(mapCoordsToContainer),\n      tap(() => {\n        setIsDragging(false);\n        setHasFinishedDragging(true);\n      })\n    );\n\n    const move$ = merge(mouseMove$, touchMove$).pipe(\n      tap(e => {\n        e.preventDefault();\n        e.stopPropagation();\n      }),\n      map(mapCoordsToContainer)\n    );\n\n    const box$ = dragStart$.pipe(\n      tap(() => {\n        setIsDragging(true);\n        setHasFinishedDragging(false);\n      }),\n      mergeMap(down => {\n        return move$.pipe(\n          startWith(down),\n          map(\n            (move): Rect => {\n              const startX = Math.max(down.x, 0);\n              const startY = Math.max(down.y, 0);\n              const endX = Math.min(move.x, container.scrollWidth);\n              const endY = Math.min(move.y, container.scrollHeight);\n              const top = Math.min(startY, endY);\n              const bottom = Math.max(startY, endY);\n              const left = Math.min(startX, endX);\n              const right = Math.max(startX, endX);\n\n              return {\n                startX,\n                startY,\n                endX,\n                endY,\n                top,\n                bottom,\n                left,\n                right,\n                width: right - left,\n                height: bottom - top\n              };\n            }\n          ),\n          takeUntil(dragEnd$)\n        );\n      }),\n      distinctUntilChanged(isEqual)\n    );\n\n    const style$ = box$.pipe(\n      map(({ top, left, width, height }) => ({\n        top,\n        left,\n        width,\n        height\n      }))\n    );\n\n    const boxSubscriber = box$.subscribe(setBox);\n    const styleSubscriber = style$.subscribe(setStyle);\n\n    return () => {\n      boxSubscriber.unsubscribe();\n      styleSubscriber.unsubscribe();\n    };\n  }, []);\n\n  const cancel = useCallback(() => {\n    setIsDragging(false);\n    setHasFinishedDragging(false);\n    setBox(null);\n  }, [setBox]);\n\n  return { style, box, isDragging, cancel, hasFinishedDragging };\n}\n"],"sourceRoot":""}