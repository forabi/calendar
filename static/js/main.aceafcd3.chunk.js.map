{"version":3,"sources":["styles.module.scss","utils/createPageMapCoordsToContainer.ts","hooks/useClickAndDrag.ts","hooks/useMousetrap.ts","hooks/useScrollPosition.ts","hooks/useEventListener.ts","hooks/useStickyStyle.ts","utils/getSpan.ts","utils/cellToDate.ts","utils/mergeEvents.ts","components/Cell.tsx","utils/getTextForDateRange.ts","components/RangeBox.tsx","components/Schedule.tsx","components/TimeGridScheduler.tsx","utils/createMapCellInfoToRecurringTimeRange.ts","utils/createMapDateRangeToCells.ts","utils/createGrid.ts","utils/createMapCellInfoToContiguousDateRange.ts","index.tsx"],"names":["module","exports","no-scroll","root","timeline","debug","debug-active","calendar","react-draggable","handle-wrapper","handle","top","bottom","layer-container","event","drag-box","draggable","button-reset","is-draggable","react-draggable-dragging","is-pending-creation","hours-container","day-column","day-hours","cell","time","title","is-hour-start","header","first","popup","range-boxes","event-content","start","end","createPageMapCoordsToContainer","container","clientX","clientY","pageX","pageY","_event$changedTouches","changedTouches","_container$getBoundin","getBoundingClientRect","left","x","y","prevent","tap","e","preventDefault","stopPropagation","weakMap","WeakMap","useMousetrap","handlerKey","handlerCallback","element","actionRef","useRef","current","useEffect","instance","get","Mousetrap","set","bind","mousetrap","unbind","useScrollPosition","_ref","arguments","length","undefined","_ref$passive","passive","_ref$enabled","enabled","_useState","useState","scrollTop","scrollLeft","_useState2","Object","slicedToArray","position","setPosition","ref","listener","options","addEventListener","removeEventListener","useEventListener","target","_event$target","useStickyStyle","scrollParent","_ref$top","_ref$left","_useScrollPosition","useMemo","transform","concat","zIndex","getSpan","x1","x2","Math","abs","cellToDate","startX","startY","toMin","originDate","addMinutes","addDays","mergeRanges","_mergeRanges","toConsumableArray","map","d","c","Date","mergeEvents","event1","event2","sort","range1","range2","compareAsc","Cell","React","memo","timeIndex","children","classes","_getDateRangeForVisua","getDateRangeForVisualGrid","endX","endY","spanX","spanY","_getDateRangeForVisua2","isHourStart","getMinutes","react_default","a","createElement","className","classcat","defineProperty","formatHour","date","format","getTextForDateRange","dates","template","template2","isSameDay","_dropSame","takeSecond","_dates$map","_dates$map2","second","dropSame","_dropSame2","firstM","secondM","startDateStr","endDateStr","RangeBox","_ref3","grid","isBeingEdited","rangeIndex","cellIndex","cellArray","onChange","cellInfoToDateRange","isResizable","isDeletable","isMovable","modifiedCell","setModifiedCell","originalRect","getRectFromCell","rect","modifiedDateRange","useCallback","width","height","isStart","isEnd","handleStop","newCell","objectSpread","numVerticalCells","handleDrag","_ref2","_startY","_endY","_startX","_endX","newTop","min","newLeft","newBottom","newRight","newRect","right","_grid$getCellFromRect","getCellFromRect","invariant","handleResize","direction","delta","newSize","includes","_grid$getCellFromRect2","react_draggable_default","axis","bounds","totalHeight","totalWidth","onDrag","onStop","cancel","tabIndex","style","lib","size","onResize","onResizeStop","handleWrapperClass","enable","handleClasses","bottomLeft","bottomRight","topLeft","topRight","visually_hidden_es","aria-hidden","Schedule","ranges","dateRangeToCells","dateRange","key","array","RangeBox_RangeBox","toDay","toX","days","TimeGridScheduler","_ref$verticalPrecisio","verticalPrecision","_ref$visualGridVertic","visualGridVerticalPrecision","schedule","_ref$originDate","toY","mins","cellInfoToDateRanges","fromY","fromX","range","i","startDate","endDate","isEqual","startOfDay","endOfDay","subDays","isBefore","createMapCellInfoToRecurringTimeRange","cellInfoToSingleDateRange","_cellInfoToDateRanges","_cellInfoToDateRanges2","toArray","rest","slice","_ref$toX","originOfThisDay","differenceInDays","differenceInMinutes","cells","pop","createMapDateRangeToCells","numHorizontalCells","parent","timelineStickyStyle","headerStickyStyle","useComponentSize","_useClickAndDrag","setStyle","_useState3","_useState4","box","setBox","_useState5","_useState6","isDragging","setIsDragging","_useState7","_useState8","hasFinishedDragging","setHasFinishedDragging","mapCoordsToContainer","touchMove$","fromEvent","window","pipe","touchEnd$","touchStartWithDelay$","mergeMap","of","delay","takeUntil","mouseDown$","filter","which","mouseMove$","mouseUp$","dragStart$","merge","dragEnd$","move$","box$","down","startWith","move","max","scrollWidth","scrollHeight","distinctUntilChanged","style$","boxSubscriber","subscribe","styleSubscriber","unsubscribe","useClickAndDrag","pendingCreation","setPendingCreation","_useUndo","useUndo","_useUndo2","scheduleState","_useUndo2$","setSchedule","undoSchedule","undo","redoSchedule","redo","canUndoSchedule","canUndo","canRedoSchedule","canRedo","_useMemo","_parent$current","cellHeight","floor","cellWidth","data","this","clamp","round","createGrid","constrainedBox","dateRanges","present","document","handleEventChange","newDateRange","newSchedule","splice","createMapCellInfoToContiguousDateRange","contains","activeElement","scrollIntoView","scrollMode","block","inline","numVisualVerticalCells","times","Cell_Cell","role","Schedule_Schedule","dayIndex","defaultSchedule","dateString","rootElement","getElementById","ReactDOM","render","TimeGridScheduler_TimeGridScheduler","startOfWeek","weekStartsOn"],"mappings":"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","file":"static/js/main.aceafcd3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"no-scroll\":\"styles_no-scroll__1vsU8\",\"root\":\"styles_root__3QAxj\",\"timeline\":\"styles_timeline__106Mk\",\"debug\":\"styles_debug__2SKKM\",\"debug-active\":\"styles_debug-active___9OUc\",\"calendar\":\"styles_calendar__3Xx2Y\",\"react-draggable\":\"styles_react-draggable__2QRVw\",\"handle-wrapper\":\"styles_handle-wrapper__2T7f7\",\"handle\":\"styles_handle__1dKGL\",\"top\":\"styles_top__2FFal\",\"bottom\":\"styles_bottom__3nd0X\",\"layer-container\":\"styles_layer-container__1Quoi\",\"event\":\"styles_event__bjik1\",\"drag-box\":\"styles_drag-box__OvX9t\",\"draggable\":\"styles_draggable__a1ktL\",\"button-reset\":\"styles_button-reset__3_zQt\",\"is-draggable\":\"styles_is-draggable__2U2x2\",\"react-draggable-dragging\":\"styles_react-draggable-dragging__1T3s8\",\"is-pending-creation\":\"styles_is-pending-creation__2vDDI\",\"hours-container\":\"styles_hours-container__3XZzL\",\"day-column\":\"styles_day-column__2sQzS\",\"day-hours\":\"styles_day-hours__3_7p4\",\"cell\":\"styles_cell__1OJUD\",\"time\":\"styles_time__1X-Hn\",\"title\":\"styles_title__2dKTz\",\"is-hour-start\":\"styles_is-hour-start__1Doa3\",\"header\":\"styles_header__1IF59\",\"first\":\"styles_first__1t63n\",\"popup\":\"styles_popup__2oSt1\",\"range-boxes\":\"styles_range-boxes__39XBE\",\"event-content\":\"styles_event-content__1EBie\",\"start\":\"styles_start__2DXVx\",\"end\":\"styles_end__2XnIt\"};","export const createPageMapCoordsToContainer = (container: HTMLElement) => {\n  return (event: React.MouseEvent | MouseEvent | TouchEvent) => {\n    let clientX: number;\n    let clientY: number;\n    let pageX: number;\n    let pageY: number;\n\n    if ('changedTouches' in event) {\n      ({ clientX, clientY, pageX, pageY } = event.changedTouches[0]);\n    } else {\n      ({ clientX, clientY, pageX, pageY } = event);\n    }\n    const { top, left } = container.getBoundingClientRect();\n\n    return {\n      clientX,\n      clientY,\n      pageX,\n      pageY,\n      top,\n      left,\n      x: clientX - left,\n      y: clientY - top\n    };\n  };\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { isEqual } from 'lodash';\nimport { fromEvent, merge, of } from 'rxjs';\nimport {\n  tap,\n  map,\n  takeUntil,\n  mergeMap,\n  startWith,\n  distinctUntilChanged,\n  filter,\n  delay\n} from 'rxjs/operators';\nimport { createPageMapCoordsToContainer } from '../utils/createPageMapCoordsToContainer';\nimport { Rect } from '../types';\n\nconst prevent = tap((e: TouchEvent) => {\n  e.preventDefault();\n  e.stopPropagation();\n});\n\nexport function useClickAndDrag(ref: React.RefObject<HTMLElement>) {\n  const [style, setStyle] = useState({\n    transform: 'translate(0, 0)',\n    width: 0,\n    height: 0\n  });\n  const [box, setBox] = useState<Rect | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hasFinishedDragging, setHasFinishedDragging] = useState(false);\n\n  useEffect(() => {\n    const container = ref.current;\n    if (!container) {\n      return;\n    }\n\n    const mapCoordsToContainer = createPageMapCoordsToContainer(container);\n\n    const touchMove$ = fromEvent<TouchEvent>(window, 'touchmove', {\n      passive: false\n    }).pipe(prevent);\n\n    const touchEnd$ = fromEvent<TouchEvent>(window, 'touchend', {\n      passive: true\n    });\n\n    const touchStart$ = fromEvent<TouchEvent>(container, 'touchstart', {\n      passive: false\n    });\n\n    const touchStartWithDelay$ = touchStart$.pipe(\n      mergeMap(start =>\n        of(start).pipe(\n          delay(300),\n          takeUntil(touchMove$),\n          prevent\n        )\n      )\n    );\n\n    const mouseDown$ = fromEvent<MouseEvent>(container, 'mousedown', {\n      passive: true\n    }).pipe(filter(event => event.which === 1));\n\n    const mouseMove$ = fromEvent<MouseEvent>(window, 'mousemove', {\n      passive: true\n    });\n\n    const mouseUp$ = fromEvent<MouseEvent>(window, 'mouseup', {\n      passive: true\n    });\n\n    const dragStart$ = merge(mouseDown$, touchStartWithDelay$).pipe(\n      map(mapCoordsToContainer)\n    );\n\n    const dragEnd$ = merge(mouseUp$, touchEnd$).pipe(\n      map(mapCoordsToContainer),\n      tap(() => {\n        setIsDragging(false);\n        setHasFinishedDragging(true);\n      })\n    );\n\n    const move$ = merge(mouseMove$, touchMove$).pipe(map(mapCoordsToContainer));\n\n    const box$ = dragStart$.pipe(\n      tap(() => {\n        setIsDragging(true);\n        setHasFinishedDragging(false);\n      }),\n      mergeMap(down => {\n        return move$.pipe(\n          startWith(down),\n          map(\n            (move): Rect => {\n              const startX = Math.max(down.x, 0);\n              const startY = Math.max(down.y, 0);\n              const endX = Math.min(move.x, container.scrollWidth);\n              const endY = Math.min(move.y, container.scrollHeight);\n              const top = Math.min(startY, endY);\n              const bottom = Math.max(startY, endY);\n              const left = Math.min(startX, endX);\n              const right = Math.max(startX, endX);\n\n              return {\n                startX,\n                startY,\n                endX,\n                endY,\n                top,\n                bottom,\n                left,\n                right,\n                width: right - left,\n                height: bottom - top\n              };\n            }\n          ),\n          takeUntil(dragEnd$)\n        );\n      }),\n      distinctUntilChanged(isEqual)\n    );\n\n    const style$ = box$.pipe(\n      map(({ top, left, width, height }) => ({\n        transform: `translate(${left}px, ${top}px)`,\n        width,\n        height\n      }))\n    );\n\n    const boxSubscriber = box$.subscribe(setBox);\n    const styleSubscriber = style$.subscribe(setStyle);\n\n    return () => {\n      boxSubscriber.unsubscribe();\n      styleSubscriber.unsubscribe();\n    };\n  }, [ref.current]);\n\n  const cancel = useCallback(() => {\n    setIsDragging(false);\n    setHasFinishedDragging(false);\n    setBox(null);\n  }, [setBox]);\n\n  return { style, box, isDragging, cancel, hasFinishedDragging };\n}\n","import mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\nconst weakMap = new WeakMap<typeof document | Element, MousetrapInstance>();\n\n/**\n * Use mousetrap hook\n *\n * @param handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  handlerCallback - A function that is triggered on key combo catch.\n */\nexport default function useMousetrap(\n  handlerKey: string | string[],\n  handlerCallback: () => void,\n  element: typeof document | Element | null\n) {\n  const actionRef = useRef<typeof handlerCallback | null>(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    let instance = weakMap.get(element);\n\n    if (!instance) {\n      instance = new Mousetrap(element as Element);\n      weakMap.set(element, instance);\n    }\n\n    instance.bind(handlerKey, () => {\n      typeof actionRef.current === 'function' && actionRef.current();\n    });\n\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey, element]);\n}\n","import { useState } from 'react';\nimport { useEventListener } from './useEventListener';\n\nexport function useScrollPosition(\n  root: React.RefObject<HTMLElement>,\n  { passive = true, enabled = true } = {}\n) {\n  const [position, setPosition] = useState({ scrollTop: 0, scrollLeft: 0 });\n\n  useEventListener(\n    root,\n    'scroll',\n    event => {\n      if (event && event.target) {\n        // @ts-ignore\n        const { scrollTop, scrollLeft } = event.target;\n        setPosition({ scrollTop, scrollLeft });\n      }\n    },\n    { passive },\n    { enabled }\n  );\n\n  return position;\n}\n","import { useEffect } from 'react';\n\nexport function useEventListener<\n  K extends keyof HTMLElementEventMap,\n  Element extends HTMLElement\n>(\n  ref: React.RefObject<Element>,\n  event: K,\n  listener: (this: Element, event: HTMLElementEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n  { enabled = true } = {}\n) {\n  useEffect(() => {\n    if (ref.current === null) {\n      return;\n    }\n\n    if (enabled) {\n      ref.current.addEventListener(event, listener, options);\n    } else if (listener) {\n      ref.current.removeEventListener(event, listener);\n    }\n\n    return () => {\n      if (!ref.current) {\n        return;\n      }\n\n      ref.current.removeEventListener(event, listener);\n    };\n  }, [ref.current, listener, options, enabled]);\n}\n","import React, { useMemo } from 'react';\nimport { useScrollPosition } from './useScrollPosition';\n\nexport function useStickyStyle(\n  scrollParent: React.RefObject<HTMLElement>,\n  { top = false, left = false }: { top?: boolean; left?: boolean }\n) {\n  const { scrollLeft, scrollTop } = useScrollPosition(scrollParent, {\n    enabled: top || left\n  });\n\n  const stickyStyle = useMemo<React.CSSProperties>(\n    () => ({\n      transform: `translate(${left ? scrollLeft : 0}px, ${\n        top ? scrollTop : 0\n      }px)`,\n      zIndex: 3\n    }),\n    [left ? scrollLeft : 0, top ? scrollTop : 0]\n  );\n\n  return stickyStyle;\n}\n","export const getSpan = (x1: number, x2: number) => 1 + Math.abs(x2 - x1);\n","import { addMinutes, addDays } from 'date-fns';\n\nexport const cellToDate = ({\n  startX,\n  startY,\n  toMin,\n  originDate\n}: {\n  startX: number;\n  startY: number;\n  toMin: (y: number) => number;\n  toDay: (x: number) => number;\n  originDate: Date;\n}) => addMinutes(addDays(originDate, startX), toMin(startY));\n","import { Event } from '../types';\n// @ts-ignore\nimport _mergeRanges from 'merge-ranges';\nimport { compareAsc } from 'date-fns';\n\nexport function mergeRanges(event: Event): Event {\n  return _mergeRanges([...event].map(d => d.map(c => new Date(c))));\n}\n\nexport function mergeEvents(event1: Event, event2: Event | null): Event {\n  if (event2 === null) {\n    return event1;\n  }\n\n  return mergeRanges([...event1, ...event2]).sort((range1, range2) =>\n    compareAsc(range1[0], range2[0])\n  );\n}\n","import classcat from 'classcat';\nimport { getMinutes } from 'date-fns';\nimport React from 'react';\nimport { CellInfo, DateRange } from '../types';\n\nexport const Cell = React.memo(function Cell({\n  timeIndex,\n  children,\n  classes,\n  getDateRangeForVisualGrid\n}: {\n  timeIndex: number;\n  classes: Record<string, string>;\n  getDateRangeForVisualGrid(cell: CellInfo): DateRange[];\n  children?(options: { start: Date; isHourStart: boolean }): React.ReactNode;\n}) {\n  const [[start]] = getDateRangeForVisualGrid({\n    startX: 0,\n    startY: timeIndex,\n    endX: 0,\n    endY: timeIndex + 1,\n    spanX: 1,\n    spanY: 1\n  });\n\n  const isHourStart = getMinutes(start) === 0;\n\n  return (\n    <div\n      className={classcat([\n        classes['cell'],\n        { [classes['is-hour-start']]: isHourStart }\n      ])}\n    >\n      {children && children({ start, isHourStart })}\n    </div>\n  );\n});\n","import { isSameDay, format, getMinutes } from 'date-fns';\n\nconst dropSame = (\n  dates: [Date, Date],\n  template: string,\n  takeSecond: boolean = false\n) => {\n  const [first, second] = dates.map(date => format(date, template));\n  if (first !== second) {\n    return [first, second];\n  }\n\n  if (takeSecond) {\n    return ['', second];\n  }\n\n  return [first, ''];\n};\n\nconst formatHour = (date: Date) => {\n  if (getMinutes(date) === 0) {\n    return format(date, 'h');\n  }\n\n  return format(date, 'h:m');\n};\n\nexport const getTextForDateRange = (\n  dates: [Date, Date],\n  template?: string,\n  template2?: string\n) => {\n  const start = dates[0];\n  const end = dates[dates.length - 1];\n\n  if (isSameDay(start, end) && !template) {\n    const [firstM, secondM] = dropSame(dates, 'a', true);\n    return `${format(start, 'ddd')} ${formatHour(\n      start\n    )}${firstM} – ${formatHour(end)}${secondM}`;\n  }\n\n  const formatTemplate = 'ddd h:mma';\n  const startDateStr = format(start, template || formatTemplate);\n  const endDateStr = format(end, template2 || formatTemplate);\n\n  return `${startDateStr} – ${endDateStr}`;\n};\n","import classcat from 'classcat';\nimport { format } from 'date-fns';\nimport invariant from 'invariant';\nimport Resizable, { ResizeCallback } from 're-resizable';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\nimport useMousetrap from '../hooks/useMousetrap';\nimport { CellInfo } from '../types';\nimport { ScheduleProps } from './Schedule';\nimport { getTextForDateRange } from '../utils/getTextForDateRange';\n// @ts-ignore\nimport VisuallyHidden from '@reach/visually-hidden';\n\nexport const RangeBox = React.memo(function RangeBox({\n  classes,\n  grid,\n  isBeingEdited,\n  rangeIndex,\n  cellIndex,\n  cellArray,\n  cell,\n  className,\n  onChange,\n  cellInfoToDateRange,\n  isResizable,\n  isDeletable,\n  isMovable\n}: ScheduleProps & {\n  cellIndex: number;\n  cellArray: CellInfo[];\n  className?: string;\n  rangeIndex: number;\n  cell: CellInfo;\n}) {\n  const ref = useRef(null);\n  const [modifiedCell, setModifiedCell] = useState(cell);\n  const originalRect = useMemo(() => grid.getRectFromCell(cell), [cell, grid]);\n  const rect = useMemo(() => grid.getRectFromCell(modifiedCell), [\n    modifiedCell,\n    grid\n  ]);\n\n  useEffect(() => {\n    setModifiedCell(cell);\n  }, [cell]);\n\n  const modifiedDateRange = useMemo(() => cellInfoToDateRange(modifiedCell), [\n    modifiedCell\n  ]);\n\n  const handleDelete = useCallback(() => {\n    if (!isDeletable) {\n      return;\n    }\n\n    onChange && onChange(undefined, rangeIndex);\n  }, [ref.current, onChange, isDeletable, rangeIndex]);\n\n  useMousetrap('del', handleDelete, ref.current);\n\n  const { top, left, width, height } = rect;\n\n  const isStart = cellIndex === 0;\n  const isEnd = cellIndex === cellArray.length - 1;\n\n  const handleStop = useCallback(() => {\n    onChange && onChange(cellInfoToDateRange(modifiedCell), rangeIndex);\n  }, [modifiedCell, rangeIndex, cellInfoToDateRange, onChange]);\n\n  useMousetrap(\n    'up',\n    () => {\n      if (!isMovable) {\n        return;\n      }\n\n      if (modifiedCell.startY === 0) {\n        return;\n      }\n\n      const newCell = {\n        ...modifiedCell,\n        startY: modifiedCell.startY - 1,\n        endY: modifiedCell.endY - 1\n      };\n\n      onChange && onChange(cellInfoToDateRange(newCell), rangeIndex);\n    },\n    ref.current\n  );\n\n  useMousetrap(\n    'down',\n    () => {\n      if (!isMovable) {\n        return;\n      }\n\n      if (modifiedCell.endY === grid.numVerticalCells - 1) {\n        return;\n      }\n\n      const newCell = {\n        ...modifiedCell,\n        startY: modifiedCell.startY + 1,\n        endY: modifiedCell.endY + 1\n      };\n\n      onChange && onChange(cellInfoToDateRange(newCell), rangeIndex);\n    },\n    ref.current\n  );\n\n  const handleDrag: DraggableEventHandler = useCallback(\n    (event, { y, x }) => {\n      if (!isMovable) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const _startY = y;\n      const _endY = _startY + rect.height;\n      const _startX = x;\n      const _endX = _startX + rect.width;\n      const newTop = Math.min(_startY, _endY);\n      const newLeft = Math.min(_startX, _endX);\n      const newBottom = newTop + rect.height;\n      const newRight = newLeft + rect.width;\n\n      const newRect = {\n        ...rect,\n        top: newTop,\n        bottom: newBottom,\n        right: newRight,\n        left: newLeft\n      };\n\n      const { startY, startX } = grid.getCellFromRect(newRect);\n\n      const newCell = {\n        ...cell,\n        startX,\n        endX: startX + cell.spanX - 1,\n        startY,\n        endY: startY + cell.spanY - 1\n      };\n\n      invariant(\n        newCell.spanY === cell.spanY && newCell.spanX === cell.spanX,\n        `Expected the dragged time cell to have the same dimensions)`\n      );\n\n      setModifiedCell(newCell);\n    },\n    [grid, rect, isMovable, setModifiedCell]\n  );\n\n  const handleResize: ResizeCallback = useCallback(\n    (event, direction, _ref, delta) => {\n      if (!isResizable) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (delta.height === 0) {\n        return;\n      }\n\n      const newSize = {\n        height: delta.height + rect.height,\n        width: delta.width + rect.width + 20\n      };\n\n      const newRect = {\n        ...originalRect,\n        ...newSize\n      };\n\n      if (direction.includes('top')) {\n        newRect.top -= delta.height;\n      } else if (direction.includes('bottom')) {\n        newRect.bottom += delta.height;\n      }\n\n      const { spanY, startY, endY } = grid.getCellFromRect(newRect);\n      const newCell = {\n        ...cell,\n        spanY,\n        startY,\n        endY\n      };\n\n      setModifiedCell(newCell);\n    },\n    [grid, rect, isResizable, setModifiedCell, originalRect]\n  );\n\n  return (\n    <Draggable\n      axis={isMovable ? 'both' : 'none'}\n      bounds={{\n        top: 0,\n        bottom: grid.totalHeight - height,\n        left: 0,\n        right: grid.totalWidth\n      }}\n      position={{ x: left, y: top }}\n      onDrag={handleDrag}\n      onStop={handleStop}\n      cancel={`.${classes.handle}`}\n    >\n      <button\n        className={classcat([\n          classes['event'],\n          classes['button-reset'],\n          classes['range-box'],\n          className,\n          {\n            [classes['is-draggable']]: isMovable,\n            [classes['is-being-edited']]: isBeingEdited && isBeingEdited(cell)\n          }\n        ])}\n        ref={ref}\n        tabIndex={0}\n        style={{ width: width - 20, height }}\n      >\n        <Resizable\n          size={{ ...originalRect, width: originalRect.width - 20 }}\n          onResize={handleResize}\n          onResizeStop={handleStop}\n          handleWrapperClass={classes['handle-wrapper']}\n          enable={\n            isResizable\n              ? {\n                  top: true,\n                  bottom: true\n                }\n              : {}\n          }\n          handleClasses={{\n            bottom: classcat([classes['handle'], classes.bottom]),\n            bottomLeft: classcat([classes['handle'], classes['bottom-left']]),\n            bottomRight: classcat([classes['handle'], classes['bottom-right']]),\n            left: classcat([classes['handle'], classes.left]),\n            right: classcat([classes['handle'], classes.right]),\n            top: classcat([classes['handle'], classes.top]),\n            topLeft: classcat([classes['handle'], classes['top-left']]),\n            topRight: classcat([classes['handle'], classes['top-right']])\n          }}\n        >\n          <div className={classes['event-content']}>\n            <VisuallyHidden>\n              {getTextForDateRange(modifiedDateRange)}\n            </VisuallyHidden>\n            <span aria-hidden className={classes['start']}>\n              {isStart && format(modifiedDateRange[0], 'h:mma')}\n            </span>\n            <span aria-hidden className={classes['end']}>\n              {isEnd && format(modifiedDateRange[1], 'h:mma')}\n            </span>\n          </div>\n        </Resizable>\n      </button>\n    </Draggable>\n  );\n});\n","import React from 'react';\nimport { CellInfo, DateRange, Event, Grid, OnChangeCallback } from '../types';\nimport { RangeBox } from './RangeBox';\n\nexport type ScheduleProps = {\n  classes: Record<string, string>;\n  grid: Grid;\n  onChange?: OnChangeCallback;\n  isResizable?: boolean;\n  isDeletable?: boolean;\n  isMovable?: boolean;\n  isBeingEdited?(cell: CellInfo): boolean;\n  cellInfoToDateRange(cell: CellInfo): DateRange;\n};\n\nexport const Schedule = React.memo(function Schedule({\n  classes,\n  ranges,\n  grid,\n  className,\n  onChange,\n  isResizable,\n  isDeletable,\n  isMovable,\n  cellInfoToDateRange,\n  dateRangeToCells,\n  isBeingEdited\n}: {\n  dateRangeToCells(range: DateRange): CellInfo[];\n  ranges: Event;\n  className?: string;\n  classes: Record<string, string>;\n} & ScheduleProps) {\n  return (\n    <div className={classes['range-boxes']}>\n      {ranges.map((dateRange, rangeIndex) => {\n        return (\n          <span key={rangeIndex}>\n            {dateRangeToCells(dateRange).map((cell, cellIndex, array) => {\n              return (\n                <RangeBox\n                  classes={classes}\n                  key={cellIndex}\n                  isResizable={isResizable}\n                  isMovable={isMovable}\n                  isDeletable={isDeletable}\n                  cellInfoToDateRange={cellInfoToDateRange}\n                  cellArray={array}\n                  cellIndex={cellIndex}\n                  rangeIndex={rangeIndex}\n                  className={className}\n                  isBeingEdited={isBeingEdited}\n                  onChange={onChange}\n                  grid={grid}\n                  cell={cell}\n                />\n              );\n            })}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n","import useComponentSize from '@rehooks/component-size';\nimport classcat from 'classcat';\nimport { addDays, format, isEqual } from 'date-fns';\nimport invariant from 'invariant';\nimport { times } from 'lodash';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport 'resize-observer-polyfill/dist/ResizeObserver.global';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport useUndo from 'use-undo';\nimport { useClickAndDrag } from '../hooks/useClickAndDrag';\nimport useMousetrap from '../hooks/useMousetrap';\nimport { useStickyStyle } from '../hooks/useStickyStyle';\nimport {\n  CellInfo,\n  DateRange,\n  Event as CalendarEvent,\n  Grid,\n  OnChangeCallback\n} from '../types';\nimport { createGrid } from '../utils/createGrid';\nimport { createMapCellInfoToContiguousDateRange } from '../utils/createMapCellInfoToContiguousDateRange';\nimport {\n  createMapCellInfoToRecurringTimeRange,\n  RecurringTimeRange\n} from '../utils/createMapCellInfoToRecurringTimeRange';\nimport { createMapDateRangeToCells } from '../utils/createMapDateRangeToCells';\nimport { mergeEvents, mergeRanges } from '../utils/mergeEvents';\nimport { Cell } from './Cell';\nimport { Schedule } from './Schedule';\n\nconst MINS_IN_DAY = 24 * 60;\nconst horizontalPrecision = 1;\nconst toDay = (x: number) => x * horizontalPrecision;\nconst toX = (days: number) => days / horizontalPrecision;\n\nexport const TimeGridScheduler = React.memo(function TimeGridScheduler({\n  verticalPrecision = 30,\n  visualGridVerticalPrecision = 30,\n  schedule,\n  originDate = new Date(),\n  classes\n}: {\n  originDate?: Date;\n  verticalPrecision?: number;\n  visualGridVerticalPrecision?: number;\n  schedule: CalendarEvent;\n  classes: Record<string, string>;\n}) {\n  const numVerticalCells = MINS_IN_DAY / verticalPrecision;\n  const numHorizontalCells = 7 / horizontalPrecision;\n  const toMin = useCallback((y: number) => y * verticalPrecision, [\n    verticalPrecision\n  ]);\n  const toY = (mins: number) => mins / verticalPrecision;\n\n  const cellInfoToDateRanges = useMemo(\n    () =>\n      createMapCellInfoToRecurringTimeRange({\n        originDate,\n        fromY: toMin,\n        fromX: toDay\n      }),\n    [toMin, toDay, originDate]\n  );\n\n  const cellInfoToSingleDateRange = useCallback(\n    (cell: CellInfo): DateRange => {\n      const [first, ...rest] = cellInfoToDateRanges(cell);\n      invariant(\n        rest.length === 0,\n        `Expected \"cellInfoToSingleDateRange\" to return a single date range, found ${\n          rest.length\n        } additional ranges instead. This is a bug in @remotelock/weekly-scheduler`\n      );\n\n      return first;\n    },\n    [cellInfoToDateRanges]\n  );\n\n  const dateRangeToCells = useMemo(\n    () =>\n      createMapDateRangeToCells({\n        originDate,\n        numVerticalCells,\n        numHorizontalCells,\n        toX,\n        toY\n      }),\n    [toY, toX, numVerticalCells, numHorizontalCells, originDate]\n  );\n\n  const root = useRef<HTMLDivElement | null>(null);\n  const parent = useRef<HTMLDivElement | null>(null);\n  const timelineStickyStyle = useStickyStyle(root, { top: false, left: true });\n  const headerStickyStyle = useStickyStyle(root, { top: false, left: false });\n\n  const size = useComponentSize(parent);\n  const {\n    style,\n    box,\n    isDragging,\n    hasFinishedDragging,\n    cancel\n  } = useClickAndDrag(parent);\n  const [\n    pendingCreation,\n    setPendingCreation\n  ] = useState<RecurringTimeRange | null>(null);\n  const [\n    scheduleState,\n    {\n      set: setSchedule,\n      undo: undoSchedule,\n      redo: redoSchedule,\n      canUndo: canUndoSchedule,\n      canRedo: canRedoSchedule\n    }\n  ] = useUndo<CalendarEvent>(schedule);\n\n  const { totalHeight, totalWidth } = useMemo(() => {\n    let totalHeight: number | null = null;\n    let totalWidth: number | null = null;\n    if (parent.current !== null) {\n      ({ scrollHeight: totalHeight, scrollWidth: totalWidth } = parent.current);\n    }\n\n    return { totalHeight, totalWidth };\n  }, [parent.current, size]);\n\n  const grid = useMemo<Grid | null>(() => {\n    if (totalHeight === null || totalWidth === null) {\n      return null;\n    }\n\n    return createGrid({\n      totalHeight,\n      totalWidth,\n      numHorizontalCells,\n      numVerticalCells\n    });\n  }, [totalHeight, totalWidth, numHorizontalCells, numVerticalCells]);\n\n  useEffect(() => {\n    if (grid === null || box === null) {\n      setPendingCreation(null);\n      return;\n    }\n\n    const constrainedBox = box;\n    const cell = grid.getCellFromRect(constrainedBox);\n    const dateRanges = cellInfoToDateRanges(cell);\n    const event = dateRanges;\n    setPendingCreation(event);\n  }, [box, grid, setPendingCreation]);\n\n  useEffect(() => {\n    if (hasFinishedDragging) {\n      setSchedule(mergeEvents(scheduleState.present, pendingCreation));\n      setPendingCreation(null);\n    }\n  }, [\n    hasFinishedDragging,\n    setSchedule,\n    setPendingCreation,\n    pendingCreation,\n    scheduleState.present\n  ]);\n\n  useMousetrap(\n    'ctrl+z',\n    () => {\n      if (!canUndoSchedule) {\n        return;\n      }\n\n      undoSchedule();\n    },\n    document\n  );\n\n  useMousetrap(\n    'ctrl+shift+z',\n    () => {\n      if (!canRedoSchedule) {\n        return;\n      }\n\n      redoSchedule();\n    },\n    document\n  );\n\n  useMousetrap(\n    'esc',\n    () => {\n      if (pendingCreation) {\n        cancel();\n      }\n    },\n    document\n  );\n\n  useEffect(() => {\n    cancel();\n  }, [size]);\n\n  const handleEventChange = useCallback<OnChangeCallback>(\n    (newDateRange, rangeIndex) => {\n      if (!scheduleState.present && newDateRange) {\n        return [newDateRange];\n      }\n\n      let newSchedule = [...scheduleState.present];\n\n      if (!newDateRange) {\n        newSchedule.splice(rangeIndex, 1);\n      } else {\n        if (\n          isEqual(newDateRange[0], newSchedule[rangeIndex][0]) &&\n          isEqual(newDateRange[1], newSchedule[rangeIndex][1])\n        ) {\n          return;\n        }\n        newSchedule[rangeIndex] = newDateRange;\n      }\n\n      newSchedule = mergeRanges(newSchedule);\n\n      setSchedule(newSchedule);\n    },\n    [scheduleState.present]\n  );\n\n  const getDateRangeForVisualGrid = useMemo(\n    () =>\n      createMapCellInfoToContiguousDateRange({\n        originDate,\n        fromX: toDay,\n        fromY: y => y * visualGridVerticalPrecision\n      }),\n    [visualGridVerticalPrecision, toDay, originDate]\n  );\n\n  useEffect(() => {\n    if (!root.current || !root.current.contains(document.activeElement)) {\n      return;\n    }\n\n    document.activeElement &&\n      scrollIntoView(document.activeElement, {\n        scrollMode: 'if-needed',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n  }, [root.current, document.activeElement, scheduleState.present]);\n\n  const numVisualVerticalCells = (24 * 60) / visualGridVerticalPrecision;\n\n  return (\n    <div\n      ref={root}\n      className={classcat([\n        classes['root'],\n        { [classes['no-scroll']]: isDragging }\n      ])}\n    >\n      <div\n        style={timelineStickyStyle}\n        aria-hidden\n        className={classes['timeline']}\n      >\n        <div className={classes['header']}>\n          <div className={classes['day-column']}>\n            <div className={classcat([classes['cell'], classes.title])}>T</div>\n          </div>\n        </div>\n        <div className={classes['calendar']}>\n          <div className={classes['day-column']}>\n            <div className={classes['day-hours']}>\n              {times(numVisualVerticalCells).map(timeIndex => {\n                return (\n                  <Cell\n                    classes={classes}\n                    getDateRangeForVisualGrid={getDateRangeForVisualGrid}\n                    key={timeIndex}\n                    timeIndex={timeIndex}\n                  >\n                    {({ start, isHourStart }) => {\n                      if (isHourStart) {\n                        return (\n                          <div className={classes['time']}>\n                            {format(start, 'h a')}\n                          </div>\n                        );\n                      }\n\n                      return null;\n                    }}\n                  </Cell>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div\n          style={headerStickyStyle}\n          role=\"presentation\"\n          className={classcat([classes['calendar'], classes.header])}\n        >\n          {times(7).map(i => (\n            <div key={i} role=\"presentation\" className={classes['day-column']}>\n              <div className={classcat([classes['cell'], classes.title])}>\n                {format(addDays(originDate, i), 'ddd')}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className={classes['layer-container']}>\n          {isDragging && (\n            <div className={classes['drag-box']} style={style}>\n              {hasFinishedDragging && <div className={classes['popup']} />}\n            </div>\n          )}\n          {grid && pendingCreation && isDragging && (\n            <Schedule\n              classes={classes}\n              dateRangeToCells={dateRangeToCells}\n              cellInfoToDateRange={cellInfoToSingleDateRange}\n              className={classes['is-pending-creation']}\n              ranges={mergeEvents(scheduleState.present, pendingCreation)}\n              grid={grid}\n            />\n          )}\n          {grid && !pendingCreation && (\n            <Schedule\n              classes={classes}\n              dateRangeToCells={dateRangeToCells}\n              cellInfoToDateRange={cellInfoToSingleDateRange}\n              isResizable\n              isMovable\n              isDeletable\n              onChange={handleEventChange}\n              ranges={scheduleState.present}\n              grid={grid}\n            />\n          )}\n\n          <div ref={parent} role=\"grid\" className={classes['calendar']}>\n            {times(7).map(dayIndex => {\n              return (\n                <div\n                  role=\"gridcell\"\n                  key={dayIndex}\n                  className={classes['day-column']}\n                >\n                  <div className={classes['day-hours']}>\n                    {times(numVisualVerticalCells).map(timeIndex => {\n                      return (\n                        <Cell\n                          classes={classes}\n                          getDateRangeForVisualGrid={getDateRangeForVisualGrid}\n                          key={timeIndex}\n                          timeIndex={timeIndex}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { DateRange, MapCellInfoToDateRange } from '../types';\nimport { range } from 'lodash';\nimport {\n  addMinutes,\n  isBefore,\n  endOfDay,\n  isEqual,\n  subDays,\n  startOfDay,\n  compareAsc\n} from 'date-fns';\nimport { cellToDate } from './cellToDate';\n\nexport type RecurringTimeRange = DateRange[];\n\nexport const createMapCellInfoToRecurringTimeRange: MapCellInfoToDateRange = ({\n  fromY: toMin,\n  fromX: toDay,\n  originDate\n}) => ({ startX, startY, endX, spanY }) => {\n  const result = range(startX, endX + 1)\n    .map(i => {\n      const startDate = cellToDate({\n        startX: i,\n        startY,\n        toMin,\n        toDay,\n        originDate\n      });\n      let endDate = addMinutes(startDate, toMin(spanY));\n\n      if (isEqual(endDate, startOfDay(endDate))) {\n        endDate = endOfDay(subDays(endDate, 1));\n      }\n\n      const range: DateRange = isBefore(startDate, endDate)\n        ? [startDate, endDate]\n        : [endDate, startDate];\n\n      return range;\n    })\n    .sort((range1, range2) => compareAsc(range1[0], range2[0]));\n\n  return result;\n};\n","import { DateRange, CellInfo } from '../types';\nimport {\n  startOfDay,\n  differenceInDays,\n  differenceInMinutes,\n  isEqual\n} from 'date-fns';\nimport { range } from 'lodash';\nimport { getSpan } from './getSpan';\n\nexport const createMapDateRangeToCells = ({\n  toX = (x: number) => x,\n  toY,\n  numVerticalCells,\n  originDate\n}: {\n  toX: (day: number) => number;\n  toY: (min: number) => number;\n  numHorizontalCells: number;\n  numVerticalCells: number;\n  originDate: Date;\n}) => ([start, end]: DateRange): CellInfo[] => {\n  const originOfThisDay = startOfDay(start);\n  const _startX = toX(differenceInDays(start, originDate));\n  const _startY = toY(differenceInMinutes(start, originOfThisDay));\n  const _endX = toX(differenceInDays(end, originDate));\n  const _endY = toY(differenceInMinutes(end, startOfDay(end))) - 1;\n\n  const cells = range(_startX, _endX + 1).map(i => {\n    const startX = i;\n    const endX = i;\n    const atStart = i === _startX;\n    const atEnd = i === _endX;\n    const startY = !atStart ? 0 : _startY;\n    const endY = !atEnd ? numVerticalCells - 1 : _endY;\n    const spanX = getSpan(startX, endX);\n    const spanY = getSpan(startY, endY);\n\n    return {\n      startX,\n      startY,\n      endX,\n      endY,\n      spanX,\n      spanY\n    };\n  });\n\n  if (isEqual(end, startOfDay(end))) {\n    cells.pop();\n  }\n\n  return cells;\n};\n","import { Grid, CellInfo, Rect } from '../types';\nimport { clamp, floor, round } from 'lodash';\nimport { getSpan } from './getSpan';\n\nexport const createGrid = ({\n  totalHeight,\n  totalWidth,\n  numVerticalCells,\n  numHorizontalCells\n}: {\n  totalHeight: number;\n  totalWidth: number;\n  numVerticalCells: number;\n  numHorizontalCells: number;\n}): Grid => {\n  const cellHeight = floor(totalHeight / numVerticalCells);\n  const cellWidth = floor(totalWidth / numHorizontalCells);\n\n  return {\n    totalHeight,\n    totalWidth,\n    numVerticalCells,\n    numHorizontalCells,\n    cellWidth,\n    cellHeight,\n\n    getRectFromCell(data: CellInfo) {\n      const { endX, startX, endY, startY, spanX, spanY } = data;\n      const bottom = endY * this.cellHeight;\n      const top = startY * this.cellHeight;\n      const left = startX * this.cellWidth;\n      const right = endX * this.cellWidth;\n      const height = spanY * this.cellHeight;\n      const width = spanX * this.cellWidth;\n\n      return {\n        bottom,\n        top,\n        left,\n        right,\n        height,\n        width,\n\n        // @TODO: check the math\n        startX: startX * this.cellWidth,\n        endX: endX * this.cellWidth,\n        startY: startY * this.cellHeight,\n        endY: endY * this.cellHeight\n      };\n    },\n\n    getCellFromRect(data: Rect) {\n      const startX = clamp(\n        floor(data.left / this.cellWidth),\n        0,\n        numHorizontalCells - 1\n      );\n      const startY = clamp(\n        round(data.top / this.cellHeight),\n        0,\n        numVerticalCells - 1\n      );\n      const endX = clamp(\n        floor(data.right / this.cellWidth),\n        0,\n        numHorizontalCells - 1\n      );\n      const endY = clamp(\n        round(data.bottom / this.cellHeight),\n        0,\n        numVerticalCells - 1\n      );\n      const spanX = clamp(getSpan(startX, endX), 1, numHorizontalCells);\n      const spanY = clamp(getSpan(startY, endY), 1, numVerticalCells);\n\n      return {\n        spanX,\n        spanY,\n        startX,\n        startY,\n        endX,\n        endY\n      };\n    }\n  };\n};\n","import { MapCellInfoToDateRange } from '../types';\nimport { isBefore } from 'date-fns';\nimport { cellToDate } from './cellToDate';\n\nexport const createMapCellInfoToContiguousDateRange: MapCellInfoToDateRange = ({\n  fromY: toMin,\n  fromX: toDay,\n  originDate\n}) => ({ startX, startY, endX, endY }) => {\n  const startDate = cellToDate({ startX, startY, toMin, toDay, originDate });\n  const endDate = cellToDate({\n    startX: endX,\n    startY: endY,\n    toMin,\n    toDay,\n    originDate\n  });\n\n  return [\n    isBefore(startDate, endDate) ? [startDate, endDate] : [endDate, startDate]\n  ];\n};\n","import { compareAsc, startOfWeek } from 'date-fns';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'resize-observer-polyfill/dist/ResizeObserver.global';\nimport { Event as CalendarEvent } from './types';\n\nimport { TimeGridScheduler } from './components/TimeGridScheduler';\nimport classes from './styles.module.scss';\n\nconst rangeStrings: [string, string][] = [\n  ['2019-03-03T22:45:00.000Z', '2019-03-04T01:15:00.000Z'],\n  ['2019-03-05T22:00:00.000Z', '2019-03-06T01:00:00.000Z'],\n  ['2019-03-04T22:15:00.000Z', '2019-03-05T01:00:00.000Z'],\n  ['2019-03-07T05:30:00.000Z', '2019-03-07T10:00:00.000Z'],\n  ['2019-03-08T22:00:00.000Z', '2019-03-09T01:00:00.000Z'],\n  ['2019-03-09T22:00:00.000Z', '2019-03-10T01:00:00.000Z'],\n  ['2019-03-06T22:00:00.000Z', '2019-03-07T01:00:00.000Z']\n];\n\nconst defaultSchedule: CalendarEvent = rangeStrings\n  .map(range => range.map(dateString => new Date(dateString)) as [Date, Date])\n  .sort((range1, range2) => compareAsc(range1[0], range2[0]));\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <TimeGridScheduler\n    classes={classes}\n    originDate={startOfWeek(new Date('2019-03-04'), { weekStartsOn: 1 })}\n    schedule={defaultSchedule}\n    verticalPrecision={15}\n  />,\n  rootElement\n);\n"],"sourceRoot":""}