{"version":3,"sources":["styles.module.scss","hooks/useMousetrap.ts","components/RangeBox.tsx","components/Schedule.tsx","utils/createPageMapCoordsToContainer.ts","hooks/useScrollPosition.ts","hooks/useEventListener.ts","hooks/useStickyStyle.ts","utils/getSpan.ts","utils/cellToDate.ts","utils/mergeEvents.ts","components/TimeGridScheduler.tsx","utils/createMapCellInfoToRecurringTimeRange.ts","utils/createMapDateRangeToCells.ts","hooks/useClickAndDrag.ts","utils/createGrid.ts","utils/createMapCellInfoToContiguousDateRange.ts","index.tsx"],"names":["module","exports","no-scroll","root","timeline","debug","debug-active","calendar","react-draggable","handle-wrapper","handle","top","bottom","layer-container","event","drag-box","draggable","button-reset","is-draggable","react-draggable-dragging","is-pending-creation","hours-container","day-column","day-hours","cell","time","title","header","first","popup","range-boxes","event-content","start","end","weakMap","WeakMap","useMousetrap","handlerKey","handlerCallback","element","actionRef","useRef","current","useEffect","instance","get","Mousetrap","set","bind","mousetrap","unbind","RangeBox","React","memo","_ref","_ref3","classes","grid","isBeingEdited","rangeIndex","cellIndex","cellArray","className","onChange","cellInfoToDateRange","isResizable","isDeletable","isMovable","ref","_useState","useState","_useState2","Object","slicedToArray","modifiedCell","setModifiedCell","originalRect","useMemo","getRectFromCell","rect","modifiedDateRange","useCallback","undefined","left","width","height","style","isStart","isEnd","length","handleStop","startY","newCell","objectSpread","endY","numVerticalCells","handleDrag","_ref2","y","preventDefault","stopPropagation","_start","_end","newTop","Math","min","newBottom","newRect","_grid$getCellFromRect","getCellFromRect","invariant","spanY","concat","handleResize","direction","delta","newSize","includes","_grid$getCellFromRect2","react_default","a","createElement","react_draggable_default","axis","bounds","totalHeight","right","totalWidth","position","x","onDrag","onStop","cancel","classcat","defineProperty","tabIndex","lib","size","onResize","onResizeStop","handleWrapperClass","enable","handleClasses","bottomLeft","bottomRight","topLeft","topRight","format","Schedule","ranges","dateRangeToCells","map","dateRange","key","array","RangeBox_RangeBox","createPageMapCoordsToContainer","container","clientX","clientY","pageX","pageY","_event$changedTouches","changedTouches","_container$getBoundin","getBoundingClientRect","useScrollPosition","arguments","_ref$passive","passive","_ref$enabled","enabled","scrollTop","scrollLeft","setPosition","listener","options","addEventListener","removeEventListener","useEventListener","target","_event$target","useStickyStyle","scrollParent","_ref$top","_ref$left","_useScrollPosition","transform","zIndex","getSpan","x1","x2","abs","cellToDate","startX","toMin","originDate","addMinutes","addDays","mergeRanges","_mergeRanges","toConsumableArray","d","c","Date","mergeEvents","event1","event2","sort","range1","range2","compareAsc","toDay","toX","days","TimeGridScheduler","_ref$verticalPrecisio","verticalPrecision","_ref$visualGridVertic","visualGridVerticalPrecision","schedule","_ref$originDate","toY","mins","cellInfoToDateRanges","fromY","fromX","endX","range","i","startDate","endDate","isEqual","startOfDay","endOfDay","subDays","isBefore","rangeA","rangeB","createMapCellInfoToRecurringTimeRange","cellInfoToSingleDateRange","_cellInfoToDateRanges","_cellInfoToDateRanges2","toArray","rest","slice","_ref$toX","originOfThisDay","_startX","differenceInDays","_startY","differenceInMinutes","_endX","_endY","cells","spanX","pop","createMapDateRangeToCells","numHorizontalCells","parent","timelineStickyStyle","headerStickyStyle","useComponentSize","_useClickAndDrag","setStyle","_useState3","_useState4","box","setBox","_useState5","_useState6","isDragging","setIsDragging","_useState7","_useState8","hasFinishedDragging","setHasFinishedDragging","mapCoordsToContainer","prevent","tap","e","touchMove$","fromEvent","window","pipe","touchEnd$","touchStartWithDelay$","mergeMap","of","delay","takeUntil","mouseDown$","filter","which","mouseMove$","mouseUp$","dragStart$","merge","dragEnd$","move$","box$","down","startWith","move","max","scrollWidth","scrollHeight","distinctUntilChanged","style$","boxSubscriber","subscribe","styleSubscriber","unsubscribe","useClickAndDrag","pendingCreation","setPendingCreation","_useUndo","useUndo","_useUndo2","scheduleState","_useUndo2$","setSchedule","undoSchedule","undo","redoSchedule","redo","canUndoSchedule","canUndo","canRedoSchedule","canRedo","_useMemo","_parent$current","cellHeight","floor","cellWidth","data","this","clamp","round","createGrid","constrainedBox","dateRanges","present","document","handleEventChange","newDateRange","newSchedule","splice","getDateRangeForVisualGrid","createMapCellInfoToContiguousDateRange","contains","activeElement","scrollIntoView","scrollMode","block","inline","times","timeIndex","startText","_getDateRangeForVisua","_getDateRangeForVisua2","Schedule_Schedule","dayIndex","defaultSchedule","dateString","rootElement","getElementById","ReactDOM","render","TimeGridScheduler_TimeGridScheduler","startOfWeek","weekStartsOn"],"mappings":"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","file":"static/js/main.c4d75233.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"no-scroll\":\"styles_no-scroll__1vsU8\",\"root\":\"styles_root__3QAxj\",\"timeline\":\"styles_timeline__106Mk\",\"debug\":\"styles_debug__2SKKM\",\"debug-active\":\"styles_debug-active___9OUc\",\"calendar\":\"styles_calendar__3Xx2Y\",\"react-draggable\":\"styles_react-draggable__2QRVw\",\"handle-wrapper\":\"styles_handle-wrapper__2T7f7\",\"handle\":\"styles_handle__1dKGL\",\"top\":\"styles_top__2FFal\",\"bottom\":\"styles_bottom__3nd0X\",\"layer-container\":\"styles_layer-container__1Quoi\",\"event\":\"styles_event__bjik1\",\"drag-box\":\"styles_drag-box__OvX9t\",\"draggable\":\"styles_draggable__a1ktL\",\"button-reset\":\"styles_button-reset__3_zQt\",\"is-draggable\":\"styles_is-draggable__2U2x2\",\"react-draggable-dragging\":\"styles_react-draggable-dragging__1T3s8\",\"is-pending-creation\":\"styles_is-pending-creation__2vDDI\",\"hours-container\":\"styles_hours-container__3XZzL\",\"day-column\":\"styles_day-column__2sQzS\",\"day-hours\":\"styles_day-hours__3_7p4\",\"cell\":\"styles_cell__1OJUD\",\"time\":\"styles_time__1X-Hn\",\"title\":\"styles_title__2dKTz\",\"header\":\"styles_header__1IF59\",\"first\":\"styles_first__1t63n\",\"popup\":\"styles_popup__2oSt1\",\"range-boxes\":\"styles_range-boxes__39XBE\",\"event-content\":\"styles_event-content__1EBie\",\"start\":\"styles_start__2DXVx\",\"end\":\"styles_end__2XnIt\"};","import mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\nconst weakMap = new WeakMap<typeof document | Element, MousetrapInstance>();\n\n/**\n * Use mousetrap hook\n *\n * @param handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  handlerCallback - A function that is triggered on key combo catch.\n */\nexport default function useMousetrap(\n  handlerKey: string | string[],\n  handlerCallback: () => void,\n  element: typeof document | Element | null\n) {\n  const actionRef = useRef<typeof handlerCallback | null>(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    let instance = weakMap.get(element);\n\n    if (!instance) {\n      instance = new Mousetrap(element as Element);\n      weakMap.set(element, instance);\n    }\n\n    instance.bind(handlerKey, () => {\n      typeof actionRef.current === 'function' && actionRef.current();\n    });\n\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey, element]);\n}\n","import classcat from 'classcat';\nimport { format } from 'date-fns';\nimport invariant from 'invariant';\nimport Resizable, { ResizeCallback } from 're-resizable';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\nimport useMousetrap from '../hooks/useMousetrap';\nimport { CellInfo } from '../types';\nimport { ScheduleProps } from './Schedule';\n\nexport const RangeBox = React.memo(function RangeBox({\n  classes,\n  grid,\n  isBeingEdited,\n  rangeIndex,\n  cellIndex,\n  cellArray,\n  cell,\n  className,\n  onChange,\n  cellInfoToDateRange,\n  isResizable,\n  isDeletable,\n  isMovable\n}: ScheduleProps & {\n  cellIndex: number;\n  cellArray: CellInfo[];\n  className?: string;\n  rangeIndex: number;\n  cell: CellInfo;\n}) {\n  const ref = useRef(null);\n  const [modifiedCell, setModifiedCell] = useState(cell);\n  const originalRect = useMemo(() => grid.getRectFromCell(cell), [cell, grid]);\n  const rect = useMemo(() => grid.getRectFromCell(modifiedCell), [\n    modifiedCell,\n    grid\n  ]);\n\n  useEffect(() => {\n    setModifiedCell(cell);\n  }, [cell]);\n\n  const modifiedDateRange = useMemo(() => cellInfoToDateRange(modifiedCell), [\n    modifiedCell\n  ]);\n\n  const handleDelete = useCallback(() => {\n    if (!isDeletable) {\n      return;\n    }\n\n    onChange && onChange(undefined, rangeIndex);\n  }, [ref.current, onChange, isDeletable, rangeIndex]);\n\n  useMousetrap('del', handleDelete, ref.current);\n\n  const { top, left, width, height } = rect;\n\n  const style = { width, height };\n\n  const isStart = cellIndex === 0;\n  const isEnd = cellIndex === cellArray.length - 1;\n\n  const handleStop = useCallback(() => {\n    onChange && onChange(cellInfoToDateRange(modifiedCell), rangeIndex);\n  }, [modifiedCell, rangeIndex, cellInfoToDateRange, onChange]);\n\n  useMousetrap(\n    'up',\n    () => {\n      if (!isMovable) {\n        return;\n      }\n\n      if (modifiedCell.startY === 0) {\n        return;\n      }\n\n      const newCell = {\n        ...modifiedCell,\n        startY: modifiedCell.startY - 1,\n        endY: modifiedCell.endY - 1\n      };\n\n      onChange && onChange(cellInfoToDateRange(newCell), rangeIndex);\n    },\n    ref.current\n  );\n\n  useMousetrap(\n    'down',\n    () => {\n      if (!isMovable) {\n        return;\n      }\n\n      if (modifiedCell.endY === grid.numVerticalCells - 1) {\n        return;\n      }\n\n      const newCell = {\n        ...modifiedCell,\n        startY: modifiedCell.startY + 1,\n        endY: modifiedCell.endY + 1\n      };\n\n      onChange && onChange(cellInfoToDateRange(newCell), rangeIndex);\n    },\n    ref.current\n  );\n\n  const handleDrag: DraggableEventHandler = useCallback(\n    (event, { y }) => {\n      if (!isMovable) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const _start = y;\n      const _end = _start + rect.height;\n      const newTop = Math.min(_start, _end);\n      const newBottom = newTop + rect.height;\n\n      if (newTop === top) {\n        return;\n      }\n\n      const newRect = {\n        ...rect,\n        top: newTop,\n        bottom: newBottom\n      };\n\n      const { startY, endY } = grid.getCellFromRect(newRect);\n\n      const newCell = {\n        ...cell,\n        startY,\n        endY\n      };\n\n      invariant(\n        newCell.spanY === cell.spanY,\n        `Expected the dragged time cell to have the same height (${\n          newCell.spanY\n        }, ${cell.spanY})`\n      );\n      setModifiedCell(newCell);\n    },\n    [grid, rect, isMovable, setModifiedCell]\n  );\n\n  const handleResize: ResizeCallback = useCallback(\n    (event, direction, _ref, delta) => {\n      if (!isResizable) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (delta.height === 0) {\n        return;\n      }\n\n      const newSize = {\n        height: delta.height + rect.height,\n        width: delta.width + rect.width\n      };\n\n      const newRect = {\n        ...originalRect,\n        ...newSize\n      };\n\n      if (direction.includes('top')) {\n        newRect.top -= delta.height;\n      } else if (direction.includes('bottom')) {\n        newRect.bottom += delta.height;\n      }\n\n      const { spanY, startY, endY } = grid.getCellFromRect(newRect);\n      const newCell = {\n        ...cell,\n        spanY,\n        startY,\n        endY\n      };\n\n      setModifiedCell(newCell);\n    },\n    [grid, rect, isResizable, setModifiedCell, originalRect]\n  );\n\n  return (\n    <Draggable\n      axis={isMovable ? 'y' : 'none'}\n      bounds={{\n        top: 0,\n        bottom: grid.totalHeight - height,\n        left: 0,\n        right: grid.totalWidth\n      }}\n      position={{ x: left, y: top }}\n      onDrag={handleDrag}\n      onStop={handleStop}\n      cancel={`.${classes.handle}`}\n    >\n      <button\n        className={classcat([\n          classes['event'],\n          classes['button-reset'],\n          classes['range-box'],\n          className,\n          {\n            [classes['is-draggable']]: isMovable,\n            [classes['is-being-edited']]: isBeingEdited && isBeingEdited(cell)\n          }\n        ])}\n        ref={ref}\n        tabIndex={0}\n        style={style}\n      >\n        <Resizable\n          size={originalRect}\n          onResize={handleResize}\n          onResizeStop={handleStop}\n          handleWrapperClass={classes['handle-wrapper']}\n          enable={\n            isResizable\n              ? {\n                  top: true,\n                  bottom: true\n                }\n              : {}\n          }\n          handleClasses={{\n            bottom: classcat([classes['handle'], classes.bottom]),\n            bottomLeft: classcat([classes['handle'], classes['bottom-left']]),\n            bottomRight: classcat([classes['handle'], classes['bottom-right']]),\n            left: classcat([classes['handle'], classes.left]),\n            right: classcat([classes['handle'], classes.right]),\n            top: classcat([classes['handle'], classes.top]),\n            topLeft: classcat([classes['handle'], classes['top-left']]),\n            topRight: classcat([classes['handle'], classes['top-right']])\n          }}\n        >\n          <div className={classes['event-content']} style={style}>\n            <span className={classes['start']}>\n              {isStart && format(modifiedDateRange[0], 'h:mma')}\n            </span>\n            <span className={classes['end']}>\n              {isEnd && format(modifiedDateRange[1], 'h:mma')}\n            </span>\n          </div>\n        </Resizable>\n      </button>\n    </Draggable>\n  );\n});\n","import React from 'react';\nimport { CellInfo, DateRange, Event, Grid, OnChangeCallback } from '../types';\nimport { RangeBox } from './RangeBox';\n\nexport type ScheduleProps = {\n  classes: Record<string, string>;\n  grid: Grid;\n  onChange?: OnChangeCallback;\n  isResizable?: boolean;\n  isDeletable?: boolean;\n  isMovable?: boolean;\n  isBeingEdited?(cell: CellInfo): boolean;\n  cellInfoToDateRange(cell: CellInfo): DateRange;\n};\n\nexport const Schedule = React.memo(function Schedule({\n  classes,\n  ranges,\n  grid,\n  className,\n  onChange,\n  isResizable,\n  isDeletable,\n  isMovable,\n  cellInfoToDateRange,\n  dateRangeToCells,\n  isBeingEdited\n}: {\n  dateRangeToCells(range: DateRange): CellInfo[];\n  ranges: Event;\n  className?: string;\n  classes: Record<string, string>;\n} & ScheduleProps) {\n  return (\n    <div className={classes['range-boxes']}>\n      {ranges.map((dateRange, rangeIndex) => {\n        return (\n          <span key={rangeIndex}>\n            {dateRangeToCells(dateRange).map((cell, cellIndex, array) => {\n              return (\n                <RangeBox\n                  classes={classes}\n                  key={cellIndex}\n                  isResizable={isResizable}\n                  isMovable={isMovable}\n                  isDeletable={isDeletable}\n                  cellInfoToDateRange={cellInfoToDateRange}\n                  cellArray={array}\n                  cellIndex={cellIndex}\n                  rangeIndex={rangeIndex}\n                  className={className}\n                  isBeingEdited={isBeingEdited}\n                  onChange={onChange}\n                  grid={grid}\n                  cell={cell}\n                />\n              );\n            })}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n","export const createPageMapCoordsToContainer = (container: HTMLElement) => {\n  return (event: React.MouseEvent | MouseEvent | TouchEvent) => {\n    let clientX: number;\n    let clientY: number;\n    let pageX: number;\n    let pageY: number;\n\n    if ('changedTouches' in event) {\n      ({ clientX, clientY, pageX, pageY } = event.changedTouches[0]);\n    } else {\n      ({ clientX, clientY, pageX, pageY } = event);\n    }\n    const { top, left } = container.getBoundingClientRect();\n\n    return {\n      clientX,\n      clientY,\n      pageX,\n      pageY,\n      top,\n      left,\n      x: clientX - left,\n      y: clientY - top\n    };\n  };\n};\n","import { useState } from 'react';\nimport { useEventListener } from './useEventListener';\n\nexport function useScrollPosition(\n  root: React.RefObject<HTMLElement>,\n  { passive = true, enabled = true } = {}\n) {\n  const [position, setPosition] = useState({ scrollTop: 0, scrollLeft: 0 });\n\n  useEventListener(\n    root,\n    'scroll',\n    event => {\n      if (event && event.target) {\n        // @ts-ignore\n        const { scrollTop, scrollLeft } = event.target;\n        setPosition({ scrollTop, scrollLeft });\n      }\n    },\n    { passive },\n    { enabled }\n  );\n\n  return position;\n}\n","import { useEffect } from 'react';\n\nexport function useEventListener<\n  K extends keyof HTMLElementEventMap,\n  Element extends HTMLElement\n>(\n  ref: React.RefObject<Element>,\n  event: K,\n  listener: (this: Element, event: HTMLElementEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n  { enabled = true } = {}\n) {\n  useEffect(() => {\n    if (ref.current === null) {\n      return;\n    }\n\n    if (enabled) {\n      ref.current.addEventListener(event, listener, options);\n    } else if (listener) {\n      ref.current.removeEventListener(event, listener);\n    }\n\n    return () => {\n      if (!ref.current) {\n        return;\n      }\n\n      ref.current.removeEventListener(event, listener);\n    };\n  }, [ref.current, listener, options, enabled]);\n}\n","import React, { useMemo } from 'react';\nimport { useScrollPosition } from './useScrollPosition';\n\nexport function useStickyStyle(\n  scrollParent: React.RefObject<HTMLElement>,\n  { top = false, left = false }: { top?: boolean; left?: boolean }\n) {\n  const { scrollLeft, scrollTop } = useScrollPosition(scrollParent, {\n    enabled: top || left\n  });\n\n  const stickyStyle = useMemo<React.CSSProperties>(\n    () => ({\n      transform: `translate(${left ? scrollLeft : 0}px, ${\n        top ? scrollTop : 0\n      }px)`,\n      zIndex: 3\n    }),\n    [left ? scrollLeft : 0, top ? scrollTop : 0]\n  );\n\n  return stickyStyle;\n}\n","export const getSpan = (x1: number, x2: number) => 1 + Math.abs(x2 - x1);\n","import { addMinutes, addDays } from 'date-fns';\n\nexport const cellToDate = ({\n  startX,\n  startY,\n  toMin,\n  originDate\n}: {\n  startX: number;\n  startY: number;\n  toMin: (y: number) => number;\n  toDay: (x: number) => number;\n  originDate: Date;\n}) => addMinutes(addDays(originDate, startX), toMin(startY));\n","import { Event } from '../types';\n// @ts-ignore\nimport _mergeRanges from 'merge-ranges';\nimport { compareAsc } from 'date-fns';\n\nexport function mergeRanges(event: Event): Event {\n  return _mergeRanges([...event].map(d => d.map(c => new Date(c))));\n}\n\nexport function mergeEvents(event1: Event, event2: Event | null): Event {\n  if (event2 === null) {\n    return event1;\n  }\n\n  return mergeRanges([...event1, ...event2]).sort((range1, range2) =>\n    compareAsc(range1[0], range2[0])\n  );\n}\n","import useComponentSize from '@rehooks/component-size';\nimport classcat from 'classcat';\nimport { addDays, format } from 'date-fns';\nimport invariant from 'invariant';\nimport { times } from 'lodash';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport 'resize-observer-polyfill/dist/ResizeObserver.global';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport useUndo from 'use-undo';\nimport { Schedule } from './Schedule';\nimport { useClickAndDrag } from '../hooks/useClickAndDrag';\nimport useMousetrap from '../hooks/useMousetrap';\nimport { useStickyStyle } from '../hooks/useStickyStyle';\nimport {\n  CellInfo,\n  DateRange,\n  Event as CalendarEvent,\n  Grid,\n  OnChangeCallback\n} from '../types';\nimport { createGrid } from '../utils/createGrid';\nimport { createMapCellInfoToContiguousDateRange } from '../utils/createMapCellInfoToContiguousDateRange';\nimport {\n  createMapCellInfoToRecurringTimeRange,\n  RecurringTimeRange\n} from '../utils/createMapCellInfoToRecurringTimeRange';\nimport { createMapDateRangeToCells } from '../utils/createMapDateRangeToCells';\nimport { mergeEvents, mergeRanges } from '../utils/mergeEvents';\n\nconst MINS_IN_DAY = 24 * 60;\nconst horizontalPrecision = 1;\nconst toDay = (x: number) => x * horizontalPrecision;\nconst toX = (days: number) => days / horizontalPrecision;\n\nexport const TimeGridScheduler = React.memo(function TimeGridScheduler({\n  verticalPrecision = 30,\n  visualGridVerticalPrecision = 30,\n  schedule,\n  originDate = new Date(),\n  classes\n}: {\n  originDate?: Date;\n  verticalPrecision?: number;\n  visualGridVerticalPrecision?: number;\n  schedule: CalendarEvent;\n  classes: Record<string, string>;\n}) {\n  const numVerticalCells = MINS_IN_DAY / verticalPrecision;\n  const numHorizontalCells = 7 / horizontalPrecision;\n  const toMin = useCallback((y: number) => y * verticalPrecision, [\n    verticalPrecision\n  ]);\n  const toY = (mins: number) => mins / verticalPrecision;\n\n  const cellInfoToDateRanges = useMemo(\n    () =>\n      createMapCellInfoToRecurringTimeRange({\n        originDate,\n        fromY: toMin,\n        fromX: toDay\n      }),\n    [toMin, toDay, originDate]\n  );\n\n  const cellInfoToSingleDateRange = useCallback(\n    (cell: CellInfo): DateRange => {\n      const [first, ...rest] = cellInfoToDateRanges(cell);\n\n      invariant(\n        rest.length === 0,\n        `Expected \"cellInfoToSingleDateRange\" to return a single date range, found ${\n          rest.length\n        } additional ranges instead. This is a bug in @remotelock/weekly-scheduler`\n      );\n\n      return first;\n    },\n    [cellInfoToDateRanges]\n  );\n\n  const dateRangeToCells = useMemo(\n    () =>\n      createMapDateRangeToCells({\n        originDate,\n        numVerticalCells,\n        numHorizontalCells,\n        toX,\n        toY\n      }),\n    [toY, toX, numVerticalCells, numHorizontalCells, originDate]\n  );\n\n  const root = useRef<HTMLDivElement | null>(null);\n  const parent = useRef<HTMLDivElement | null>(null);\n  const timelineStickyStyle = useStickyStyle(root, { top: false, left: true });\n  const headerStickyStyle = useStickyStyle(root, { top: false, left: false });\n\n  const size = useComponentSize(parent);\n  const {\n    style,\n    box,\n    isDragging,\n    hasFinishedDragging,\n    cancel\n  } = useClickAndDrag(parent);\n  const [\n    pendingCreation,\n    setPendingCreation\n  ] = useState<RecurringTimeRange | null>(null);\n  const [\n    scheduleState,\n    {\n      set: setSchedule,\n      undo: undoSchedule,\n      redo: redoSchedule,\n      canUndo: canUndoSchedule,\n      canRedo: canRedoSchedule\n    }\n  ] = useUndo<CalendarEvent>(schedule);\n\n  const { totalHeight, totalWidth } = useMemo(() => {\n    let totalHeight: number | null = null;\n    let totalWidth: number | null = null;\n    if (parent.current !== null) {\n      ({ scrollHeight: totalHeight, scrollWidth: totalWidth } = parent.current);\n    }\n\n    return { totalHeight, totalWidth };\n  }, [parent.current, size]);\n\n  const grid = useMemo<Grid | null>(() => {\n    if (totalHeight === null || totalWidth === null) {\n      return null;\n    }\n\n    return createGrid({\n      totalHeight,\n      totalWidth,\n      numHorizontalCells,\n      numVerticalCells\n    });\n  }, [totalHeight, totalWidth, numHorizontalCells, numVerticalCells]);\n\n  useEffect(() => {\n    if (grid === null || box === null) {\n      setPendingCreation(null);\n      return;\n    }\n\n    const constrainedBox = box;\n    const cell = grid.getCellFromRect(constrainedBox);\n    const dateRanges = cellInfoToDateRanges(cell);\n    const event = dateRanges;\n    setPendingCreation(event);\n  }, [box, grid, setPendingCreation]);\n\n  useEffect(() => {\n    if (hasFinishedDragging) {\n      setSchedule(mergeEvents(scheduleState.present, pendingCreation));\n      setPendingCreation(null);\n    }\n  }, [\n    hasFinishedDragging,\n    setSchedule,\n    setPendingCreation,\n    pendingCreation,\n    scheduleState.present\n  ]);\n\n  useMousetrap(\n    'ctrl+z',\n    () => {\n      if (!canUndoSchedule) {\n        return;\n      }\n\n      undoSchedule();\n    },\n    document\n  );\n\n  useMousetrap(\n    'ctrl+shift+z',\n    () => {\n      if (!canRedoSchedule) {\n        return;\n      }\n\n      redoSchedule();\n    },\n    document\n  );\n\n  useMousetrap(\n    'esc',\n    () => {\n      if (pendingCreation) {\n        cancel();\n      }\n    },\n    document\n  );\n\n  useEffect(() => {\n    cancel();\n  }, [size]);\n\n  const handleEventChange = useCallback<OnChangeCallback>(\n    (newDateRange, rangeIndex) => {\n      if (!scheduleState.present && newDateRange) {\n        return [newDateRange];\n      }\n\n      const newSchedule = [...scheduleState.present];\n\n      if (!newDateRange) {\n        newSchedule.splice(rangeIndex, 1);\n      } else {\n        newSchedule[rangeIndex] = newDateRange;\n      }\n\n      setSchedule(mergeRanges(newSchedule));\n    },\n    [scheduleState.present]\n  );\n\n  const getDateRangeForVisualGrid = useMemo(\n    () =>\n      createMapCellInfoToContiguousDateRange({\n        originDate,\n        fromX: toDay,\n        fromY: y => y * visualGridVerticalPrecision\n      }),\n    [visualGridVerticalPrecision, toDay, originDate]\n  );\n\n  useEffect(() => {\n    if (!root.current || !root.current.contains(document.activeElement)) {\n      return;\n    }\n\n    document.activeElement &&\n      scrollIntoView(document.activeElement, {\n        scrollMode: 'if-needed',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n  }, [root.current, document.activeElement, scheduleState.present]);\n\n  return (\n    <div\n      ref={root}\n      className={classcat([\n        classes['root'],\n        { [classes['no-scroll']]: isDragging }\n      ])}\n    >\n      <div style={timelineStickyStyle} className={classes['timeline']}>\n        <div className={classes['header']}>\n          <div className={classes['day-column']}>\n            <div className={classcat([classes['cell'], classes.title])}>T</div>\n          </div>\n        </div>\n        <div className={classes['calendar']}>\n          <div className={classes['day-column']}>\n            <div className={classes['day-hours']}>\n              {times(48).map(timeIndex => {\n                let startText = '';\n                if (timeIndex % 2 === 0) {\n                  const [[start]] = getDateRangeForVisualGrid({\n                    startX: 0,\n                    startY: timeIndex,\n                    endX: 0,\n                    endY: timeIndex + 1,\n                    spanX: 1,\n                    spanY: 1\n                  });\n                  startText = format(start, 'h a');\n                }\n\n                return (\n                  <div key={timeIndex} className={classes['cell']}>\n                    <div className={classes['time']}>{startText}</div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div\n          style={headerStickyStyle}\n          className={classcat([classes['calendar'], classes.header])}\n        >\n          {times(7).map(i => (\n            <div key={i} className={classes['day-column']}>\n              <div className={classcat([classes['cell'], classes.title])}>\n                {format(addDays(originDate, i), 'ddd')}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className={classes['layer-container']}>\n          {isDragging && (\n            <div className={classes['drag-box']} style={style}>\n              {hasFinishedDragging && <div className={classes['popup']} />}\n            </div>\n          )}\n          {grid && pendingCreation && isDragging && (\n            <Schedule\n              classes={classes}\n              dateRangeToCells={dateRangeToCells}\n              cellInfoToDateRange={cellInfoToSingleDateRange}\n              className={classes['is-pending-creation']}\n              ranges={mergeEvents(scheduleState.present, pendingCreation)}\n              grid={grid}\n            />\n          )}\n          {grid && !pendingCreation && (\n            <Schedule\n              classes={classes}\n              dateRangeToCells={dateRangeToCells}\n              cellInfoToDateRange={cellInfoToSingleDateRange}\n              isResizable\n              isMovable\n              isDeletable\n              onChange={handleEventChange}\n              ranges={scheduleState.present}\n              grid={grid}\n            />\n          )}\n\n          <div ref={parent} className={classes['calendar']}>\n            {times(7).map(dayIndex => {\n              return (\n                <div key={dayIndex} className={classes['day-column']}>\n                  <div className={classes['day-hours']}>\n                    {times(48).map(timeIndex => {\n                      return (\n                        <div key={timeIndex} className={classes['cell']}>\n                          <div className={classes['debug']}>\n                            ({dayIndex}, {timeIndex})\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { DateRange, MapCellInfoToDateRange } from '../types';\nimport { range } from 'lodash';\nimport {\n  addMinutes,\n  isBefore,\n  endOfDay,\n  isEqual,\n  subDays,\n  startOfDay\n} from 'date-fns';\nimport { cellToDate } from './cellToDate';\n\nexport type RecurringTimeRange = DateRange[];\n\nexport const createMapCellInfoToRecurringTimeRange: MapCellInfoToDateRange = ({\n  fromY: toMin,\n  fromX: toDay,\n  originDate\n}) => ({ startX, startY, endX, spanY }) => {\n  const result = range(startX, endX + 1)\n    .map(i => {\n      const startDate = cellToDate({\n        startX: i,\n        startY,\n        toMin,\n        toDay,\n        originDate\n      });\n      let endDate = addMinutes(startDate, toMin(spanY));\n\n      if (isEqual(endDate, startOfDay(endDate))) {\n        endDate = endOfDay(subDays(endDate, 1));\n      }\n\n      const range: DateRange = isBefore(startDate, endDate)\n        ? [startDate, endDate]\n        : [endDate, startDate];\n\n      return range;\n    })\n    .sort((rangeA, rangeB) => (isBefore(rangeA[0], rangeB[0]) ? 0 : 1));\n\n  return result;\n};\n","import { DateRange, CellInfo } from '../types';\nimport {\n  startOfDay,\n  differenceInDays,\n  differenceInMinutes,\n  isEqual\n} from 'date-fns';\nimport { range } from 'lodash';\nimport { getSpan } from './getSpan';\n\nexport const createMapDateRangeToCells = ({\n  toX = (x: number) => x,\n  toY,\n  numVerticalCells,\n  originDate\n}: {\n  toX: (day: number) => number;\n  toY: (min: number) => number;\n  numHorizontalCells: number;\n  numVerticalCells: number;\n  originDate: Date;\n}) => ([start, end]: DateRange): CellInfo[] => {\n  const originOfThisDay = startOfDay(start);\n  const _startX = toX(differenceInDays(start, originDate));\n  const _startY = toY(differenceInMinutes(start, originOfThisDay));\n  const _endX = toX(differenceInDays(end, originDate));\n  const _endY = toY(differenceInMinutes(end, startOfDay(end))) - 1;\n\n  const cells = range(_startX, _endX + 1).map(i => {\n    const startX = i;\n    const endX = i;\n    const atStart = i === _startX;\n    const atEnd = i === _endX;\n    const startY = !atStart ? 0 : _startY;\n    const endY = !atEnd ? numVerticalCells - 1 : _endY;\n    const spanX = getSpan(startX, endX);\n    const spanY = getSpan(startY, endY);\n\n    return {\n      startX,\n      startY,\n      endX,\n      endY,\n      spanX,\n      spanY\n    };\n  });\n\n  if (isEqual(end, startOfDay(end))) {\n    cells.pop();\n  }\n\n  return cells;\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { isEqual } from 'lodash';\nimport { fromEvent, merge, of } from 'rxjs';\nimport {\n  tap,\n  map,\n  takeUntil,\n  mergeMap,\n  startWith,\n  distinctUntilChanged,\n  filter,\n  delay\n} from 'rxjs/operators';\nimport { createPageMapCoordsToContainer } from '../utils/createPageMapCoordsToContainer';\nimport { Rect } from '../types';\n\nexport function useClickAndDrag(ref: React.RefObject<HTMLElement>) {\n  const [style, setStyle] = useState({ top: 0, left: 0, width: 0, height: 0 });\n  const [box, setBox] = useState<Rect | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hasFinishedDragging, setHasFinishedDragging] = useState(false);\n\n  useEffect(() => {\n    const container = ref.current;\n    if (!container) {\n      return;\n    }\n\n    const mapCoordsToContainer = createPageMapCoordsToContainer(container);\n    const prevent = tap((e: TouchEvent) => {\n      e.preventDefault();\n      e.stopPropagation();\n    });\n\n    const touchMove$ = fromEvent<TouchEvent>(window, 'touchmove', {\n      passive: false\n    }).pipe(prevent);\n\n    const touchEnd$ = fromEvent<TouchEvent>(window, 'touchend', {\n      passive: true\n    });\n\n    const touchStart$ = fromEvent<TouchEvent>(container, 'touchstart', {\n      passive: false\n    });\n\n    const touchStartWithDelay$ = touchStart$.pipe(\n      mergeMap(start =>\n        of(start).pipe(\n          delay(300),\n          takeUntil(touchMove$),\n          prevent\n        )\n      )\n    );\n\n    const mouseDown$ = fromEvent<MouseEvent>(container, 'mousedown', {\n      passive: true\n    }).pipe(filter(event => event.which === 1));\n\n    const mouseMove$ = fromEvent<MouseEvent>(window, 'mousemove', {\n      passive: true\n    });\n\n    const mouseUp$ = fromEvent<MouseEvent>(window, 'mouseup', {\n      passive: true\n    });\n\n    const dragStart$ = merge(mouseDown$, touchStartWithDelay$).pipe(\n      map(mapCoordsToContainer)\n    );\n\n    const dragEnd$ = merge(mouseUp$, touchEnd$).pipe(\n      map(mapCoordsToContainer),\n      tap(() => {\n        setIsDragging(false);\n        setHasFinishedDragging(true);\n      })\n    );\n\n    const move$ = merge(mouseMove$, touchMove$).pipe(map(mapCoordsToContainer));\n\n    const box$ = dragStart$.pipe(\n      tap(() => {\n        setIsDragging(true);\n        setHasFinishedDragging(false);\n      }),\n      mergeMap(down => {\n        return move$.pipe(\n          startWith(down),\n          map(\n            (move): Rect => {\n              const startX = Math.max(down.x, 0);\n              const startY = Math.max(down.y, 0);\n              const endX = Math.min(move.x, container.scrollWidth);\n              const endY = Math.min(move.y, container.scrollHeight);\n              const top = Math.min(startY, endY);\n              const bottom = Math.max(startY, endY);\n              const left = Math.min(startX, endX);\n              const right = Math.max(startX, endX);\n\n              return {\n                startX,\n                startY,\n                endX,\n                endY,\n                top,\n                bottom,\n                left,\n                right,\n                width: right - left,\n                height: bottom - top\n              };\n            }\n          ),\n          takeUntil(dragEnd$)\n        );\n      }),\n      distinctUntilChanged(isEqual)\n    );\n\n    const style$ = box$.pipe(\n      map(({ top, left, width, height }) => ({\n        top,\n        left,\n        width,\n        height\n      }))\n    );\n\n    const boxSubscriber = box$.subscribe(setBox);\n    const styleSubscriber = style$.subscribe(setStyle);\n\n    return () => {\n      boxSubscriber.unsubscribe();\n      styleSubscriber.unsubscribe();\n    };\n  }, []);\n\n  const cancel = useCallback(() => {\n    setIsDragging(false);\n    setHasFinishedDragging(false);\n    setBox(null);\n  }, [setBox]);\n\n  return { style, box, isDragging, cancel, hasFinishedDragging };\n}\n","import { Grid, CellInfo, Rect } from '../types';\nimport { clamp, floor, round } from 'lodash';\nimport { getSpan } from './getSpan';\n\nexport const createGrid = ({\n  totalHeight,\n  totalWidth,\n  numVerticalCells,\n  numHorizontalCells\n}: {\n  totalHeight: number;\n  totalWidth: number;\n  numVerticalCells: number;\n  numHorizontalCells: number;\n}): Grid => {\n  const cellHeight = floor(totalHeight / numVerticalCells);\n  const cellWidth = floor(totalWidth / numHorizontalCells);\n\n  return {\n    totalHeight,\n    totalWidth,\n    numVerticalCells,\n    numHorizontalCells,\n    cellWidth,\n    cellHeight,\n\n    getRectFromCell(data: CellInfo) {\n      const { endX, startX, endY, startY, spanX, spanY } = data;\n      const bottom = endY * this.cellHeight;\n      const top = startY * this.cellHeight;\n      const left = startX * this.cellWidth;\n      const right = endX * this.cellWidth;\n      const height = spanY * this.cellHeight;\n      const width = spanX * this.cellWidth;\n\n      return {\n        bottom,\n        top,\n        left,\n        right,\n        height,\n        width,\n\n        // @TODO: check the math\n        startX: startX * this.cellWidth,\n        endX: endX * this.cellWidth,\n        startY: startY * this.cellHeight,\n        endY: endY * this.cellHeight\n      };\n    },\n\n    getCellFromRect(data: Rect) {\n      const startX = clamp(\n        floor(data.left / this.cellWidth),\n        0,\n        numHorizontalCells - 1\n      );\n      const startY = clamp(\n        round(data.top / this.cellHeight),\n        0,\n        numVerticalCells - 1\n      );\n      const endX = clamp(\n        floor(data.right / this.cellWidth),\n        0,\n        numHorizontalCells - 1\n      );\n      const endY = clamp(\n        round(data.bottom / this.cellHeight),\n        0,\n        numVerticalCells - 1\n      );\n      const spanX = clamp(getSpan(startX, endX), 1, numHorizontalCells);\n      const spanY = clamp(getSpan(startY, endY), 1, numVerticalCells);\n\n      return {\n        spanX,\n        spanY,\n        startX,\n        startY,\n        endX,\n        endY\n      };\n    }\n  };\n};\n","import { MapCellInfoToDateRange } from '../types';\nimport { isBefore } from 'date-fns';\nimport { cellToDate } from './cellToDate';\n\nexport const createMapCellInfoToContiguousDateRange: MapCellInfoToDateRange = ({\n  fromY: toMin,\n  fromX: toDay,\n  originDate\n}) => ({ startX, startY, endX, endY }) => {\n  const startDate = cellToDate({ startX, startY, toMin, toDay, originDate });\n  const endDate = cellToDate({\n    startX: endX,\n    startY: endY,\n    toMin,\n    toDay,\n    originDate\n  });\n\n  return [\n    isBefore(startDate, endDate) ? [startDate, endDate] : [endDate, startDate]\n  ];\n};\n","import { compareAsc, startOfWeek } from 'date-fns';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'resize-observer-polyfill/dist/ResizeObserver.global';\nimport { Event as CalendarEvent } from './types';\n\nimport { TimeGridScheduler } from './components/TimeGridScheduler';\nimport classes from './styles.module.scss';\n\nconst rangeStrings: [string, string][] = [\n  ['2019-03-03T22:45:00.000Z', '2019-03-04T01:15:00.000Z'],\n  ['2019-03-05T22:00:00.000Z', '2019-03-06T01:00:00.000Z'],\n  ['2019-03-04T22:15:00.000Z', '2019-03-05T01:00:00.000Z'],\n  ['2019-03-07T05:30:00.000Z', '2019-03-07T10:00:00.000Z'],\n  ['2019-03-08T22:00:00.000Z', '2019-03-09T01:00:00.000Z'],\n  ['2019-03-09T22:00:00.000Z', '2019-03-10T01:00:00.000Z'],\n  ['2019-03-06T22:00:00.000Z', '2019-03-07T01:00:00.000Z']\n];\n\nconst defaultSchedule: CalendarEvent = rangeStrings\n  .map(range => range.map(dateString => new Date(dateString)) as [Date, Date])\n  .sort((range1, range2) => compareAsc(range1[0], range2[0]));\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <TimeGridScheduler\n    classes={classes}\n    originDate={startOfWeek(new Date('2019-03-04'), { weekStartsOn: 1 })}\n    schedule={defaultSchedule}\n    verticalPrecision={15}\n  />,\n  rootElement\n);\n"],"sourceRoot":""}