{"version":3,"sources":["styles.module.scss","utils/createPageMapCoordsToContainer.ts","hooks/useClickAndDrag.ts","hooks/useMousetrap.ts","hooks/useScrollPosition.ts","hooks/useEventListener.ts","hooks/useStickyStyle.ts","utils/getSpan.ts","utils/cellToDate.ts","utils/mergeEvents.ts","components/Cell.tsx","components/RangeBox.tsx","components/Schedule.tsx","components/TimeGridScheduler.tsx","utils/createMapCellInfoToRecurringTimeRange.ts","utils/createMapDateRangeToCells.ts","utils/createGrid.ts","utils/createMapCellInfoToContiguousDateRange.ts","index.tsx"],"names":["module","exports","no-scroll","root","timeline","debug","debug-active","calendar","react-draggable","handle-wrapper","handle","top","bottom","layer-container","event","drag-box","draggable","button-reset","is-draggable","react-draggable-dragging","is-pending-creation","hours-container","day-column","day-hours","cell","time","title","is-hour-start","header","first","popup","range-boxes","event-content","start","end","createPageMapCoordsToContainer","container","clientX","clientY","pageX","pageY","_event$changedTouches","changedTouches","_container$getBoundin","getBoundingClientRect","left","x","y","prevent","tap","e","preventDefault","stopPropagation","weakMap","WeakMap","useMousetrap","handlerKey","handlerCallback","element","actionRef","useRef","current","useEffect","instance","get","Mousetrap","set","bind","mousetrap","unbind","useScrollPosition","_ref","arguments","length","undefined","_ref$passive","passive","_ref$enabled","enabled","_useState","useState","scrollTop","scrollLeft","_useState2","Object","slicedToArray","position","setPosition","ref","listener","options","addEventListener","removeEventListener","useEventListener","target","_event$target","useStickyStyle","scrollParent","_ref$top","_ref$left","_useScrollPosition","useMemo","transform","concat","zIndex","getSpan","x1","x2","Math","abs","cellToDate","startX","startY","toMin","originDate","addMinutes","addDays","mergeRanges","_mergeRanges","toConsumableArray","map","d","c","Date","mergeEvents","event1","event2","sort","range1","range2","compareAsc","Cell","React","memo","timeIndex","children","classes","_getDateRangeForVisua","getDateRangeForVisualGrid","endX","endY","spanX","spanY","_getDateRangeForVisua2","isHourStart","getMinutes","react_default","a","createElement","className","classcat","defineProperty","RangeBox","_ref3","grid","isBeingEdited","rangeIndex","cellIndex","cellArray","onChange","cellInfoToDateRange","isResizable","isDeletable","isMovable","modifiedCell","setModifiedCell","originalRect","getRectFromCell","rect","modifiedDateRange","useCallback","width","height","isStart","isEnd","handleStop","newCell","objectSpread","numVerticalCells","handleDrag","_ref2","_start","_end","newTop","min","newBottom","newRect","_grid$getCellFromRect","getCellFromRect","invariant","handleResize","direction","delta","newSize","includes","_grid$getCellFromRect2","react_draggable_default","axis","bounds","totalHeight","right","totalWidth","onDrag","onStop","cancel","tabIndex","style","lib","size","onResize","onResizeStop","handleWrapperClass","enable","handleClasses","bottomLeft","bottomRight","topLeft","topRight","format","Schedule","ranges","dateRangeToCells","dateRange","key","array","RangeBox_RangeBox","toDay","toX","days","TimeGridScheduler","_ref$verticalPrecisio","verticalPrecision","_ref$visualGridVertic","visualGridVerticalPrecision","schedule","_ref$originDate","toY","mins","cellInfoToDateRanges","fromY","fromX","range","i","startDate","endDate","isEqual","startOfDay","endOfDay","subDays","isBefore","rangeA","rangeB","createMapCellInfoToRecurringTimeRange","cellInfoToSingleDateRange","_cellInfoToDateRanges","_cellInfoToDateRanges2","toArray","rest","slice","_ref$toX","originOfThisDay","_startX","differenceInDays","_startY","differenceInMinutes","_endX","_endY","cells","pop","createMapDateRangeToCells","numHorizontalCells","parent","timelineStickyStyle","headerStickyStyle","useComponentSize","_useClickAndDrag","setStyle","_useState3","_useState4","box","setBox","_useState5","_useState6","isDragging","setIsDragging","_useState7","_useState8","hasFinishedDragging","setHasFinishedDragging","mapCoordsToContainer","touchMove$","fromEvent","window","pipe","touchEnd$","touchStartWithDelay$","mergeMap","of","delay","takeUntil","mouseDown$","filter","which","mouseMove$","mouseUp$","dragStart$","merge","dragEnd$","move$","box$","down","startWith","move","max","scrollWidth","scrollHeight","distinctUntilChanged","style$","boxSubscriber","subscribe","styleSubscriber","unsubscribe","useClickAndDrag","pendingCreation","setPendingCreation","_useUndo","useUndo","_useUndo2","scheduleState","_useUndo2$","setSchedule","undoSchedule","undo","redoSchedule","redo","canUndoSchedule","canUndo","canRedoSchedule","canRedo","_useMemo","_parent$current","cellHeight","floor","cellWidth","data","this","clamp","round","createGrid","constrainedBox","dateRanges","present","document","handleEventChange","newDateRange","newSchedule","splice","createMapCellInfoToContiguousDateRange","contains","activeElement","scrollIntoView","scrollMode","block","inline","numVisualVerticalCells","times","Cell_Cell","Schedule_Schedule","dayIndex","defaultSchedule","dateString","rootElement","getElementById","ReactDOM","render","TimeGridScheduler_TimeGridScheduler","startOfWeek","weekStartsOn"],"mappings":"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","file":"static/js/main.44b51439.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"no-scroll\":\"styles_no-scroll__1vsU8\",\"root\":\"styles_root__3QAxj\",\"timeline\":\"styles_timeline__106Mk\",\"debug\":\"styles_debug__2SKKM\",\"debug-active\":\"styles_debug-active___9OUc\",\"calendar\":\"styles_calendar__3Xx2Y\",\"react-draggable\":\"styles_react-draggable__2QRVw\",\"handle-wrapper\":\"styles_handle-wrapper__2T7f7\",\"handle\":\"styles_handle__1dKGL\",\"top\":\"styles_top__2FFal\",\"bottom\":\"styles_bottom__3nd0X\",\"layer-container\":\"styles_layer-container__1Quoi\",\"event\":\"styles_event__bjik1\",\"drag-box\":\"styles_drag-box__OvX9t\",\"draggable\":\"styles_draggable__a1ktL\",\"button-reset\":\"styles_button-reset__3_zQt\",\"is-draggable\":\"styles_is-draggable__2U2x2\",\"react-draggable-dragging\":\"styles_react-draggable-dragging__1T3s8\",\"is-pending-creation\":\"styles_is-pending-creation__2vDDI\",\"hours-container\":\"styles_hours-container__3XZzL\",\"day-column\":\"styles_day-column__2sQzS\",\"day-hours\":\"styles_day-hours__3_7p4\",\"cell\":\"styles_cell__1OJUD\",\"time\":\"styles_time__1X-Hn\",\"title\":\"styles_title__2dKTz\",\"is-hour-start\":\"styles_is-hour-start__1Doa3\",\"header\":\"styles_header__1IF59\",\"first\":\"styles_first__1t63n\",\"popup\":\"styles_popup__2oSt1\",\"range-boxes\":\"styles_range-boxes__39XBE\",\"event-content\":\"styles_event-content__1EBie\",\"start\":\"styles_start__2DXVx\",\"end\":\"styles_end__2XnIt\"};","export const createPageMapCoordsToContainer = (container: HTMLElement) => {\n  return (event: React.MouseEvent | MouseEvent | TouchEvent) => {\n    let clientX: number;\n    let clientY: number;\n    let pageX: number;\n    let pageY: number;\n\n    if ('changedTouches' in event) {\n      ({ clientX, clientY, pageX, pageY } = event.changedTouches[0]);\n    } else {\n      ({ clientX, clientY, pageX, pageY } = event);\n    }\n    const { top, left } = container.getBoundingClientRect();\n\n    return {\n      clientX,\n      clientY,\n      pageX,\n      pageY,\n      top,\n      left,\n      x: clientX - left,\n      y: clientY - top\n    };\n  };\n};\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { isEqual } from 'lodash';\nimport { fromEvent, merge, of } from 'rxjs';\nimport {\n  tap,\n  map,\n  takeUntil,\n  mergeMap,\n  startWith,\n  distinctUntilChanged,\n  filter,\n  delay\n} from 'rxjs/operators';\nimport { createPageMapCoordsToContainer } from '../utils/createPageMapCoordsToContainer';\nimport { Rect } from '../types';\n\nconst prevent = tap((e: TouchEvent) => {\n  e.preventDefault();\n  e.stopPropagation();\n});\n\nexport function useClickAndDrag(ref: React.RefObject<HTMLElement>) {\n  const [style, setStyle] = useState({\n    transform: 'translate(0, 0)',\n    width: 0,\n    height: 0\n  });\n  const [box, setBox] = useState<Rect | null>(null);\n  const [isDragging, setIsDragging] = useState(false);\n  const [hasFinishedDragging, setHasFinishedDragging] = useState(false);\n\n  useEffect(() => {\n    const container = ref.current;\n    if (!container) {\n      return;\n    }\n\n    const mapCoordsToContainer = createPageMapCoordsToContainer(container);\n\n    const touchMove$ = fromEvent<TouchEvent>(window, 'touchmove', {\n      passive: false\n    }).pipe(prevent);\n\n    const touchEnd$ = fromEvent<TouchEvent>(window, 'touchend', {\n      passive: true\n    });\n\n    const touchStart$ = fromEvent<TouchEvent>(container, 'touchstart', {\n      passive: false\n    });\n\n    const touchStartWithDelay$ = touchStart$.pipe(\n      mergeMap(start =>\n        of(start).pipe(\n          delay(300),\n          takeUntil(touchMove$),\n          prevent\n        )\n      )\n    );\n\n    const mouseDown$ = fromEvent<MouseEvent>(container, 'mousedown', {\n      passive: true\n    }).pipe(filter(event => event.which === 1));\n\n    const mouseMove$ = fromEvent<MouseEvent>(window, 'mousemove', {\n      passive: true\n    });\n\n    const mouseUp$ = fromEvent<MouseEvent>(window, 'mouseup', {\n      passive: true\n    });\n\n    const dragStart$ = merge(mouseDown$, touchStartWithDelay$).pipe(\n      map(mapCoordsToContainer)\n    );\n\n    const dragEnd$ = merge(mouseUp$, touchEnd$).pipe(\n      map(mapCoordsToContainer),\n      tap(() => {\n        setIsDragging(false);\n        setHasFinishedDragging(true);\n      })\n    );\n\n    const move$ = merge(mouseMove$, touchMove$).pipe(map(mapCoordsToContainer));\n\n    const box$ = dragStart$.pipe(\n      tap(() => {\n        setIsDragging(true);\n        setHasFinishedDragging(false);\n      }),\n      mergeMap(down => {\n        return move$.pipe(\n          startWith(down),\n          map(\n            (move): Rect => {\n              const startX = Math.max(down.x, 0);\n              const startY = Math.max(down.y, 0);\n              const endX = Math.min(move.x, container.scrollWidth);\n              const endY = Math.min(move.y, container.scrollHeight);\n              const top = Math.min(startY, endY);\n              const bottom = Math.max(startY, endY);\n              const left = Math.min(startX, endX);\n              const right = Math.max(startX, endX);\n\n              return {\n                startX,\n                startY,\n                endX,\n                endY,\n                top,\n                bottom,\n                left,\n                right,\n                width: right - left,\n                height: bottom - top\n              };\n            }\n          ),\n          takeUntil(dragEnd$)\n        );\n      }),\n      distinctUntilChanged(isEqual)\n    );\n\n    const style$ = box$.pipe(\n      map(({ top, left, width, height }) => ({\n        transform: `translate(${left}px, ${top}px)`,\n        width,\n        height\n      }))\n    );\n\n    const boxSubscriber = box$.subscribe(setBox);\n    const styleSubscriber = style$.subscribe(setStyle);\n\n    return () => {\n      boxSubscriber.unsubscribe();\n      styleSubscriber.unsubscribe();\n    };\n  }, [ref.current]);\n\n  const cancel = useCallback(() => {\n    setIsDragging(false);\n    setHasFinishedDragging(false);\n    setBox(null);\n  }, [setBox]);\n\n  return { style, box, isDragging, cancel, hasFinishedDragging };\n}\n","import mousetrap from 'mousetrap';\nimport { useEffect, useRef } from 'react';\n\nconst weakMap = new WeakMap<typeof document | Element, MousetrapInstance>();\n\n/**\n * Use mousetrap hook\n *\n * @param handlerKey - A key, key combo or array of combos according to Mousetrap documentation.\n * @param  handlerCallback - A function that is triggered on key combo catch.\n */\nexport default function useMousetrap(\n  handlerKey: string | string[],\n  handlerCallback: () => void,\n  element: typeof document | Element | null\n) {\n  const actionRef = useRef<typeof handlerCallback | null>(null);\n  actionRef.current = handlerCallback;\n\n  useEffect(() => {\n    if (!element) {\n      return;\n    }\n\n    let instance = weakMap.get(element);\n\n    if (!instance) {\n      instance = new Mousetrap(element as Element);\n      weakMap.set(element, instance);\n    }\n\n    instance.bind(handlerKey, () => {\n      typeof actionRef.current === 'function' && actionRef.current();\n    });\n\n    return () => {\n      mousetrap.unbind(handlerKey);\n    };\n  }, [handlerKey, element]);\n}\n","import { useState } from 'react';\nimport { useEventListener } from './useEventListener';\n\nexport function useScrollPosition(\n  root: React.RefObject<HTMLElement>,\n  { passive = true, enabled = true } = {}\n) {\n  const [position, setPosition] = useState({ scrollTop: 0, scrollLeft: 0 });\n\n  useEventListener(\n    root,\n    'scroll',\n    event => {\n      if (event && event.target) {\n        // @ts-ignore\n        const { scrollTop, scrollLeft } = event.target;\n        setPosition({ scrollTop, scrollLeft });\n      }\n    },\n    { passive },\n    { enabled }\n  );\n\n  return position;\n}\n","import { useEffect } from 'react';\n\nexport function useEventListener<\n  K extends keyof HTMLElementEventMap,\n  Element extends HTMLElement\n>(\n  ref: React.RefObject<Element>,\n  event: K,\n  listener: (this: Element, event: HTMLElementEventMap[K]) => any,\n  options?: boolean | AddEventListenerOptions,\n  { enabled = true } = {}\n) {\n  useEffect(() => {\n    if (ref.current === null) {\n      return;\n    }\n\n    if (enabled) {\n      ref.current.addEventListener(event, listener, options);\n    } else if (listener) {\n      ref.current.removeEventListener(event, listener);\n    }\n\n    return () => {\n      if (!ref.current) {\n        return;\n      }\n\n      ref.current.removeEventListener(event, listener);\n    };\n  }, [ref.current, listener, options, enabled]);\n}\n","import React, { useMemo } from 'react';\nimport { useScrollPosition } from './useScrollPosition';\n\nexport function useStickyStyle(\n  scrollParent: React.RefObject<HTMLElement>,\n  { top = false, left = false }: { top?: boolean; left?: boolean }\n) {\n  const { scrollLeft, scrollTop } = useScrollPosition(scrollParent, {\n    enabled: top || left\n  });\n\n  const stickyStyle = useMemo<React.CSSProperties>(\n    () => ({\n      transform: `translate(${left ? scrollLeft : 0}px, ${\n        top ? scrollTop : 0\n      }px)`,\n      zIndex: 3\n    }),\n    [left ? scrollLeft : 0, top ? scrollTop : 0]\n  );\n\n  return stickyStyle;\n}\n","export const getSpan = (x1: number, x2: number) => 1 + Math.abs(x2 - x1);\n","import { addMinutes, addDays } from 'date-fns';\n\nexport const cellToDate = ({\n  startX,\n  startY,\n  toMin,\n  originDate\n}: {\n  startX: number;\n  startY: number;\n  toMin: (y: number) => number;\n  toDay: (x: number) => number;\n  originDate: Date;\n}) => addMinutes(addDays(originDate, startX), toMin(startY));\n","import { Event } from '../types';\n// @ts-ignore\nimport _mergeRanges from 'merge-ranges';\nimport { compareAsc } from 'date-fns';\n\nexport function mergeRanges(event: Event): Event {\n  return _mergeRanges([...event].map(d => d.map(c => new Date(c))));\n}\n\nexport function mergeEvents(event1: Event, event2: Event | null): Event {\n  if (event2 === null) {\n    return event1;\n  }\n\n  return mergeRanges([...event1, ...event2]).sort((range1, range2) =>\n    compareAsc(range1[0], range2[0])\n  );\n}\n","import classcat from 'classcat';\nimport { getMinutes } from 'date-fns';\nimport React from 'react';\nimport { CellInfo, DateRange } from '../types';\n\nexport const Cell = React.memo(function Cell({\n  timeIndex,\n  children,\n  classes,\n  getDateRangeForVisualGrid\n}: {\n  timeIndex: number;\n  classes: Record<string, string>;\n  getDateRangeForVisualGrid(cell: CellInfo): DateRange[];\n  children?(options: { start: Date; isHourStart: boolean }): React.ReactNode;\n}) {\n  const [[start]] = getDateRangeForVisualGrid({\n    startX: 0,\n    startY: timeIndex,\n    endX: 0,\n    endY: timeIndex + 1,\n    spanX: 1,\n    spanY: 1\n  });\n\n  const isHourStart = getMinutes(start) === 0;\n\n  return (\n    <div\n      className={classcat([\n        classes['cell'],\n        { [classes['is-hour-start']]: isHourStart }\n      ])}\n    >\n      {children && children({ start, isHourStart })}\n    </div>\n  );\n});\n","import classcat from 'classcat';\nimport { format } from 'date-fns';\nimport invariant from 'invariant';\nimport Resizable, { ResizeCallback } from 're-resizable';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\nimport useMousetrap from '../hooks/useMousetrap';\nimport { CellInfo } from '../types';\nimport { ScheduleProps } from './Schedule';\n\nexport const RangeBox = React.memo(function RangeBox({\n  classes,\n  grid,\n  isBeingEdited,\n  rangeIndex,\n  cellIndex,\n  cellArray,\n  cell,\n  className,\n  onChange,\n  cellInfoToDateRange,\n  isResizable,\n  isDeletable,\n  isMovable\n}: ScheduleProps & {\n  cellIndex: number;\n  cellArray: CellInfo[];\n  className?: string;\n  rangeIndex: number;\n  cell: CellInfo;\n}) {\n  const ref = useRef(null);\n  const [modifiedCell, setModifiedCell] = useState(cell);\n  const originalRect = useMemo(() => grid.getRectFromCell(cell), [cell, grid]);\n  const rect = useMemo(() => grid.getRectFromCell(modifiedCell), [\n    modifiedCell,\n    grid\n  ]);\n\n  useEffect(() => {\n    setModifiedCell(cell);\n  }, [cell]);\n\n  const modifiedDateRange = useMemo(() => cellInfoToDateRange(modifiedCell), [\n    modifiedCell\n  ]);\n\n  const handleDelete = useCallback(() => {\n    if (!isDeletable) {\n      return;\n    }\n\n    onChange && onChange(undefined, rangeIndex);\n  }, [ref.current, onChange, isDeletable, rangeIndex]);\n\n  useMousetrap('del', handleDelete, ref.current);\n\n  const { top, left, width, height } = rect;\n\n  const isStart = cellIndex === 0;\n  const isEnd = cellIndex === cellArray.length - 1;\n\n  const handleStop = useCallback(() => {\n    onChange && onChange(cellInfoToDateRange(modifiedCell), rangeIndex);\n  }, [modifiedCell, rangeIndex, cellInfoToDateRange, onChange]);\n\n  useMousetrap(\n    'up',\n    () => {\n      if (!isMovable) {\n        return;\n      }\n\n      if (modifiedCell.startY === 0) {\n        return;\n      }\n\n      const newCell = {\n        ...modifiedCell,\n        startY: modifiedCell.startY - 1,\n        endY: modifiedCell.endY - 1\n      };\n\n      onChange && onChange(cellInfoToDateRange(newCell), rangeIndex);\n    },\n    ref.current\n  );\n\n  useMousetrap(\n    'down',\n    () => {\n      if (!isMovable) {\n        return;\n      }\n\n      if (modifiedCell.endY === grid.numVerticalCells - 1) {\n        return;\n      }\n\n      const newCell = {\n        ...modifiedCell,\n        startY: modifiedCell.startY + 1,\n        endY: modifiedCell.endY + 1\n      };\n\n      onChange && onChange(cellInfoToDateRange(newCell), rangeIndex);\n    },\n    ref.current\n  );\n\n  const handleDrag: DraggableEventHandler = useCallback(\n    (event, { y }) => {\n      if (!isMovable) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const _start = y;\n      const _end = _start + rect.height;\n      const newTop = Math.min(_start, _end);\n      const newBottom = newTop + rect.height;\n\n      if (newTop === top) {\n        return;\n      }\n\n      const newRect = {\n        ...rect,\n        top: newTop,\n        bottom: newBottom\n      };\n\n      const { startY, endY } = grid.getCellFromRect(newRect);\n\n      const newCell = {\n        ...cell,\n        startY,\n        endY\n      };\n\n      invariant(\n        newCell.spanY === cell.spanY,\n        `Expected the dragged time cell to have the same height (${\n          newCell.spanY\n        }, ${cell.spanY})`\n      );\n      setModifiedCell(newCell);\n    },\n    [grid, rect, isMovable, setModifiedCell]\n  );\n\n  const handleResize: ResizeCallback = useCallback(\n    (event, direction, _ref, delta) => {\n      if (!isResizable) {\n        return;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (delta.height === 0) {\n        return;\n      }\n\n      const newSize = {\n        height: delta.height + rect.height,\n        width: delta.width + rect.width + 20\n      };\n\n      const newRect = {\n        ...originalRect,\n        ...newSize\n      };\n\n      if (direction.includes('top')) {\n        newRect.top -= delta.height;\n      } else if (direction.includes('bottom')) {\n        newRect.bottom += delta.height;\n      }\n\n      const { spanY, startY, endY } = grid.getCellFromRect(newRect);\n      const newCell = {\n        ...cell,\n        spanY,\n        startY,\n        endY\n      };\n\n      setModifiedCell(newCell);\n    },\n    [grid, rect, isResizable, setModifiedCell, originalRect]\n  );\n\n  return (\n    <Draggable\n      axis={isMovable ? 'y' : 'none'}\n      bounds={{\n        top: 0,\n        bottom: grid.totalHeight - height,\n        left: 0,\n        right: grid.totalWidth\n      }}\n      position={{ x: left, y: top }}\n      onDrag={handleDrag}\n      onStop={handleStop}\n      cancel={`.${classes.handle}`}\n    >\n      <button\n        className={classcat([\n          classes['event'],\n          classes['button-reset'],\n          classes['range-box'],\n          className,\n          {\n            [classes['is-draggable']]: isMovable,\n            [classes['is-being-edited']]: isBeingEdited && isBeingEdited(cell)\n          }\n        ])}\n        ref={ref}\n        tabIndex={0}\n        style={{ width: width - 20, height }}\n      >\n        <Resizable\n          size={{ ...originalRect, width: originalRect.width - 20 }}\n          onResize={handleResize}\n          onResizeStop={handleStop}\n          handleWrapperClass={classes['handle-wrapper']}\n          enable={\n            isResizable\n              ? {\n                  top: true,\n                  bottom: true\n                }\n              : {}\n          }\n          handleClasses={{\n            bottom: classcat([classes['handle'], classes.bottom]),\n            bottomLeft: classcat([classes['handle'], classes['bottom-left']]),\n            bottomRight: classcat([classes['handle'], classes['bottom-right']]),\n            left: classcat([classes['handle'], classes.left]),\n            right: classcat([classes['handle'], classes.right]),\n            top: classcat([classes['handle'], classes.top]),\n            topLeft: classcat([classes['handle'], classes['top-left']]),\n            topRight: classcat([classes['handle'], classes['top-right']])\n          }}\n        >\n          <div className={classes['event-content']}>\n            <span className={classes['start']}>\n              {isStart && format(modifiedDateRange[0], 'h:mma')}\n            </span>\n            <span className={classes['end']}>\n              {isEnd && format(modifiedDateRange[1], 'h:mma')}\n            </span>\n          </div>\n        </Resizable>\n      </button>\n    </Draggable>\n  );\n});\n","import React from 'react';\nimport { CellInfo, DateRange, Event, Grid, OnChangeCallback } from '../types';\nimport { RangeBox } from './RangeBox';\n\nexport type ScheduleProps = {\n  classes: Record<string, string>;\n  grid: Grid;\n  onChange?: OnChangeCallback;\n  isResizable?: boolean;\n  isDeletable?: boolean;\n  isMovable?: boolean;\n  isBeingEdited?(cell: CellInfo): boolean;\n  cellInfoToDateRange(cell: CellInfo): DateRange;\n};\n\nexport const Schedule = React.memo(function Schedule({\n  classes,\n  ranges,\n  grid,\n  className,\n  onChange,\n  isResizable,\n  isDeletable,\n  isMovable,\n  cellInfoToDateRange,\n  dateRangeToCells,\n  isBeingEdited\n}: {\n  dateRangeToCells(range: DateRange): CellInfo[];\n  ranges: Event;\n  className?: string;\n  classes: Record<string, string>;\n} & ScheduleProps) {\n  return (\n    <div className={classes['range-boxes']}>\n      {ranges.map((dateRange, rangeIndex) => {\n        return (\n          <span key={rangeIndex}>\n            {dateRangeToCells(dateRange).map((cell, cellIndex, array) => {\n              return (\n                <RangeBox\n                  classes={classes}\n                  key={cellIndex}\n                  isResizable={isResizable}\n                  isMovable={isMovable}\n                  isDeletable={isDeletable}\n                  cellInfoToDateRange={cellInfoToDateRange}\n                  cellArray={array}\n                  cellIndex={cellIndex}\n                  rangeIndex={rangeIndex}\n                  className={className}\n                  isBeingEdited={isBeingEdited}\n                  onChange={onChange}\n                  grid={grid}\n                  cell={cell}\n                />\n              );\n            })}\n          </span>\n        );\n      })}\n    </div>\n  );\n});\n","import useComponentSize from '@rehooks/component-size';\nimport classcat from 'classcat';\nimport { addDays, format } from 'date-fns';\nimport invariant from 'invariant';\nimport { times } from 'lodash';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState\n} from 'react';\nimport 'resize-observer-polyfill/dist/ResizeObserver.global';\nimport scrollIntoView from 'scroll-into-view-if-needed';\nimport useUndo from 'use-undo';\nimport { useClickAndDrag } from '../hooks/useClickAndDrag';\nimport useMousetrap from '../hooks/useMousetrap';\nimport { useStickyStyle } from '../hooks/useStickyStyle';\nimport {\n  CellInfo,\n  DateRange,\n  Event as CalendarEvent,\n  Grid,\n  OnChangeCallback\n} from '../types';\nimport { createGrid } from '../utils/createGrid';\nimport { createMapCellInfoToContiguousDateRange } from '../utils/createMapCellInfoToContiguousDateRange';\nimport {\n  createMapCellInfoToRecurringTimeRange,\n  RecurringTimeRange\n} from '../utils/createMapCellInfoToRecurringTimeRange';\nimport { createMapDateRangeToCells } from '../utils/createMapDateRangeToCells';\nimport { mergeEvents, mergeRanges } from '../utils/mergeEvents';\nimport { Cell } from './Cell';\nimport { Schedule } from './Schedule';\n\nconst MINS_IN_DAY = 24 * 60;\nconst horizontalPrecision = 1;\nconst toDay = (x: number) => x * horizontalPrecision;\nconst toX = (days: number) => days / horizontalPrecision;\n\nexport const TimeGridScheduler = React.memo(function TimeGridScheduler({\n  verticalPrecision = 30,\n  visualGridVerticalPrecision = 30,\n  schedule,\n  originDate = new Date(),\n  classes\n}: {\n  originDate?: Date;\n  verticalPrecision?: number;\n  visualGridVerticalPrecision?: number;\n  schedule: CalendarEvent;\n  classes: Record<string, string>;\n}) {\n  const numVerticalCells = MINS_IN_DAY / verticalPrecision;\n  const numHorizontalCells = 7 / horizontalPrecision;\n  const toMin = useCallback((y: number) => y * verticalPrecision, [\n    verticalPrecision\n  ]);\n  const toY = (mins: number) => mins / verticalPrecision;\n\n  const cellInfoToDateRanges = useMemo(\n    () =>\n      createMapCellInfoToRecurringTimeRange({\n        originDate,\n        fromY: toMin,\n        fromX: toDay\n      }),\n    [toMin, toDay, originDate]\n  );\n\n  const cellInfoToSingleDateRange = useCallback(\n    (cell: CellInfo): DateRange => {\n      const [first, ...rest] = cellInfoToDateRanges(cell);\n\n      invariant(\n        rest.length === 0,\n        `Expected \"cellInfoToSingleDateRange\" to return a single date range, found ${\n          rest.length\n        } additional ranges instead. This is a bug in @remotelock/weekly-scheduler`\n      );\n\n      return first;\n    },\n    [cellInfoToDateRanges]\n  );\n\n  const dateRangeToCells = useMemo(\n    () =>\n      createMapDateRangeToCells({\n        originDate,\n        numVerticalCells,\n        numHorizontalCells,\n        toX,\n        toY\n      }),\n    [toY, toX, numVerticalCells, numHorizontalCells, originDate]\n  );\n\n  const root = useRef<HTMLDivElement | null>(null);\n  const parent = useRef<HTMLDivElement | null>(null);\n  const timelineStickyStyle = useStickyStyle(root, { top: false, left: true });\n  const headerStickyStyle = useStickyStyle(root, { top: false, left: false });\n\n  const size = useComponentSize(parent);\n  const {\n    style,\n    box,\n    isDragging,\n    hasFinishedDragging,\n    cancel\n  } = useClickAndDrag(parent);\n  const [\n    pendingCreation,\n    setPendingCreation\n  ] = useState<RecurringTimeRange | null>(null);\n  const [\n    scheduleState,\n    {\n      set: setSchedule,\n      undo: undoSchedule,\n      redo: redoSchedule,\n      canUndo: canUndoSchedule,\n      canRedo: canRedoSchedule\n    }\n  ] = useUndo<CalendarEvent>(schedule);\n\n  const { totalHeight, totalWidth } = useMemo(() => {\n    let totalHeight: number | null = null;\n    let totalWidth: number | null = null;\n    if (parent.current !== null) {\n      ({ scrollHeight: totalHeight, scrollWidth: totalWidth } = parent.current);\n    }\n\n    return { totalHeight, totalWidth };\n  }, [parent.current, size]);\n\n  const grid = useMemo<Grid | null>(() => {\n    if (totalHeight === null || totalWidth === null) {\n      return null;\n    }\n\n    return createGrid({\n      totalHeight,\n      totalWidth,\n      numHorizontalCells,\n      numVerticalCells\n    });\n  }, [totalHeight, totalWidth, numHorizontalCells, numVerticalCells]);\n\n  useEffect(() => {\n    if (grid === null || box === null) {\n      setPendingCreation(null);\n      return;\n    }\n\n    const constrainedBox = box;\n    const cell = grid.getCellFromRect(constrainedBox);\n    const dateRanges = cellInfoToDateRanges(cell);\n    const event = dateRanges;\n    setPendingCreation(event);\n  }, [box, grid, setPendingCreation]);\n\n  useEffect(() => {\n    if (hasFinishedDragging) {\n      setSchedule(mergeEvents(scheduleState.present, pendingCreation));\n      setPendingCreation(null);\n    }\n  }, [\n    hasFinishedDragging,\n    setSchedule,\n    setPendingCreation,\n    pendingCreation,\n    scheduleState.present\n  ]);\n\n  useMousetrap(\n    'ctrl+z',\n    () => {\n      if (!canUndoSchedule) {\n        return;\n      }\n\n      undoSchedule();\n    },\n    document\n  );\n\n  useMousetrap(\n    'ctrl+shift+z',\n    () => {\n      if (!canRedoSchedule) {\n        return;\n      }\n\n      redoSchedule();\n    },\n    document\n  );\n\n  useMousetrap(\n    'esc',\n    () => {\n      if (pendingCreation) {\n        cancel();\n      }\n    },\n    document\n  );\n\n  useEffect(() => {\n    cancel();\n  }, [size]);\n\n  const handleEventChange = useCallback<OnChangeCallback>(\n    (newDateRange, rangeIndex) => {\n      if (!scheduleState.present && newDateRange) {\n        return [newDateRange];\n      }\n\n      const newSchedule = [...scheduleState.present];\n\n      if (!newDateRange) {\n        newSchedule.splice(rangeIndex, 1);\n      } else {\n        newSchedule[rangeIndex] = newDateRange;\n      }\n\n      setSchedule(mergeRanges(newSchedule));\n    },\n    [scheduleState.present]\n  );\n\n  const getDateRangeForVisualGrid = useMemo(\n    () =>\n      createMapCellInfoToContiguousDateRange({\n        originDate,\n        fromX: toDay,\n        fromY: y => y * visualGridVerticalPrecision\n      }),\n    [visualGridVerticalPrecision, toDay, originDate]\n  );\n\n  useEffect(() => {\n    if (!root.current || !root.current.contains(document.activeElement)) {\n      return;\n    }\n\n    document.activeElement &&\n      scrollIntoView(document.activeElement, {\n        scrollMode: 'if-needed',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n  }, [root.current, document.activeElement, scheduleState.present]);\n\n  const numVisualVerticalCells = (24 * 60) / visualGridVerticalPrecision;\n\n  return (\n    <div\n      ref={root}\n      className={classcat([\n        classes['root'],\n        { [classes['no-scroll']]: isDragging }\n      ])}\n    >\n      <div style={timelineStickyStyle} className={classes['timeline']}>\n        <div className={classes['header']}>\n          <div className={classes['day-column']}>\n            <div className={classcat([classes['cell'], classes.title])}>T</div>\n          </div>\n        </div>\n        <div className={classes['calendar']}>\n          <div className={classes['day-column']}>\n            <div className={classes['day-hours']}>\n              {times(numVisualVerticalCells).map(timeIndex => {\n                return (\n                  <Cell\n                    classes={classes}\n                    getDateRangeForVisualGrid={getDateRangeForVisualGrid}\n                    key={timeIndex}\n                    timeIndex={timeIndex}\n                  >\n                    {({ start, isHourStart }) => {\n                      if (isHourStart) {\n                        return (\n                          <div className={classes['time']}>\n                            {format(start, 'h a')}\n                          </div>\n                        );\n                      }\n\n                      return null;\n                    }}\n                  </Cell>\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div>\n        <div\n          style={headerStickyStyle}\n          className={classcat([classes['calendar'], classes.header])}\n        >\n          {times(7).map(i => (\n            <div key={i} className={classes['day-column']}>\n              <div className={classcat([classes['cell'], classes.title])}>\n                {format(addDays(originDate, i), 'ddd')}\n              </div>\n            </div>\n          ))}\n        </div>\n        <div className={classes['layer-container']}>\n          {isDragging && (\n            <div className={classes['drag-box']} style={style}>\n              {hasFinishedDragging && <div className={classes['popup']} />}\n            </div>\n          )}\n          {grid && pendingCreation && isDragging && (\n            <Schedule\n              classes={classes}\n              dateRangeToCells={dateRangeToCells}\n              cellInfoToDateRange={cellInfoToSingleDateRange}\n              className={classes['is-pending-creation']}\n              ranges={mergeEvents(scheduleState.present, pendingCreation)}\n              grid={grid}\n            />\n          )}\n          {grid && !pendingCreation && (\n            <Schedule\n              classes={classes}\n              dateRangeToCells={dateRangeToCells}\n              cellInfoToDateRange={cellInfoToSingleDateRange}\n              isResizable\n              isMovable\n              isDeletable\n              onChange={handleEventChange}\n              ranges={scheduleState.present}\n              grid={grid}\n            />\n          )}\n\n          <div ref={parent} className={classes['calendar']}>\n            {times(7).map(dayIndex => {\n              return (\n                <div key={dayIndex} className={classes['day-column']}>\n                  <div className={classes['day-hours']}>\n                    {times(numVisualVerticalCells).map(timeIndex => {\n                      return (\n                        <Cell\n                          classes={classes}\n                          getDateRangeForVisualGrid={getDateRangeForVisualGrid}\n                          key={timeIndex}\n                          timeIndex={timeIndex}\n                        />\n                      );\n                    })}\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n","import { DateRange, MapCellInfoToDateRange } from '../types';\nimport { range } from 'lodash';\nimport {\n  addMinutes,\n  isBefore,\n  endOfDay,\n  isEqual,\n  subDays,\n  startOfDay\n} from 'date-fns';\nimport { cellToDate } from './cellToDate';\n\nexport type RecurringTimeRange = DateRange[];\n\nexport const createMapCellInfoToRecurringTimeRange: MapCellInfoToDateRange = ({\n  fromY: toMin,\n  fromX: toDay,\n  originDate\n}) => ({ startX, startY, endX, spanY }) => {\n  const result = range(startX, endX + 1)\n    .map(i => {\n      const startDate = cellToDate({\n        startX: i,\n        startY,\n        toMin,\n        toDay,\n        originDate\n      });\n      let endDate = addMinutes(startDate, toMin(spanY));\n\n      if (isEqual(endDate, startOfDay(endDate))) {\n        endDate = endOfDay(subDays(endDate, 1));\n      }\n\n      const range: DateRange = isBefore(startDate, endDate)\n        ? [startDate, endDate]\n        : [endDate, startDate];\n\n      return range;\n    })\n    .sort((rangeA, rangeB) => (isBefore(rangeA[0], rangeB[0]) ? 0 : 1));\n\n  return result;\n};\n","import { DateRange, CellInfo } from '../types';\nimport {\n  startOfDay,\n  differenceInDays,\n  differenceInMinutes,\n  isEqual\n} from 'date-fns';\nimport { range } from 'lodash';\nimport { getSpan } from './getSpan';\n\nexport const createMapDateRangeToCells = ({\n  toX = (x: number) => x,\n  toY,\n  numVerticalCells,\n  originDate\n}: {\n  toX: (day: number) => number;\n  toY: (min: number) => number;\n  numHorizontalCells: number;\n  numVerticalCells: number;\n  originDate: Date;\n}) => ([start, end]: DateRange): CellInfo[] => {\n  const originOfThisDay = startOfDay(start);\n  const _startX = toX(differenceInDays(start, originDate));\n  const _startY = toY(differenceInMinutes(start, originOfThisDay));\n  const _endX = toX(differenceInDays(end, originDate));\n  const _endY = toY(differenceInMinutes(end, startOfDay(end))) - 1;\n\n  const cells = range(_startX, _endX + 1).map(i => {\n    const startX = i;\n    const endX = i;\n    const atStart = i === _startX;\n    const atEnd = i === _endX;\n    const startY = !atStart ? 0 : _startY;\n    const endY = !atEnd ? numVerticalCells - 1 : _endY;\n    const spanX = getSpan(startX, endX);\n    const spanY = getSpan(startY, endY);\n\n    return {\n      startX,\n      startY,\n      endX,\n      endY,\n      spanX,\n      spanY\n    };\n  });\n\n  if (isEqual(end, startOfDay(end))) {\n    cells.pop();\n  }\n\n  return cells;\n};\n","import { Grid, CellInfo, Rect } from '../types';\nimport { clamp, floor, round } from 'lodash';\nimport { getSpan } from './getSpan';\n\nexport const createGrid = ({\n  totalHeight,\n  totalWidth,\n  numVerticalCells,\n  numHorizontalCells\n}: {\n  totalHeight: number;\n  totalWidth: number;\n  numVerticalCells: number;\n  numHorizontalCells: number;\n}): Grid => {\n  const cellHeight = floor(totalHeight / numVerticalCells);\n  const cellWidth = floor(totalWidth / numHorizontalCells);\n\n  return {\n    totalHeight,\n    totalWidth,\n    numVerticalCells,\n    numHorizontalCells,\n    cellWidth,\n    cellHeight,\n\n    getRectFromCell(data: CellInfo) {\n      const { endX, startX, endY, startY, spanX, spanY } = data;\n      const bottom = endY * this.cellHeight;\n      const top = startY * this.cellHeight;\n      const left = startX * this.cellWidth;\n      const right = endX * this.cellWidth;\n      const height = spanY * this.cellHeight;\n      const width = spanX * this.cellWidth;\n\n      return {\n        bottom,\n        top,\n        left,\n        right,\n        height,\n        width,\n\n        // @TODO: check the math\n        startX: startX * this.cellWidth,\n        endX: endX * this.cellWidth,\n        startY: startY * this.cellHeight,\n        endY: endY * this.cellHeight\n      };\n    },\n\n    getCellFromRect(data: Rect) {\n      const startX = clamp(\n        floor(data.left / this.cellWidth),\n        0,\n        numHorizontalCells - 1\n      );\n      const startY = clamp(\n        round(data.top / this.cellHeight),\n        0,\n        numVerticalCells - 1\n      );\n      const endX = clamp(\n        floor(data.right / this.cellWidth),\n        0,\n        numHorizontalCells - 1\n      );\n      const endY = clamp(\n        round(data.bottom / this.cellHeight),\n        0,\n        numVerticalCells - 1\n      );\n      const spanX = clamp(getSpan(startX, endX), 1, numHorizontalCells);\n      const spanY = clamp(getSpan(startY, endY), 1, numVerticalCells);\n\n      return {\n        spanX,\n        spanY,\n        startX,\n        startY,\n        endX,\n        endY\n      };\n    }\n  };\n};\n","import { MapCellInfoToDateRange } from '../types';\nimport { isBefore } from 'date-fns';\nimport { cellToDate } from './cellToDate';\n\nexport const createMapCellInfoToContiguousDateRange: MapCellInfoToDateRange = ({\n  fromY: toMin,\n  fromX: toDay,\n  originDate\n}) => ({ startX, startY, endX, endY }) => {\n  const startDate = cellToDate({ startX, startY, toMin, toDay, originDate });\n  const endDate = cellToDate({\n    startX: endX,\n    startY: endY,\n    toMin,\n    toDay,\n    originDate\n  });\n\n  return [\n    isBefore(startDate, endDate) ? [startDate, endDate] : [endDate, startDate]\n  ];\n};\n","import { compareAsc, startOfWeek } from 'date-fns';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'resize-observer-polyfill/dist/ResizeObserver.global';\nimport { Event as CalendarEvent } from './types';\n\nimport { TimeGridScheduler } from './components/TimeGridScheduler';\nimport classes from './styles.module.scss';\n\nconst rangeStrings: [string, string][] = [\n  ['2019-03-03T22:45:00.000Z', '2019-03-04T01:15:00.000Z'],\n  ['2019-03-05T22:00:00.000Z', '2019-03-06T01:00:00.000Z'],\n  ['2019-03-04T22:15:00.000Z', '2019-03-05T01:00:00.000Z'],\n  ['2019-03-07T05:30:00.000Z', '2019-03-07T10:00:00.000Z'],\n  ['2019-03-08T22:00:00.000Z', '2019-03-09T01:00:00.000Z'],\n  ['2019-03-09T22:00:00.000Z', '2019-03-10T01:00:00.000Z'],\n  ['2019-03-06T22:00:00.000Z', '2019-03-07T01:00:00.000Z']\n];\n\nconst defaultSchedule: CalendarEvent = rangeStrings\n  .map(range => range.map(dateString => new Date(dateString)) as [Date, Date])\n  .sort((range1, range2) => compareAsc(range1[0], range2[0]));\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <TimeGridScheduler\n    classes={classes}\n    originDate={startOfWeek(new Date('2019-03-04'), { weekStartsOn: 1 })}\n    schedule={defaultSchedule}\n    verticalPrecision={15}\n  />,\n  rootElement\n);\n"],"sourceRoot":""}